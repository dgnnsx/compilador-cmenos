# Compilação C- para código intermediário
# Arquivo: testes/fatorial.txt
    # -> type int
        # -> function declaration
        # input
        # <- function declaration
    # <- type int

    # -> type void
        # -> function declaration
        # output
        # <- function declaration
    # <- type void

    # -> type int
        # -> function declaration
        # fatorial
                # -> type int
                    # -> identifier
                    # result
                    # <- identifier
                # <- type int

                # -> while
                # -> while: test expression
                    # -> arithmetic operator
                    # -> arithmetic operator: left argument
                        # -> arithmetic operator
                        # -> arithmetic operator: left argument
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # number
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> constant
                                # 0
                                # <- constant
                            # <- arithmetic operator: right argument
                            # relational operator: >
                            # <- Operator
                        # <- arithmetic operator: left argument
                        # -> arithmetic operator: right argument
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # number
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> constant
                                # 99
                                # <- constant
                            # <- arithmetic operator: right argument
                            # relational operator: <
                            # <- Operator
                        # <- arithmetic operator: right argument
                        # BUG: Unknown operator
                        # <- Operator
                    # <- arithmetic operator: left argument
                    # -> arithmetic operator: right argument
                        # -> arithmetic operator
                        # -> arithmetic operator: left argument
                            # -> identifier
                            # number
                            # <- identifier
                        # <- arithmetic operator: left argument
                        # -> arithmetic operator: right argument
                            # -> constant
                            # 98
                            # <- constant
                        # <- arithmetic operator: right argument
                        # relational operator: <
                        # <- Operator
                    # <- arithmetic operator: right argument
                    # BUG: Unknown operator
                    # <- Operator
                # <- while: test expression
                # -> while: while block
                        # -> assign
                        # -> assign: right argument
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # result
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> identifier
                                # number
                                # <- identifier
                            # <- arithmetic operator: right argument
                            # arithmetic operator: *
                            # <- Operator
                        # <- assign: right argument
                        # -> assign: left argument
                            # -> identifier
                            # result
                            # <- identifier
                        # <- assign: left argument
                        # <- assign
                        # -> arithmetic operator
                        # -> arithmetic operator: left argument
                            # -> identifier
                            # number
                            # <- identifier
                        # <- arithmetic operator: left argument
                        # -> arithmetic operator: right argument
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # number
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> constant
                                # 1
                                # <- constant
                            # <- arithmetic operator: right argument
                            # arithmetic operator: -
                            # <- Operator
                        # <- arithmetic operator: right argument
                        # BUG: Unknown operator
                        # <- Operator
                # <- while: while block
                # <- while
                # -> return
                # -> return: expression
                    # -> identifier
                    # result
                    # <- identifier
                # <- return: expression
                # <- return
        # <- function declaration
    # <- type int

    # -> type void
        # -> function declaration
        # main
                # -> type int
                    # -> identifier
                    # number
                    # <- identifier
                # <- type int

                # -> assign
                # -> assign: right argument
                    # -> function call
                    # input
                    # -> function call: arguments
                    # <- function call: arguments
                    # <- function call
                # <- assign: right argument
                # -> assign: left argument
                    # -> identifier
                    # number
                    # <- identifier
                # <- assign: left argument
                # <- assign
                # -> function call
                # output
                # -> function call: arguments
                    # -> function call
                    # fatorial
                    # -> function call: arguments
                        # -> identifier
                        # number
                        # <- identifier
                    # <- function call: arguments
                    # <- function call
                    # -> constant
                    # 2
                    # <- constant
                # <- function call: arguments
                # <- function call
        # <- function declaration
    # <- type void

# Fim da execução.

********** Código intermediário **********

1: (function, fatorial, _, _)
2: (get_param, number, _, _)
3: (label, L1, _, _)
4: (greater_than, number, 0, t1)
5: (less_than, number, 99, t2)
6: (less_than, t1, t2, t3)
7: (less_than, number, 98, t4)
8: (less_than, t3, t4, t5)
9: (jump_if_false, t5, L2, _)
10: (multiplication, result, number, t6)
11: (assign, result, t6, _)
12: (subtraction, number, 1, t7)
13: (subtraction, number, t7, t8)
14: (goto, L1, _, _)
15: (label, L2, _, _)
16: (return, result, _, _)
17: (function, main, _, _)
18: (param_list, 0, _, _)
19: (call, input, 0, t9)
20: (assign, number, t9, _)
21: (param_list, 2, _, _)
22: (param_list, 1, _, _)
23: (set_param, number, _, _)
24: (call, fatorial, 1, t10)
25: (set_param, t10, _, _)
26: (set_param, 2, _, _)
27: (call, output, 2, t11)
28: (halt, _, _, _)
