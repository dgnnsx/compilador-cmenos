# Compilação C- para código intermediário
# Arquivo: testes/gdc_sem_erros.cm
    # -> type int
        # -> identifier
        # globalVar
        # <- identifier
    # <- type int

    # -> type int
        # -> function declaration
        # input
        # <- function declaration
    # <- type int

    # -> type void
        # -> function declaration
        # output
        # <- function declaration
    # <- type void

    # -> type int
        # -> function declaration
        # gdc
                # -> if
                # -> if: test expression
                    # -> arithmetic operator
                    # -> arithmetic operator: left argument
                        # -> identifier
                        # v
                        # <- identifier
                    # <- arithmetic operator: left argument
                    # -> arithmetic operator: right argument
                        # -> constant
                        # 0
                        # <- constant
                    # <- arithmetic operator: right argument
                    # relational operator: ==
                    # <- Operator
                # <- if: test expression
                # -> if: if block
                    # -> return
                    # -> return: expression
                        # -> identifier
                        # u
                        # <- identifier
                    # <- return: expression
                    # <- return
                # <- if: if block
                # -> if: else/end block
                    # -> return
                    # -> return: expression
                        # -> function call
                        # gdc
                        # -> function call: arguments
                            # -> identifier
                            # v
                            # <- identifier
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # u
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> arithmetic operator
                                # -> arithmetic operator: left argument
                                    # -> arithmetic operator
                                    # -> arithmetic operator: left argument
                                        # -> identifier
                                        # u
                                        # <- identifier
                                    # <- arithmetic operator: left argument
                                    # -> arithmetic operator: right argument
                                        # -> identifier
                                        # v
                                        # <- identifier
                                    # <- arithmetic operator: right argument
                                    # arithmetic operator: /
                                    # <- Operator
                                # <- arithmetic operator: left argument
                                # -> arithmetic operator: right argument
                                    # -> identifier
                                    # v
                                    # <- identifier
                                # <- arithmetic operator: right argument
                                # arithmetic operator: *
                                # <- Operator
                            # <- arithmetic operator: right argument
                            # arithmetic operator: -
                            # <- Operator
                        # <- function call: arguments
                        # <- function call
                    # <- return: expression
                    # <- return
                # <- if: else/end block
                # <- if
        # <- function declaration
    # <- type int

    # -> type void
        # -> function declaration
        # main
                # -> type int
                    # -> identifier
                    # x
                    # <- identifier
                # <- type int

                # -> type int
                    # -> identifier
                    # y
                    # <- identifier
                # <- type int

                # -> type int
                    # -> identifier
                    # u
                    # <- identifier
                # <- type int

                # -> type int
                    # -> identifier
                    # i
                    # <- identifier
                # <- type int

                # -> type int
                    # -> vector
                    # v
                    # -> vector: position
                        # -> constant
                        # 10
                        # <- constant
                    # <- vector: position
                    # <- vector
                # <- type int

                # -> type int
                    # -> identifier
                    # teste
                    # <- identifier
                # <- type int

                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # teste
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> arithmetic operator
                    # -> arithmetic operator: left argument
                        # -> constant
                        # 1
                        # <- constant
                    # <- arithmetic operator: left argument
                    # -> arithmetic operator: right argument
                        # -> constant
                        # 2
                        # <- constant
                    # <- arithmetic operator: right argument
                    # arithmetic operator: +
                    # <- Operator
                # <- assign: right argument
                # <- assign
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # x
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> function call
                    # input
                    # -> function call: arguments
                    # <- function call: arguments
                    # <- function call
                # <- assign: right argument
                # <- assign
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # y
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> function call
                    # input
                    # -> function call: arguments
                    # <- function call: arguments
                    # <- function call
                # <- assign: right argument
                # <- assign
                # -> function call
                # output
                # -> function call: arguments
                    # -> function call
                    # gdc
                    # -> function call: arguments
                        # -> identifier
                        # x
                        # <- identifier
                        # -> identifier
                        # y
                        # <- identifier
                    # <- function call: arguments
                    # <- function call
                # <- function call: arguments
                # <- function call
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # u
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> constant
                    # 0
                    # <- constant
                # <- assign: right argument
                # <- assign
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # x
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> constant
                    # 1
                    # <- constant
                # <- assign: right argument
                # <- assign
                # -> while
                # -> while: test expression
                    # -> arithmetic operator
                    # -> arithmetic operator: left argument
                        # -> identifier
                        # x
                        # <- identifier
                    # <- arithmetic operator: left argument
                    # -> arithmetic operator: right argument
                        # -> constant
                        # 10
                        # <- constant
                    # <- arithmetic operator: right argument
                    # relational operator: <=
                    # <- Operator
                # <- while: test expression
                # -> while: while block
                        # -> assign
                        # -> assign: left argument
                            # -> identifier
                            # u
                            # <- identifier
                        # <- assign: left argument
                        # -> assign: right argument
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # u
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> constant
                                # 1
                                # <- constant
                            # <- arithmetic operator: right argument
                            # arithmetic operator: +
                            # <- Operator
                        # <- assign: right argument
                        # <- assign
                        # -> assign
                        # -> assign: left argument
                            # -> vector
                            # v
                            # -> vector: position
                                # -> identifier
                                # i
                                # <- identifier
                            # <- vector: position
                            # <- vector
                        # <- assign: left argument
                        # -> assign: right argument
                            # -> identifier
                            # u
                            # <- identifier
                        # <- assign: right argument
                        # <- assign
                        # -> assign
                        # -> assign: left argument
                            # -> identifier
                            # x
                            # <- identifier
                        # <- assign: left argument
                        # -> assign: right argument
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # x
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> constant
                                # 1
                                # <- constant
                            # <- arithmetic operator: right argument
                            # arithmetic operator: +
                            # <- Operator
                        # <- assign: right argument
                        # <- assign
                # <- while: while block
                # <- while
                # -> return
                # -> return: expression
                # <- return: expression
                # <- return
        # <- function declaration
    # <- type void

# Fim da execução.

********** Código intermediário **********

1: (function, input, _, _)
2: (get_param, a, _, _)
3: (get_param, b, _, _)
4: (get_param, c, _, _)
5: (get_param, d, _, _)
6: (get_param, e, _, _)
7: (get_param, f, _, _)
8: (get_param, g, _, _)
9: (get_param, h, _, _)
10: (function, output, _, _)
11: (get_param, x, _, _)
12: (get_param, y, _, _)
13: (get_param, w, _, _)
14: (get_param, z, _, _)
15: (get_param, a, _, _)
16: (get_param, b, _, _)
17: (get_param, c, _, _)
18: (function, gdc, _, _)
19: (get_param, u, _, _)
20: (get_param, v, _, _)
21: (equal, v, 0, t1)
22: (jump_if_false, t1, L1, _)
23: (return, u, _, _)
24: (label, L1, _, _)
25: (param_list, 2, _, _)
26: (set_param, v, _, _)
27: (division, u, v, t2)
28: (multiplication, t2, v, t3)
29: (subtraction, u, t3, t4)
30: (set_param, t4, _, _)
31: (call, gdc, 2, t5)
32: (return, t5, _, _)
33: (function, main, _, _)
34: (vector, v, 10, t6)
35: (addition, 1, 2, t7)
36: (assign, teste, t7, _)
37: (param_list, 0, _, _)
38: (call, input, 0, t8)
39: (assign, x, t8, _)
40: (param_list, 0, _, _)
41: (call, input, 0, t9)
42: (assign, y, t9, _)
43: (param_list, 1, _, _)
44: (param_list, 2, _, _)
45: (set_param, x, _, _)
46: (set_param, y, _, _)
47: (call, gdc, 2, t10)
48: (set_param, t10, _, _)
49: (call, output, 1, t11)
50: (assign, u, 0, _)
51: (assign, x, 1, _)
52: (label, L2, _, _)
53: (less_than_equal_to, x, 10, t12)
54: (jump_if_false, t12, L3, _)
55: (addition, u, 1, t13)
56: (assign, u, t13, _)
57: (vector, v, i, t14)
58: (assign, t14, u, _)
59: (addition, x, 1, t15)
60: (assign, x, t15, _)
61: (goto, L2, _, _)
62: (label, L3, _, _)
63: (return, _, _, _)
64: (halt, _, _, _)

********** Código objeto **********


input:
    0:	lw	$s0, 4($sp)
    1:	lw	$s1, 5($sp)
    2:	lw	$s2, 6($sp)
    3:	lw	$s3, 7($sp)

output:
    4:	lw	$s0, 4($sp)
    5:	lw	$s1, 5($sp)
    6:	lw	$s2, 6($sp)

gdc:
    7:	lw	$t1, v
    8:	li	$t2, 0
    9:	beq	21, $t1, $t2
    10:	mov	$v0, u
    11:	jr	$ra
.L1
    12:	mov	$a0, v
    13:	lw	$a0, u
    14:	lw	$a1, v
    15:	div	need fix, $a0, $a1
    16:	PUSH	$t3
    17:	POP	emp, t2
    18:	lw	$a1, v
    19:	mul	need fix, $a1
    20:	PUSH	$t3
    21:	lw	$a0, u
    22:	POP	, t3
    23:	sub	need fix, $a0
    24:	PUSH	$t3
    25:	mov	$a1, t4
    26:	jal	gdc
    27:	mov	$v0, t5
    28:	jr	$ra

main:
    29:	li	temp, 1
    30:	addi	need fix, temp, 2
    31:	PUSH	$t3
    32:	sw	teste
    33:	in	$in
    34:	sw	$in, 0($sp)
    35:	in	$in
    36:	sw	$in, 1($sp)
    37:	mov	$a0, x
    38:	mov	$a1, y
    39:	jal	gdc
    40:	mov	$a0, t10
    41:	out	t11
    42:	sw	u
    43:	sw	x
.L2
    44:	lw	$t1, x
    45:	li	$t2, 10
    46:	blet	53, $t1, $t2
    47:	lw	, u
    48:	addi	need fix, 1
    49:	PUSH	$t3
    50:	sw	u
    51:	sw	t14
    52:	lw	, x
    53:	addi	need fix, 1
    54:	PUSH	$t3
    55:	sw	x
    56:	j	L2
.L3
    57:	mov	$v0
    58:	jr	$ra
    59:	halt	
