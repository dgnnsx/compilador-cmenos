# Compilação C- para código intermediário
# Arquivo: testes/gdc_sem_erros.cm
    # -> type int
        # -> identifier
        # globalVar
        # <- identifier
    # <- type int

    # -> type int
        # -> function declaration
        # input
        # <- function declaration
    # <- type int

    # -> type void
        # -> function declaration
        # output
                # -> function call
                # input
                # -> function call: arguments
                    # -> identifier
                    # x
                    # <- identifier
                    # -> identifier
                    # y
                    # <- identifier
                    # -> identifier
                    # w
                    # <- identifier
                    # -> identifier
                    # a
                    # <- identifier
                    # -> identifier
                    # z
                    # <- identifier
                # <- function call: arguments
                # <- function call
        # <- function declaration
    # <- type void

    # -> type int
        # -> function declaration
        # gdc
                # -> if
                # -> if: test expression
                    # -> arithmetic operator
                    # -> arithmetic operator: left argument
                        # -> identifier
                        # v
                        # <- identifier
                    # <- arithmetic operator: left argument
                    # -> arithmetic operator: right argument
                        # -> constant
                        # 0
                        # <- constant
                    # <- arithmetic operator: right argument
                    # relational operator: ==
                    # <- Operator
                # <- if: test expression
                # -> if: if block
                    # -> return
                    # -> return: expression
                        # -> identifier
                        # u
                        # <- identifier
                    # <- return: expression
                    # <- return
                # <- if: if block
                # -> if: else/end block
                    # -> return
                    # -> return: expression
                        # -> function call
                        # gdc
                        # -> function call: arguments
                            # -> identifier
                            # v
                            # <- identifier
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # u
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> arithmetic operator
                                # -> arithmetic operator: left argument
                                    # -> arithmetic operator
                                    # -> arithmetic operator: left argument
                                        # -> identifier
                                        # u
                                        # <- identifier
                                    # <- arithmetic operator: left argument
                                    # -> arithmetic operator: right argument
                                        # -> identifier
                                        # v
                                        # <- identifier
                                    # <- arithmetic operator: right argument
                                    # arithmetic operator: /
                                    # <- Operator
                                # <- arithmetic operator: left argument
                                # -> arithmetic operator: right argument
                                    # -> identifier
                                    # v
                                    # <- identifier
                                # <- arithmetic operator: right argument
                                # arithmetic operator: *
                                # <- Operator
                            # <- arithmetic operator: right argument
                            # arithmetic operator: -
                            # <- Operator
                        # <- function call: arguments
                        # <- function call
                    # <- return: expression
                    # <- return
                # <- if: else/end block
                # <- if
        # <- function declaration
    # <- type int

    # -> type void
        # -> function declaration
        # main
                # -> type int
                    # -> identifier
                    # x
                    # <- identifier
                # <- type int

                # -> type int
                    # -> identifier
                    # y
                    # <- identifier
                # <- type int

                # -> type int
                    # -> identifier
                    # u
                    # <- identifier
                # <- type int

                # -> type int
                    # -> identifier
                    # i
                    # <- identifier
                # <- type int

                # -> type int
                    # -> vector
                    # v
                    # -> vector: position
                        # -> constant
                        # 10
                        # <- constant
                    # <- vector: position
                    # <- vector
                # <- type int

                # -> type int
                    # -> identifier
                    # teste
                    # <- identifier
                # <- type int

                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # teste
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> arithmetic operator
                    # -> arithmetic operator: left argument
                        # -> constant
                        # 1
                        # <- constant
                    # <- arithmetic operator: left argument
                    # -> arithmetic operator: right argument
                        # -> constant
                        # 2
                        # <- constant
                    # <- arithmetic operator: right argument
                    # arithmetic operator: +
                    # <- Operator
                # <- assign: right argument
                # <- assign
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # x
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> function call
                    # input
                    # -> function call: arguments
                    # <- function call: arguments
                    # <- function call
                # <- assign: right argument
                # <- assign
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # y
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> function call
                    # input
                    # -> function call: arguments
                    # <- function call: arguments
                    # <- function call
                # <- assign: right argument
                # <- assign
                # -> function call
                # output
                # -> function call: arguments
                    # -> function call
                    # gdc
                    # -> function call: arguments
                        # -> identifier
                        # x
                        # <- identifier
                        # -> identifier
                        # y
                        # <- identifier
                    # <- function call: arguments
                    # <- function call
                # <- function call: arguments
                # <- function call
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # u
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> constant
                    # 0
                    # <- constant
                # <- assign: right argument
                # <- assign
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # x
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> constant
                    # 1
                    # <- constant
                # <- assign: right argument
                # <- assign
                # -> while
                # -> while: test expression
                    # -> arithmetic operator
                    # -> arithmetic operator: left argument
                        # -> identifier
                        # x
                        # <- identifier
                    # <- arithmetic operator: left argument
                    # -> arithmetic operator: right argument
                        # -> constant
                        # 10
                        # <- constant
                    # <- arithmetic operator: right argument
                    # relational operator: <=
                    # <- Operator
                # <- while: test expression
                # -> while: while block
                        # -> assign
                        # -> assign: left argument
                            # -> identifier
                            # u
                            # <- identifier
                        # <- assign: left argument
                        # -> assign: right argument
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # u
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> constant
                                # 1
                                # <- constant
                            # <- arithmetic operator: right argument
                            # arithmetic operator: +
                            # <- Operator
                        # <- assign: right argument
                        # <- assign
                        # -> assign
                        # -> assign: left argument
                            # -> identifier
                            # x
                            # <- identifier
                        # <- assign: left argument
                        # -> assign: right argument
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # x
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> constant
                                # 1
                                # <- constant
                            # <- arithmetic operator: right argument
                            # arithmetic operator: +
                            # <- Operator
                        # <- assign: right argument
                        # <- assign
                # <- while: while block
                # <- while
                # -> return
                # -> return: expression
                # <- return: expression
                # <- return
        # <- function declaration
    # <- type void

# Fim da execução.

********** Código intermediário **********

1: (function, input, _, _)
2: (get_param, a, _, _)
3: (get_param, b, _, _)
4: (get_param, c, _, _)
5: (get_param, d, _, _)
6: (get_param, e, _, _)
7: (get_param, f, _, _)
8: (get_param, g, _, _)
9: (get_param, h, _, _)
10: (function, output, _, _)
11: (get_param, x, _, _)
12: (get_param, y, _, _)
13: (get_param, w, _, _)
14: (get_param, z, _, _)
15: (get_param, a, _, _)
16: (get_param, b, _, _)
17: (get_param, c, _, _)
18: (param_list, 5, _, _)
19: (set_param, x, _, _)
20: (set_param, y, _, _)
21: (set_param, w, _, _)
22: (set_param, a, _, _)
23: (set_param, z, _, _)
24: (call, input, 5, t1)
25: (function, gdc, _, _)
26: (get_param, u, _, _)
27: (get_param, v, _, _)
28: (equal, v, 0, t2)
29: (jump_if_false, t2, L1, _)
30: (return, u, _, _)
31: (label, L1, _, _)
32: (param_list, 2, _, _)
33: (set_param, v, _, _)
34: (division, u, v, t3)
35: (multiplication, t3, v, t4)
36: (subtraction, u, t4, t5)
37: (set_param, t5, _, _)
38: (call, gdc, 2, t6)
39: (return, t6, _, _)
40: (function, main, _, _)
41: (vector, v, 10, t7)
42: (addition, 1, 2, t8)
43: (assign, teste, t8, _)
44: (param_list, 0, _, _)
45: (call, input, 0, t9)
46: (assign, x, t9, _)
47: (param_list, 0, _, _)
48: (call, input, 0, t10)
49: (assign, y, t10, _)
50: (param_list, 1, _, _)
51: (param_list, 2, _, _)
52: (set_param, x, _, _)
53: (set_param, y, _, _)
54: (call, gdc, 2, t11)
55: (set_param, t11, _, _)
56: (call, output, 1, t12)
57: (assign, u, 0, _)
58: (assign, x, 1, _)
59: (label, L2, _, _)
60: (less_than_equal_to, x, 10, t13)
61: (jump_if_false, t13, L3, _)
62: (addition, u, 1, t14)
63: (assign, u, t14, _)
64: (addition, x, 1, t15)
65: (assign, x, t15, _)
66: (goto, L2, _, _)
67: (label, L3, _, _)
68: (return, _, _, _)
69: (halt, _, _, _)

********** Código objeto **********

input:
    0:	lw	$s1, 4($sp)
    1:	lw	$s2, 5($sp)
    2:	lw	$s3, 6($sp)
    3:	lw	$s4, 7($sp)

output:
    4:	lw	$s1, 4($sp)
    5:	lw	$s2, 5($sp)
    6:	lw	$s3, 6($sp)
    7:	sw	$s3, 0($sp)
    8:	sw	$s4, 1($sp)
    9:	sw	$s5, 2($sp)
    10:	sw	$s6, 4($sp)
    11:	sw	$s7, 3($sp)
    12:	in	$t0

gdc:
    13:	beq	$t0, $a1, 0
    14:	mov	$v0, $a0
    15:	jr	$ra
.L1
    16:	mov	$a2, $a1
    17:	div	$t1, $a0, $a1
    18:	mul	$t2, $t1, $a1
    19:	sub	$t3, $a0, $t2
    20:	mov	$a3, $t3
    21:	jal	gdc
    22:	mov	$t4, $v0
    23:	mov	$v0, $t4
    24:	jr	$ra

main:
    25:	li	$t0, 1
    26:	addi	$t1, $t0, 2
    27:	sw	$t1, 14($sp)
    28:	in	$t2
    29:	sw	$t2, 0($sp)
    30:	in	$t3
    31:	sw	$t3, 1($sp)
    32:	lw	$s0, 0($sp)
    33:	mov	$a0, $s0
    34:	lw	$s1, 1($sp)
    35:	mov	$a1, $s1
    36:	jal	gdc
    37:	mov	$t4, $v0
    38:	mov	$a0, $t4
    39:	out	$out
    40:	li	$t5, 0
    41:	sw	$t5, 2($sp)
    42:	li	$t6, 1
    43:	sw	$t6, 0($sp)
.L2
    44:	blet	$t7, $s0, 10
    45:	lw	$s0, 2($sp)
    46:	addi	$t8, $s0, 1
    47:	sw	$t8, 2($sp)
    48:	addi	$t9, $s0, 1
    49:	sw	$t9, 0($sp)
    50:	j	L2
.L3
    51:	halt	
