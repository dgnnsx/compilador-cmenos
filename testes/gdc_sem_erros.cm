# Compilação C- para código intermediário
# Arquivo: testes/gdc_sem_erros.cm
    # -> type int
        # -> function declaration
        # input
        # <- function declaration
    # <- type int

    # -> type void
        # -> function declaration
        # output
        # <- function declaration
    # <- type void

    # -> type int
        # -> identifier
        # globalVar
        # <- identifier
    # <- type int

    # -> type int
        # -> function declaration
        # gdc
                # -> type int
                    # -> vector
                    # w
                    # -> vector: position
                        # -> constant
                        # 60
                        # <- constant
                    # <- vector: position
                    # <- vector
                # <- type int

                # -> type int
                    # -> vector
                    # z
                    # -> vector: position
                        # -> constant
                        # 60
                        # <- constant
                    # <- vector: position
                    # <- vector
                # <- type int

                # -> if
                # -> if: test expression
                    # -> arithmetic operator
                    # -> arithmetic operator: left argument
                        # -> vector
                        # vetor
                        # -> vector: position
                            # -> constant
                            # 1
                            # <- constant
                        # <- vector: position
                        # <- vector
                    # <- arithmetic operator: left argument
                    # -> arithmetic operator: right argument
                        # -> constant
                        # 0
                        # <- constant
                    # <- arithmetic operator: right argument
                    # relational operator: ==
                    # <- Operator
                # <- if: test expression
                # -> if: if block
                    # -> return
                    # -> return: expression
                        # -> identifier
                        # u
                        # <- identifier
                    # <- return: expression
                    # <- return
                # <- if: if block
                # -> if: else/end block
                    # -> return
                    # -> return: expression
                        # -> function call
                        # gdc
                        # -> function call: arguments
                            # -> identifier
                            # v
                            # <- identifier
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # u
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> arithmetic operator
                                # -> arithmetic operator: left argument
                                    # -> arithmetic operator
                                    # -> arithmetic operator: left argument
                                        # -> identifier
                                        # u
                                        # <- identifier
                                    # <- arithmetic operator: left argument
                                    # -> arithmetic operator: right argument
                                        # -> identifier
                                        # v
                                        # <- identifier
                                    # <- arithmetic operator: right argument
                                    # arithmetic operator: /
                                    # <- Operator
                                # <- arithmetic operator: left argument
                                # -> arithmetic operator: right argument
                                    # -> identifier
                                    # v
                                    # <- identifier
                                # <- arithmetic operator: right argument
                                # arithmetic operator: *
                                # <- Operator
                            # <- arithmetic operator: right argument
                            # arithmetic operator: -
                            # <- Operator
                        # <- function call: arguments
                        # <- function call
                    # <- return: expression
                    # <- return
                # <- if: else/end block
                # <- if
        # <- function declaration
    # <- type int

    # -> type void
        # -> function declaration
        # main
                # -> type int
                    # -> identifier
                    # x
                    # <- identifier
                # <- type int

                # -> type int
                    # -> identifier
                    # y
                    # <- identifier
                # <- type int

                # -> type int
                    # -> identifier
                    # u
                    # <- identifier
                # <- type int

                # -> type int
                    # -> identifier
                    # i
                    # <- identifier
                # <- type int

                # -> type int
                    # -> vector
                    # v
                    # -> vector: position
                        # -> constant
                        # 10
                        # <- constant
                    # <- vector: position
                    # <- vector
                # <- type int

                # -> type int
                    # -> identifier
                    # teste
                    # <- identifier
                # <- type int

                # -> assign
                # -> assign: left argument
                    # -> vector
                    # v
                    # -> vector: position
                        # -> constant
                        # 0
                        # <- constant
                    # <- vector: position
                    # <- vector
                # <- assign: left argument
                # -> assign: right argument
                    # -> arithmetic operator
                    # -> arithmetic operator: left argument
                        # -> vector
                        # v
                        # -> vector: position
                            # -> constant
                            # 1
                            # <- constant
                        # <- vector: position
                        # <- vector
                    # <- arithmetic operator: left argument
                    # -> arithmetic operator: right argument
                        # -> vector
                        # v
                        # -> vector: position
                            # -> constant
                            # 2
                            # <- constant
                        # <- vector: position
                        # <- vector
                    # <- arithmetic operator: right argument
                    # arithmetic operator: +
                    # <- Operator
                # <- assign: right argument
                # <- assign
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # x
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> function call
                    # input
                    # -> function call: arguments
                    # <- function call: arguments
                    # <- function call
                # <- assign: right argument
                # <- assign
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # y
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> function call
                    # input
                    # -> function call: arguments
                    # <- function call: arguments
                    # <- function call
                # <- assign: right argument
                # <- assign
                # -> function call
                # output
                # -> function call: arguments
                    # -> function call
                    # gdc
                    # -> function call: arguments
                        # -> identifier
                        # v
                        # <- identifier
                        # -> identifier
                        # y
                        # <- identifier
                        # -> constant
                        # 10
                        # <- constant
                    # <- function call: arguments
                    # <- function call
                # <- function call: arguments
                # <- function call
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # u
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> constant
                    # 0
                    # <- constant
                # <- assign: right argument
                # <- assign
                # -> assign
                # -> assign: left argument
                    # -> identifier
                    # x
                    # <- identifier
                # <- assign: left argument
                # -> assign: right argument
                    # -> constant
                    # 1
                    # <- constant
                # <- assign: right argument
                # <- assign
                # -> while
                # -> while: test expression
                    # -> arithmetic operator
                    # -> arithmetic operator: left argument
                        # -> identifier
                        # x
                        # <- identifier
                    # <- arithmetic operator: left argument
                    # -> arithmetic operator: right argument
                        # -> constant
                        # 10
                        # <- constant
                    # <- arithmetic operator: right argument
                    # relational operator: <=
                    # <- Operator
                # <- while: test expression
                # -> while: while block
                        # -> assign
                        # -> assign: left argument
                            # -> identifier
                            # u
                            # <- identifier
                        # <- assign: left argument
                        # -> assign: right argument
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # u
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> constant
                                # 1
                                # <- constant
                            # <- arithmetic operator: right argument
                            # arithmetic operator: +
                            # <- Operator
                        # <- assign: right argument
                        # <- assign
                        # -> assign
                        # -> assign: left argument
                            # -> vector
                            # v
                            # -> vector: position
                                # -> identifier
                                # i
                                # <- identifier
                            # <- vector: position
                            # <- vector
                        # <- assign: left argument
                        # -> assign: right argument
                            # -> identifier
                            # u
                            # <- identifier
                        # <- assign: right argument
                        # <- assign
                        # -> assign
                        # -> assign: left argument
                            # -> identifier
                            # teste
                            # <- identifier
                        # <- assign: left argument
                        # -> assign: right argument
                            # -> vector
                            # v
                            # -> vector: position
                                # -> constant
                                # 3
                                # <- constant
                            # <- vector: position
                            # <- vector
                        # <- assign: right argument
                        # <- assign
                        # -> assign
                        # -> assign: left argument
                            # -> identifier
                            # x
                            # <- identifier
                        # <- assign: left argument
                        # -> assign: right argument
                            # -> arithmetic operator
                            # -> arithmetic operator: left argument
                                # -> identifier
                                # x
                                # <- identifier
                            # <- arithmetic operator: left argument
                            # -> arithmetic operator: right argument
                                # -> identifier
                                # u
                                # <- identifier
                            # <- arithmetic operator: right argument
                            # arithmetic operator: +
                            # <- Operator
                        # <- assign: right argument
                        # <- assign
                # <- while: while block
                # <- while
                # -> return
                # -> return: expression
                # <- return: expression
                # <- return
        # <- function declaration
    # <- type void

# Fim da execução.

********** Código intermediário **********

1: (function, gdc, _, _)
2: (get_param, u, _, _)
3: (get_param, v, _, _)
4: (get_param, vetor, _, _)
5: (vector, vetor, 1, t3)
6: (equal, t3, 0, t4)
7: (jump_if_false, t4, L1, _)
8: (return, u, _, _)
9: (label, L1, _, _)
10: (param_list, 2, _, _)
11: (set_param, v, _, _)
12: (division, u, v, t5)
13: (multiplication, t5, v, t6)
14: (subtraction, u, t6, t7)
15: (set_param, t7, _, _)
16: (call, gdc, 2, t8)
17: (return, t8, _, _)
18: (function, main, _, _)
19: (vector, v, 0, t10)
20: (vector, v, 1, t11)
21: (vector, v, 2, t12)
22: (addition, t11, t12, t13)
23: (assign, t10, t13, _)
24: (param_list, 0, _, _)
25: (call, input, 0, t14)
26: (assign, x, t14, _)
27: (param_list, 0, _, _)
28: (call, input, 0, t15)
29: (assign, y, t15, _)
30: (param_list, 1, _, _)
31: (param_list, 3, _, _)
32: (set_param, v, _, _)
33: (set_param, y, _, _)
34: (set_param, 10, _, _)
35: (call, gdc, 3, t16)
36: (set_param, t16, _, _)
37: (call, output, 1, t17)
38: (assign, u, 0, _)
39: (assign, x, 1, _)
40: (label, L2, _, _)
41: (less_than_equal_to, x, 10, t18)
42: (jump_if_false, t18, L3, _)
43: (addition, u, 1, t19)
44: (assign, u, t19, _)
45: (vector, v, i, t20)
46: (assign, t20, u, _)
47: (vector, v, 3, t21)
48: (assign, teste, t21, _)
49: (addition, x, u, t22)
50: (assign, x, t22, _)
51: (goto, L2, _, _)
52: (label, L3, _, _)
53: (return, _, _, _)
54: (halt, _, _, _)

********** Código objeto **********

gdc:
    0:	addi	$a2, $a2, 1
    1:	lw	$t0, 0($a2)
    2:	beq	$t0, 0, L1
    3:	mov	$v0, $a0
    4:	jr	$ra
.L1
    5:	mov	$a0, $a1
    6:	lw	$s0, -122($sp)
    7:	div	$t1, $s0, $a0
    8:	mul	$t2, $t1, $a0
    9:	sub	$t3, $s0, $t2
    10:	mov	$a1, $t3
    11:	addi	$sp, $sp, 124
    12:	sw	$ra, -123($sp)
    13:	jal	gdc
    14:	lw	$ra, -123($sp)
    15:	subi	$sp, $sp, 124
    16:	mov	$t4, $v0
    17:	mov	$v0, $t4
    18:	jr	$ra

main:
    19:	la	$s0, -10($sp)
    20:	addi	$s0, $s0, 0
    21:	lw	$t0, 0($s0)
    22:	addi	$s0, $s0, 1
    23:	lw	$t1, 0($s0)
    24:	addi	$s0, $s0, 2
    25:	lw	$t2, 0($s0)
    26:	add	$t3, $t1, $t2
    27:	in	$t4
    28:	sw	$t4, -14($sp)
    29:	in	$t5
    30:	sw	$t5, -13($sp)
    31:	la	$a1, -10($sp)
    32:	lw	$s1, -13($sp)
    33:	mov	$a1, $s1
    34:	li	$a2, 10
    35:	addi	$sp, $sp, 123
    36:	jal	gdc
    37:	mov	$t6, $v0
    38:	subi	$sp, $sp, 123
    39:	mov	$a0, $t6
    40:	out	$out
    41:	li	$t7, 0
    42:	sw	$t7, -12($sp)
    43:	li	$t8, 1
    44:	sw	$t8, -14($sp)
.L2
    45:	lw	$s2, -14($sp)
    46:	blet	$s2, 10, L3
    47:	lw	$s3, -12($sp)
    48:	addi	$t9, $s3, 1
    49:	sw	$t9, -12($sp)
    50:	lw	$s4, -11($sp)
    51:	add	$s0, $s0, $s4
    52:	lw	$t0, 0($s0)
    53:	addi	$s0, $s0, 3
    54:	lw	$t0, 0($s0)
    55:	sw	$t0, 0($sp)
    56:	add	$t1, $s2, $s3
    57:	sw	$t1, -14($sp)
    58:	j	L2
.L3
    59:	halt	
