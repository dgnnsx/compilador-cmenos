# Compilação C- para código intermediário
# Arquivo: testes/so/bios.txt
# Fim da execução.

********** Código intermediário **********

1: (function, main, _, _)
2: (assign, HALT, 24, _)
3: (assign, i, 0, _)
4: (param_list, 1, _, _)
5: (set_param, i, _, _)
6: (call, ldk, 1, t1)
7: (assign, instrucao, t1, _)
8: (label, L1, _, _)
9: (shift_right, instrucao, 26, t2)
10: (not_equal, t2, HALT, t3)
11: (jump_if_false, t3, L2, _)
12: (param_list, 2, _, _)
13: (set_param, instrucao, _, _)
14: (set_param, i, _, _)
15: (call, sim, 2, t4)
16: (addition, i, 1, t5)
17: (assign, i, t5, _)
18: (param_list, 1, _, _)
19: (set_param, i, _, _)
20: (call, ldk, 1, t6)
21: (assign, instrucao, t6, _)
22: (goto, L1, _, _)
23: (label, L2, _, _)
24: (param_list, 2, _, _)
25: (set_param, instrucao, _, _)
26: (set_param, i, _, _)
27: (call, sim, 2, t7)
28: (halt, _, _, _)

********** Código objeto **********

main:
    0:	addi	$sp, $sp, 3
    1:	li	$t0, 24
    2:	sw	$t0, -2($sp)
    3:	li	$t1, 0
    4:	sw	$t1, 0($sp)
    5:	lw	$s0, 0($sp)
    6:	mov	$a0, $s0
    7:	ldk	$t2, $a0
    8:	sw	$t2, -1($sp)
.L1	
    9:	lw	$s1, -1($sp)
    10:	srli	$t3, $s1, 26
    11:	lw	$s2, -2($sp)
    12:	ne	$t4, $t3, $s2
    13:	jf	$t4, L2
    14:	mov	$a0, $s1
    15:	mov	$a1, $s0
    16:	sim	$a0, $a1
    17:	addi	$t5, $s0, 1
    18:	sw	$t5, 0($sp)
    19:	lw	$s0, 0($sp)
    20:	mov	$a0, $s0
    21:	ldk	$t6, $a0
    22:	sw	$t6, -1($sp)
    23:	lw	$s1, -1($sp)
    24:	j	L1
.L2	
    25:	mov	$a0, $s1
    26:	mov	$a1, $s0
    27:	sim	$a0, $a1
    28:	halt	

********** Código binário **********

assign bios[0] = 32'b010110_00000000000000000000000001;		// Jump to Main
assign bios[1] = 32'b000001_11110_11110_0000000000000011; 	// addi
assign bios[2] = 32'b010000_00000_10100_0000000000011000; 	// li
assign bios[3] = 32'b010010_11110_10100_1111111111111110; 	// sw
assign bios[4] = 32'b010000_00000_10101_0000000000000000; 	// li
assign bios[5] = 32'b010010_11110_10101_0000000000000000; 	// sw
assign bios[6] = 32'b001111_11110_01010_0000000000000000; 	// lw
assign bios[7] = 32'b001110_01010_00110_0000000000000000; 	// mov
assign bios[8] = 32'b011001_00110_10110_0000000000000000; 	// ldk
assign bios[9] = 32'b010010_11110_10110_1111111111111111; 	// sw
assign bios[10] = 32'b001111_11110_01011_1111111111111111; 	// lw
assign bios[11] = 32'b001101_01011_10111_0000000000011010; 	// srli
assign bios[12] = 32'b001111_11110_01100_1111111111111110; 	// lw
assign bios[13] = 32'b000000_10111_01100_11000_00000_001101; 	// ne
assign bios[14] = 32'b010101_11000_00000_0000000000011010; 	// jf
assign bios[15] = 32'b001110_01011_00110_0000000000000000; 	// mov
assign bios[16] = 32'b001110_01010_00111_0000000000000000; 	// mov
assign bios[17] = 32'b011100_00111_00110_0000000000000000; 	// sim
assign bios[18] = 32'b000001_01010_11001_0000000000000001; 	// addi
assign bios[19] = 32'b010010_11110_11001_0000000000000000; 	// sw
assign bios[20] = 32'b001111_11110_01010_0000000000000000; 	// lw
assign bios[21] = 32'b001110_01010_00110_0000000000000000; 	// mov
assign bios[22] = 32'b011001_00110_11010_0000000000000000; 	// ldk
assign bios[23] = 32'b010010_11110_11010_1111111111111111; 	// sw
assign bios[24] = 32'b001111_11110_01011_1111111111111111; 	// lw
assign bios[25] = 32'b010110_00000000000000000000001010; 	// j
assign bios[26] = 32'b001110_01011_00110_0000000000000000; 	// mov
assign bios[27] = 32'b001110_01010_00111_0000000000000000; 	// mov
assign bios[28] = 32'b011100_00111_00110_0000000000000000; 	// sim
assign bios[29] = 32'b011000_00000000000000000000000000; 	// halt
