# Compilação C- para código intermediário
# Arquivo: testes/teste.tx
# Fim da execução.

********** Código intermediário **********

1: (function, main, _, _)
2: (vector_address, vetor, 0, t2)
3: (assign, vetor, 9, 0)
4: (vector_address, vetor, 1, t3)
5: (assign, vetor, 6, 1)
6: (vector_address, vetor, 2, t4)
7: (assign, vetor, 8, 2)
8: (vector_address, vetor, 3, t5)
9: (assign, vetor, 7, 3)
10: (param_list, 2, _, _)
11: (vector_value, vetor, i, t6)
12: (set_param, t6, _, _)
13: (set_param, 2, _, _)
14: (call, output, 2, t7)
15: (halt, _, _, _)

********** Código objeto **********

main:
    0:	addi	$sp, $sp, 5
    1:	la	$s0, -4($sp)
    2:	li	$t0, 9
    3:	sw	$t0, 0($s0)
    4:	li	$t1, 6
    5:	sw	$t1, 1($s0)
    6:	li	$t2, 8
    7:	sw	$t2, 2($s0)
    8:	li	$t3, 7
    9:	sw	$t3, 3($s0)
    10:	lw	$s1, 0($sp)
    11:	add	$t4, $s0, $s1
    12:	lw	$t4, 0($t4)
    13:	mov	$a0, $t4
    14:	li	$a1, 2
    15:	out	$a0, 2
    16:	halt	

********** Código binário **********

disk[0] <= 32'b010110_00000000000000000000000001;		// Jump to Main
disk[1] <= 32'b000001_11110_11110_0000000000001110; 	// addi
disk[2] <= 32'b010001_11110_01010_1111111111111100; 	// la
disk[3] <= 32'b010000_00000_10100_0000000000001001; 	// li
disk[4] <= 32'b010010_01010_10100_0000000000000000; 	// sw
disk[5] <= 32'b010000_00000_10101_0000000000000110; 	// li
disk[6] <= 32'b010010_01010_10101_0000000000000001; 	// sw
disk[7] <= 32'b010000_00000_10110_0000000000001000; 	// li
disk[8] <= 32'b010010_01010_10110_0000000000000010; 	// sw
disk[9] <= 32'b010000_00000_10111_0000000000000111; 	// li
disk[10] <= 32'b010010_01010_10111_0000000000000011; 	// sw
disk[11] <= 32'b001111_11110_01011_0000000000000000; 	// lw
disk[12] <= 32'b000000_01010_01011_11000_00000_000000; 	// add
disk[13] <= 32'b001111_11000_11000_0000000000000000; 	// lw
disk[14] <= 32'b001110_11000_00110_0000000000000000; 	// mov
disk[15] <= 32'b010000_00000_00111_0000000000000010; 	// li
disk[16] <= 32'b010100_00000_00110_0000000000000010; 	// out
disk[17] <= 32'b011000_00000000000000000000000000; 	// halt
