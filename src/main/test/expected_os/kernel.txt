********** Código intermediário **********

1: (function, getTamanhoKernel, _, _)
2: (assign, index, 0, _)
3: (param_list, 1, _, _)
4: (set_param, index, _, _)
5: (call, ldk, 1, t18)
6: (assign, instrucao, t18, _)
7: (label, L1, _, _)
8: (shift_right, instrucao, 26, t19)
9: (not_equal, t19, HALT, t20)
10: (jump_if_false, t20, L2, _)
11: (addition, index, 1, t21)
12: (assign, index, t21, _)
13: (param_list, 1, _, _)
14: (set_param, index, _, _)
15: (call, ldk, 1, t22)
16: (assign, instrucao, t22, _)
17: (goto, L1, _, _)
18: (label, L2, _, _)
19: (return, index, _, _)
20: (function, powByTwo, _, _)
21: (get_param, n, _, _)
22: (equal, n, 0, t23)
23: (jump_if_false, t23, L3, _)
24: (return, 1, _, _)
25: (label, L3, _, _)
26: (assign, total, 1, _)
27: (label, L4, _, _)
28: (greater_than, n, 0, t24)
29: (jump_if_false, t24, L5, _)
30: (multiplication, total, 2, t25)
31: (assign, total, t25, _)
32: (subtraction, n, 1, t26)
33: (assign, n, t26, _)
34: (goto, L4, _, _)
35: (label, L5, _, _)
36: (return, total, _, _)
37: (function, limparDisplays, _, _)
38: (param_list, 2, _, _)
39: (set_param, 0, _, _)
40: (set_param, 0, _, _)
41: (call, output, 2, t27)
42: (param_list, 2, _, _)
43: (set_param, 0, _, _)
44: (set_param, 1, _, _)
45: (call, output, 2, t28)
46: (param_list, 2, _, _)
47: (set_param, 0, _, _)
48: (set_param, 2, _, _)
49: (call, output, 2, t29)
50: (return, _, _, _)
51: (function, loadRegistradores, _, _)
52: (vector_value, PROC_PAGINA_MEM_DADOS, PROC_ATUAL, t30)
53: (addition, t30, 1, t31)
54: (assign, pagina, t31, _)
55: (multiplication, pagina, TAMANHO_PARTICAO, t32)
56: (assign, indexVar, t32, _)
57: (subtraction, QUANTIDADE_PARTICOES, 1, t33)
58: (multiplication, TAMANHO_PARTICAO, t33, t34)
59: (assign, indexMemory, t34, _)
60: (label, L6, _, _)
61: (multiplication, TAMANHO_PARTICAO, QUANTIDADE_PARTICOES, t35)
62: (less_than, indexMemory, t35, t36)
63: (jump_if_false, t36, L7, _)
64: (param_list, 1, _, _)
65: (set_param, indexVar, _, _)
66: (call, ldm, 1, t37)
67: (assign, var, t37, _)
68: (param_list, 2, _, _)
69: (set_param, var, _, _)
70: (set_param, indexMemory, _, _)
71: (call, sdm, 2, t38)
72: (addition, indexVar, 1, t39)
73: (assign, indexVar, t39, _)
74: (addition, indexMemory, 1, t40)
75: (assign, indexMemory, t40, _)
76: (goto, L6, _, _)
77: (label, L7, _, _)
78: (return, _, _, _)
79: (function, saveRegistradores, _, _)
80: (get_param, pagina, _, _)
81: (addition, pagina, 1, t41)
82: (assign, pagina, t41, _)
83: (subtraction, QUANTIDADE_PARTICOES, 1, t42)
84: (multiplication, TAMANHO_PARTICAO, t42, t43)
85: (assign, indexVar, t43, _)
86: (multiplication, pagina, TAMANHO_PARTICAO, t44)
87: (assign, indexMemory, t44, _)
88: (label, L8, _, _)
89: (multiplication, TAMANHO_PARTICAO, QUANTIDADE_PARTICOES, t45)
90: (less_than, indexVar, t45, t46)
91: (jump_if_false, t46, L9, _)
92: (param_list, 1, _, _)
93: (set_param, indexVar, _, _)
94: (call, ldm, 1, t47)
95: (assign, var, t47, _)
96: (param_list, 2, _, _)
97: (set_param, var, _, _)
98: (set_param, indexMemory, _, _)
99: (call, sdm, 2, t48)
100: (addition, indexVar, 1, t49)
101: (assign, indexVar, t49, _)
102: (addition, indexMemory, 1, t50)
103: (assign, indexMemory, t50, _)
104: (goto, L8, _, _)
105: (label, L9, _, _)
106: (return, _, _, _)
107: (function, getIdProgramaByName, _, _)
108: (get_param, programa, _, _)
109: (assign, i, 0, _)
110: (label, L10, _, _)
111: (less_than, i, MAX_PROGRAMAS, t51)
112: (jump_if_false, t51, L12, _)
113: (vector_value, PROGRAMAS_EM_HD_NOME, i, t52)
114: (equal, t52, programa, t53)
115: (jump_if_false, t53, L11, _)
116: (vector_value, PROGRAMAS_EM_HD, i, t54)
117: (subtraction, t54, 1, t55)
118: (return, t55, _, _)
119: (label, L11, _, _)
120: (addition, i, 1, t56)
121: (assign, i, t56, _)
122: (goto, L10, _, _)
123: (label, L12, _, _)
124: (return, _, _, _)
125: (function, killProcess, _, _)
126: (get_param, processo, _, _)
127: (subtraction, processo, 1, t57)
128: (assign, PROC_ATUAL, t57, _)
129: (vector_value, PROC_PAGINA_MEM_INST, PROC_ATUAL, t58)
130: (assign, i, t58, _)
131: (vector_value, PROC_QTD_PAGINAS_MEM_INST, PROC_ATUAL, t59)
132: (assign, paginas, t59, _)
133: (label, L13, _, _)
134: (greater_than, paginas, 0, t60)
135: (jump_if_false, t60, L14, _)
136: (vector_address, PARTICOES_MEM_INST, i, t61)
137: (assign, t61, 0, _)
138: (addition, i, 1, t62)
139: (assign, i, t62, _)
140: (subtraction, paginas, 1, t63)
141: (assign, paginas, t63, _)
142: (goto, L13, _, _)
143: (label, L14, _, _)
144: (vector_address, PROGRAMAS_EM_MEMORIA, PROC_ATUAL, t64)
145: (assign, t64, 0, _)
146: (vector_address, PROC_ESTADO, PROC_ATUAL, t65)
147: (assign, t65, 0, _)
148: (vector_address, PROC_PC, PROC_ATUAL, t66)
149: (assign, t66, 0, _)
150: (vector_address, PROC_STACK_SIZE, PROC_ATUAL, t67)
151: (assign, t67, 0, _)
152: (vector_address, PROC_STACK_POINTER, PROC_ATUAL, t68)
153: (assign, t68, 0, _)
154: (vector_address, PROC_GLOBAL_POINTER, PROC_ATUAL, t69)
155: (assign, t69, 0, _)
156: (vector_address, PROC_PAGINA_MEM_DADOS, PROC_ATUAL, t70)
157: (assign, t70, 0, _)
158: (vector_address, PROC_QTD_PAGINAS_MEM_INST, PROC_ATUAL, t71)
159: (assign, t71, 0, _)
160: (vector_address, PROC_QTD_PAGINAS_MEM_DADOS, PROC_ATUAL, t72)
161: (assign, t72, 0, _)
162: (assign, PROC_ATUAL, 0, _)
163: (assign, PROTAGONISTA, 999, _)
164: (return, _, _, _)
165: (function, purgarPrograma, _, _)
166: (get_param, programa, _, _)
167: (param_list, 1, _, _)
168: (set_param, programa, _, _)
169: (call, getIdProgramaByName, 1, t73)
170: (assign, programa, t73, _)
171: (vector_value, PROC_ESTADO, programa, t74)
172: (not_equal, t74, 0, t75)
173: (jump_if_false, t75, L15, _)
174: (param_list, 1, _, _)
175: (addition, programa, 1, t76)
176: (set_param, t76, _, _)
177: (call, killProcess, 1, t77)
178: (label, L15, _, _)
179: (vector_value, PROGRAMAS_EM_HD_ENDERECO, programa, t78)
180: (assign, index, t78, _)
181: (param_list, 1, _, _)
182: (set_param, index, _, _)
183: (call, ldk, 1, t79)
184: (assign, instrucao, t79, _)
185: (label, L16, _, _)
186: (shift_right, instrucao, 26, t80)
187: (not_equal, t80, SYSCALL, t81)
188: (jump_if_false, t81, L17, _)
189: (param_list, 2, _, _)
190: (set_param, 0, _, _)
191: (set_param, index, _, _)
192: (call, sdk, 2, t82)
193: (addition, index, 1, t83)
194: (assign, index, t83, _)
195: (param_list, 1, _, _)
196: (set_param, index, _, _)
197: (call, ldk, 1, t84)
198: (assign, instrucao, t84, _)
199: (goto, L16, _, _)
200: (label, L17, _, _)
201: (param_list, 2, _, _)
202: (set_param, 0, _, _)
203: (set_param, index, _, _)
204: (call, sdk, 2, t85)
205: (vector_address, PROGRAMAS_EM_HD, programa, t86)
206: (assign, t86, 0, _)
207: (vector_address, PROGRAMAS_EM_HD_NOME, programa, t87)
208: (assign, t87, 0, _)
209: (vector_address, PROGRAMAS_EM_HD_ENDERECO, programa, t88)
210: (assign, t88, 0, _)
211: (return, _, _, _)
212: (function, renomearPrograma, _, _)
213: (get_param, programa, _, _)
214: (subtraction, programa, 1, t89)
215: (assign, programa, t89, _)
216: (param_list, 1, _, _)
217: (set_param, KERNEL_MENU_HD_REN_NOME, _, _)
218: (call, lcd, 1, t90)
219: (param_list, 0, _, _)
220: (call, input, 0, t91)
221: (assign, novoNome, t91, _)
222: (vector_address, PROGRAMAS_EM_HD_NOME, programa, t92)
223: (assign, t92, novoNome, _)
224: (return, _, _, _)
225: (function, getDescritorProgramasHD, _, _)
226: (assign, i, 0, _)
227: (assign, descritor, 0, _)
228: (label, L18, _, _)
229: (less_than, i, MAX_PROGRAMAS, t93)
230: (jump_if_false, t93, L20, _)
231: (vector_value, PROGRAMAS_EM_HD, i, t94)
232: (not_equal, t94, 0, t95)
233: (jump_if_false, t95, L19, _)
234: (param_list, 1, _, _)
235: (vector_value, PROGRAMAS_EM_HD_NOME, i, t96)
236: (subtraction, t96, 1, t97)
237: (set_param, t97, _, _)
238: (call, powByTwo, 1, t98)
239: (addition, descritor, t98, t99)
240: (assign, descritor, t99, _)
241: (label, L19, _, _)
242: (addition, i, 1, t100)
243: (assign, i, t100, _)
244: (goto, L18, _, _)
245: (label, L20, _, _)
246: (return, descritor, _, _)
247: (function, getDescritorProgramasMemoria, _, _)
248: (assign, i, 0, _)
249: (assign, descritor, 0, _)
250: (label, L21, _, _)
251: (less_than, i, MAX_PROGRAMAS, t101)
252: (jump_if_false, t101, L23, _)
253: (vector_value, PROGRAMAS_EM_MEMORIA, i, t102)
254: (not_equal, t102, 0, t103)
255: (jump_if_false, t103, L22, _)
256: (param_list, 1, _, _)
257: (vector_value, PROGRAMAS_EM_HD_NOME, i, t104)
258: (subtraction, t104, 1, t105)
259: (set_param, t105, _, _)
260: (call, powByTwo, 1, t106)
261: (addition, descritor, t106, t107)
262: (assign, descritor, t107, _)
263: (label, L22, _, _)
264: (addition, i, 1, t108)
265: (assign, i, t108, _)
266: (goto, L21, _, _)
267: (label, L23, _, _)
268: (return, descritor, _, _)
269: (function, getDescritorProgramasBloqueados, _, _)
270: (assign, i, 0, _)
271: (assign, descritor, 0, _)
272: (label, L24, _, _)
273: (less_than, i, MAX_PROGRAMAS, t109)
274: (jump_if_false, t109, L26, _)
275: (vector_value, PROC_ESTADO, i, t110)
276: (equal, t110, BLOQUEADO, t111)
277: (jump_if_false, t111, L25, _)
278: (param_list, 1, _, _)
279: (vector_value, PROGRAMAS_EM_HD_NOME, i, t112)
280: (subtraction, t112, 1, t113)
281: (set_param, t113, _, _)
282: (call, powByTwo, 1, t114)
283: (addition, descritor, t114, t115)
284: (assign, descritor, t115, _)
285: (label, L25, _, _)
286: (addition, i, 1, t116)
287: (assign, i, t116, _)
288: (goto, L24, _, _)
289: (label, L26, _, _)
290: (return, descritor, _, _)
291: (function, initInterrupcoes, _, _)
292: (assign, INTERRUPT_CONTEXTO, 2, _)
293: (assign, INTERRUPT_INPUT, 1, _)
294: (return, _, _, _)
295: (function, initProcessos, _, _)
296: (assign, EXECUTANDO, 1, _)
297: (assign, PRONTO, 2, _)
298: (assign, BLOQUEADO, 3, _)
299: (assign, LISTA_VAZIA, 404, _)
300: (assign, i, 0, _)
301: (label, L27, _, _)
302: (less_than, i, 10, t117)
303: (jump_if_false, t117, L28, _)
304: (vector_address, PROC_ESTADO, i, t118)
305: (assign, t118, 0, _)
306: (vector_address, PROC_PC, i, t119)
307: (assign, t119, 0, _)
308: (vector_address, PROC_STACK_SIZE, i, t120)
309: (assign, t120, 0, _)
310: (vector_address, PROC_STACK_POINTER, i, t121)
311: (assign, t121, 0, _)
312: (vector_address, PROC_GLOBAL_POINTER, i, t122)
313: (assign, t122, 0, _)
314: (vector_address, PROC_PAGINA_MEM_DADOS, i, t123)
315: (assign, t123, 0, _)
316: (vector_address, PROC_QTD_PAGINAS_MEM_INST, i, t124)
317: (assign, t124, 0, _)
318: (vector_address, PROC_QTD_PAGINAS_MEM_DADOS, i, t125)
319: (assign, t125, 0, _)
320: (vector_address, QUEUE_PRONTO, i, t126)
321: (assign, t126, 0, _)
322: (addition, i, 1, t127)
323: (assign, i, t127, _)
324: (goto, L27, _, _)
325: (label, L28, _, _)
326: (assign, IS_EXECUCAO_PREEMPTIVA, 0, _)
327: (return, _, _, _)
328: (function, initMemoria, _, _)
329: (assign, TAMANHO_PARTICAO, 32, _)
330: (assign, QUANTIDADE_PARTICOES, 128, _)
331: (assign, ERRO_DE_PARTICAO, 100, _)
332: (assign, MAX_PROGRAMAS, 10, _)
333: (assign, PROTAGONISTA, 999, _)
334: (return, _, _, _)
335: (function, initDisplay, _, _)
336: (assign, KERNEL_MAIN_MENU, 0, _)
337: (assign, KERNEL_MENU_HD, 1, _)
338: (assign, KERNEL_MENU_HD_DEL, 2, _)
339: (assign, KERNEL_MENU_HD_REN, 3, _)
340: (assign, KERNEL_MENU_HD_REN_NOME, 4, _)
341: (assign, KERNEL_MENU_HD_ADD_NOME, 5, _)
342: (assign, KERNEL_MENU_HD_ADD_QUIT, 6, _)
343: (assign, KERNEL_MENU_HD_ADD_FIRST_PART, 7, _)
344: (assign, KERNEL_MENU_HD_ADD_SECOND_PART, 8, _)
345: (assign, KERNEL_MENU_HD_ADD_THIRD_PART, 9, _)
346: (assign, KERNEL_MENU_HD_ADD_FOURTH_PART, 10, _)
347: (assign, KERNEL_MENU_MEM, 11, _)
348: (assign, KERNEL_MENU_MEM_LOAD, 12, _)
349: (assign, KERNEL_MENU_MEM_DEL, 13, _)
350: (assign, KERNEL_MENU_EXE, 14, _)
351: (assign, KERNEL_MENU_EXEC_N_PREEMPTIVO, 15, _)
352: (assign, KERNEL_MENU_EXEC_BLOCKED, 16, _)
353: (assign, PROG_INSERT, 30, _)
354: (assign, ESTADO_LCD, KERNEL_MAIN_MENU, _)
355: (return, _, _, _)
356: (function, initConstantes, _, _)
357: (assign, ENDERECO_FIM_HD, 4095, _)
358: (assign, SYSCALL, 57, _)
359: (assign, JTM, 61, _)
360: (assign, HALT, 63, _)
361: (return, _, _, _)
362: (function, initParticoes, _, _)
363: (assign, i, 0, _)
364: (label, L29, _, _)
365: (less_than, i, QUANTIDADE_PARTICOES, t128)
366: (jump_if_false, t128, L30, _)
367: (vector_address, PARTICOES_MEM_INST, i, t129)
368: (assign, t129, 0, _)
369: (vector_address, PARTICOES_MEM_DATA, i, t130)
370: (assign, t130, 0, _)
371: (addition, i, 1, t131)
372: (assign, i, t131, _)
373: (goto, L29, _, _)
374: (label, L30, _, _)
375: (param_list, 0, _, _)
376: (call, getTamanhoKernel, 0, t132)
377: (assign, tamanhoKernel, t132, _)
378: (addition, tamanhoKernel, 1, t133)
379: (assign, ENDERECO_INICIO_HD, t133, _)
380: (division, tamanhoKernel, TAMANHO_PARTICAO, t134)
381: (assign, particoes, t134, _)
382: (modulo, tamanhoKernel, TAMANHO_PARTICAO, t135)
383: (greater_than, t135, 0, t136)
384: (jump_if_false, t136, L31, _)
385: (addition, particoes, 1, t137)
386: (assign, particoes, t137, _)
387: (label, L31, _, _)
388: (assign, i, 0, _)
389: (label, L32, _, _)
390: (less_than, i, particoes, t138)
391: (jump_if_false, t138, L33, _)
392: (vector_address, PARTICOES_MEM_INST, i, t139)
393: (assign, t139, 1, _)
394: (addition, i, 1, t140)
395: (assign, i, t140, _)
396: (goto, L32, _, _)
397: (label, L33, _, _)
398: (param_list, 0, _, _)
399: (call, gsp, 0, t141)
400: (division, t141, TAMANHO_PARTICAO, t142)
401: (assign, particoes, t142, _)
402: (param_list, 0, _, _)
403: (call, gsp, 0, t143)
404: (modulo, t143, TAMANHO_PARTICAO, t144)
405: (greater_than, t144, 0, t145)
406: (jump_if_false, t145, L34, _)
407: (addition, particoes, 1, t146)
408: (assign, particoes, t146, _)
409: (label, L34, _, _)
410: (addition, particoes, 1, t147)
411: (assign, particoes, t147, _)
412: (assign, i, 0, _)
413: (label, L35, _, _)
414: (less_than, i, particoes, t148)
415: (jump_if_false, t148, L36, _)
416: (vector_address, PARTICOES_MEM_DATA, i, t149)
417: (assign, t149, 1, _)
418: (addition, i, 1, t150)
419: (assign, i, t150, _)
420: (goto, L35, _, _)
421: (label, L36, _, _)
422: (multiplication, particoes, TAMANHO_PARTICAO, t151)
423: (assign, STACK_AREA_INICIO, t151, _)
424: (subtraction, QUANTIDADE_PARTICOES, 1, t152)
425: (vector_address, PARTICOES_MEM_DATA, t152, t153)
426: (assign, t153, 1, _)
427: (return, _, _, _)
428: (function, initProgramas, _, _)
429: (assign, prog, 0, _)
430: (label, L37, _, _)
431: (less_than, prog, MAX_PROGRAMAS, t154)
432: (jump_if_false, t154, L38, _)
433: (vector_address, PROGRAMAS_EM_HD, prog, t155)
434: (assign, t155, 0, _)
435: (vector_address, PROGRAMAS_EM_HD_ENDERECO, prog, t156)
436: (assign, t156, 0, _)
437: (vector_address, PROGRAMAS_EM_HD_NOME, prog, t157)
438: (assign, t157, 0, _)
439: (vector_address, PROGRAMAS_EM_MEMORIA, prog, t158)
440: (assign, t158, 0, _)
441: (vector_address, PROGRAMAS_EM_MEMORIA_ENDERECO, prog, t159)
442: (assign, t159, 0, _)
443: (addition, prog, 1, t160)
444: (assign, prog, t160, _)
445: (goto, L37, _, _)
446: (label, L38, _, _)
447: (assign, index, ENDERECO_INICIO_HD, _)
448: (assign, prog, 0, _)
449: (label, L39, _, _)
450: (less_than, index, ENDERECO_FIM_HD, t161)
451: (jump_if_false, t161, L41, _)
452: (param_list, 1, _, _)
453: (set_param, index, _, _)
454: (call, ldk, 1, t162)
455: (assign, instrucao, t162, _)
456: (shift_right, instrucao, 26, t163)
457: (equal, t163, JTM, t164)
458: (jump_if_false, t164, L40, _)
459: (addition, prog, 1, t165)
460: (vector_address, PROGRAMAS_EM_HD, prog, t166)
461: (assign, t166, t165, _)
462: (vector_value, PROGRAMAS_EM_HD, prog, t167)
463: (vector_address, PROGRAMAS_EM_HD_NOME, prog, t168)
464: (assign, t168, t167, _)
465: (vector_address, PROGRAMAS_EM_HD_ENDERECO, prog, t169)
466: (assign, t169, index, _)
467: (addition, prog, 1, t170)
468: (assign, prog, t170, _)
469: (label, L40, _, _)
470: (addition, index, 1, t171)
471: (assign, index, t171, _)
472: (goto, L39, _, _)
473: (label, L41, _, _)
474: (return, _, _, _)
475: (function, initKernel, _, _)
476: (param_list, 0, _, _)
477: (call, initProcessos, 0, t172)
478: (param_list, 0, _, _)
479: (call, initMemoria, 0, t173)
480: (param_list, 0, _, _)
481: (call, initDisplay, 0, t174)
482: (param_list, 0, _, _)
483: (call, initConstantes, 0, t175)
484: (param_list, 0, _, _)
485: (call, initParticoes, 0, t176)
486: (param_list, 0, _, _)
487: (call, initProgramas, 0, t177)
488: (param_list, 0, _, _)
489: (call, initInterrupcoes, 0, t178)
490: (return, _, _, _)
491: (function, getParticaoLivreMemInstrucoes, _, _)
492: (get_param, tamanho, _, _)
493: (division, tamanho, TAMANHO_PARTICAO, t179)
494: (assign, particoes, t179, _)
495: (modulo, tamanho, TAMANHO_PARTICAO, t180)
496: (greater_than, t180, 0, t181)
497: (jump_if_false, t181, L42, _)
498: (addition, particoes, 1, t182)
499: (assign, particoes, t182, _)
500: (label, L42, _, _)
501: (vector_address, PROC_QTD_PAGINAS_MEM_INST, PROC_ATUAL, t183)
502: (assign, t183, particoes, _)
503: (assign, i, 0, _)
504: (label, L43, _, _)
505: (less_than, i, QUANTIDADE_PARTICOES, t184)
506: (jump_if_false, t184, L47, _)
507: (vector_value, PARTICOES_MEM_INST, i, t185)
508: (equal, t185, 0, t186)
509: (jump_if_false, t186, L46, _)
510: (assign, particaoInicial, i, _)
511: (label, L44, _, _)
512: (greater_than, particoes, 0, t187)
513: (jump_if_false, t187, L45, _)
514: (vector_address, PARTICOES_MEM_INST, i, t188)
515: (assign, t188, 1, _)
516: (subtraction, particoes, 1, t189)
517: (assign, particoes, t189, _)
518: (addition, i, 1, t190)
519: (assign, i, t190, _)
520: (goto, L44, _, _)
521: (label, L45, _, _)
522: (return, particaoInicial, _, _)
523: (label, L46, _, _)
524: (addition, i, 1, t191)
525: (assign, i, t191, _)
526: (goto, L43, _, _)
527: (label, L47, _, _)
528: (return, ERRO_DE_PARTICAO, _, _)
529: (function, getParticaoLivreMemDados, _, _)
530: (vector_value, PROC_STACK_SIZE, PROC_ATUAL, t192)
531: (division, t192, TAMANHO_PARTICAO, t193)
532: (addition, t193, 1, t194)
533: (assign, particoes, t194, _)
534: (vector_value, PROC_STACK_SIZE, PROC_ATUAL, t195)
535: (modulo, t195, TAMANHO_PARTICAO, t196)
536: (greater_than, t196, 0, t197)
537: (jump_if_false, t197, L48, _)
538: (addition, particoes, 1, t198)
539: (assign, particoes, t198, _)
540: (label, L48, _, _)
541: (subtraction, QUANTIDADE_PARTICOES, 1, t199)
542: (assign, i, t199, _)
543: (label, L49, _, _)
544: (greater_than, i, 0, t200)
545: (jump_if_false, t200, L53, _)
546: (vector_value, PARTICOES_MEM_DATA, i, t201)
547: (equal, t201, 0, t202)
548: (jump_if_false, t202, L52, _)
549: (label, L50, _, _)
550: (greater_than, particoes, 0, t203)
551: (jump_if_false, t203, L51, _)
552: (assign, particaoInicial, i, _)
553: (vector_address, PARTICOES_MEM_DATA, i, t204)
554: (assign, t204, 1, _)
555: (subtraction, particoes, 1, t205)
556: (assign, particoes, t205, _)
557: (subtraction, i, 1, t206)
558: (assign, i, t206, _)
559: (goto, L50, _, _)
560: (label, L51, _, _)
561: (return, particaoInicial, _, _)
562: (label, L52, _, _)
563: (subtraction, i, 1, t207)
564: (assign, i, t207, _)
565: (goto, L49, _, _)
566: (label, L53, _, _)
567: (return, ERRO_DE_PARTICAO, _, _)
568: (function, getProcessoBloqueado, _, _)
569: (assign, i, 0, _)
570: (label, L54, _, _)
571: (less_than, i, MAX_PROGRAMAS, t208)
572: (jump_if_false, t208, L56, _)
573: (vector_value, PROC_ESTADO, i, t209)
574: (equal, t209, BLOQUEADO, t210)
575: (jump_if_false, t210, L55, _)
576: (return, i, _, _)
577: (label, L55, _, _)
578: (addition, i, 1, t211)
579: (assign, i, t211, _)
580: (goto, L54, _, _)
581: (label, L56, _, _)
582: (return, LISTA_VAZIA, _, _)
583: (function, removeFromQueuePronto, _, _)
584: (get_param, processo, _, _)
585: (assign, i, 0, _)
586: (label, L57, _, _)
587: (less_than, i, MAX_PROGRAMAS, t212)
588: (jump_if_false, t212, L59, _)
589: (vector_value, QUEUE_PRONTO, i, t213)
590: (equal, t213, processo, t214)
591: (jump_if_false, t214, L58, _)
592: (vector_address, QUEUE_PRONTO, i, t215)
593: (assign, t215, 0, _)
594: (addition, i, 1, t216)
595: (assign, j, t216, _)
596: (label, L58, _, _)
597: (addition, i, 1, t217)
598: (assign, i, t217, _)
599: (goto, L57, _, _)
600: (label, L59, _, _)
601: (label, L60, _, _)
602: (less_than, j, MAX_PROGRAMAS, t218)
603: (jump_if_false, t218, L61, _)
604: (vector_value, QUEUE_PRONTO, j, t219)
605: (subtraction, j, 1, t220)
606: (vector_address, QUEUE_PRONTO, t220, t221)
607: (assign, t221, t219, _)
608: (addition, j, 1, t222)
609: (assign, j, t222, _)
610: (goto, L60, _, _)
611: (label, L61, _, _)
612: (subtraction, MAX_PROGRAMAS, 1, t223)
613: (vector_address, QUEUE_PRONTO, t223, t224)
614: (assign, t224, 0, _)
615: (return, _, _, _)
616: (function, organizeQueuePronto, _, _)
617: (assign, i, 1, _)
618: (label, L62, _, _)
619: (less_than, i, MAX_PROGRAMAS, t225)
620: (jump_if_false, t225, L63, _)
621: (vector_value, QUEUE_PRONTO, i, t226)
622: (subtraction, i, 1, t227)
623: (vector_address, QUEUE_PRONTO, t227, t228)
624: (assign, t228, t226, _)
625: (addition, i, 1, t229)
626: (assign, i, t229, _)
627: (goto, L62, _, _)
628: (label, L63, _, _)
629: (subtraction, MAX_PROGRAMAS, 1, t230)
630: (vector_address, QUEUE_PRONTO, t230, t231)
631: (assign, t231, 0, _)
632: (return, _, _, _)
633: (function, dequeuePronto, _, _)
634: (vector_value, QUEUE_PRONTO, 0, t232)
635: (not_equal, t232, 0, t233)
636: (jump_if_false, t233, L64, _)
637: (vector_value, QUEUE_PRONTO, 0, t234)
638: (assign, processo, t234, _)
639: (param_list, 0, _, _)
640: (call, organizeQueuePronto, 0, t235)
641: (return, processo, _, _)
642: (label, L64, _, _)
643: (return, LISTA_VAZIA, _, _)
644: (function, enqueuePronto, _, _)
645: (get_param, processo, _, _)
646: (assign, i, 0, _)
647: (label, L65, _, _)
648: (less_than, i, MAX_PROGRAMAS, t236)
649: (jump_if_false, t236, L67, _)
650: (vector_value, QUEUE_PRONTO, i, t237)
651: (equal, t237, 0, t238)
652: (jump_if_false, t238, L66, _)
653: (vector_address, QUEUE_PRONTO, i, t239)
654: (assign, t239, processo, _)
655: (return, _, _, _)
656: (label, L66, _, _)
657: (addition, i, 1, t240)
658: (assign, i, t240, _)
659: (goto, L65, _, _)
660: (label, L67, _, _)
661: (return, _, _, _)
662: (function, carregarTodosFilaPronto, _, _)
663: (assign, i, 0, _)
664: (label, L68, _, _)
665: (less_than, i, MAX_PROGRAMAS, t241)
666: (jump_if_false, t241, L71, _)
667: (vector_value, PROGRAMAS_EM_MEMORIA, i, t242)
668: (not_equal, t242, 0, t243)
669: (jump_if_false, t243, L70, _)
670: (vector_value, PROC_ESTADO, i, t244)
671: (not_equal, t244, BLOQUEADO, t245)
672: (jump_if_false, t245, L69, _)
673: (vector_address, PROC_ESTADO, i, t246)
674: (assign, t246, PRONTO, _)
675: (param_list, 1, _, _)
676: (addition, i, 1, t247)
677: (set_param, t247, _, _)
678: (call, enqueuePronto, 1, t248)
679: (label, L69, _, _)
680: (label, L70, _, _)
681: (addition, i, 1, t249)
682: (assign, i, t249, _)
683: (goto, L68, _, _)
684: (label, L71, _, _)
685: (return, _, _, _)
686: (function, getTamanhoPrograma, _, _)
687: (get_param, beginOnDisk, _, _)
688: (assign, index, beginOnDisk, _)
689: (param_list, 1, _, _)
690: (set_param, index, _, _)
691: (call, ldk, 1, t250)
692: (assign, instrucao, t250, _)
693: (label, L72, _, _)
694: (shift_right, instrucao, 26, t251)
695: (not_equal, t251, SYSCALL, t252)
696: (jump_if_false, t252, L73, _)
697: (addition, index, 1, t253)
698: (assign, index, t253, _)
699: (param_list, 1, _, _)
700: (set_param, index, _, _)
701: (call, ldk, 1, t254)
702: (assign, instrucao, t254, _)
703: (goto, L72, _, _)
704: (label, L73, _, _)
705: (subtraction, index, beginOnDisk, t255)
706: (return, t255, _, _)
707: (function, carregarPrograma, _, _)
708: (get_param, nPrograma, _, _)
709: (param_list, 1, _, _)
710: (set_param, nPrograma, _, _)
711: (call, getIdProgramaByName, 1, t256)
712: (assign, nPrograma, t256, _)
713: (assign, PROC_ATUAL, nPrograma, _)
714: (vector_value, PROGRAMAS_EM_HD_ENDERECO, nPrograma, t257)
715: (assign, beginOnDisk, t257, _)
716: (vector_value, PROGRAMAS_EM_HD, nPrograma, t258)
717: (assign, nProgramaOnDisk, t258, _)
718: (assign, indexDisk, beginOnDisk, _)
719: (param_list, 1, _, _)
720: (set_param, beginOnDisk, _, _)
721: (call, getTamanhoPrograma, 1, t259)
722: (assign, tamanho, t259, _)
723: (param_list, 1, _, _)
724: (set_param, tamanho, _, _)
725: (call, getParticaoLivreMemInstrucoes, 1, t260)
726: (assign, particao, t260, _)
727: (vector_address, PROC_PAGINA_MEM_INST, PROC_ATUAL, t261)
728: (assign, t261, particao, _)
729: (multiplication, TAMANHO_PARTICAO, particao, t262)
730: (assign, indexMemory, t262, _)
731: (param_list, 1, _, _)
732: (set_param, indexDisk, _, _)
733: (call, ldk, 1, t263)
734: (assign, instrucao, t263, _)
735: (label, L74, _, _)
736: (shift_right, instrucao, 26, t264)
737: (not_equal, t264, SYSCALL, t265)
738: (jump_if_false, t265, L75, _)
739: (param_list, 2, _, _)
740: (set_param, instrucao, _, _)
741: (set_param, indexMemory, _, _)
742: (call, sim, 2, t266)
743: (addition, indexDisk, 1, t267)
744: (assign, indexDisk, t267, _)
745: (param_list, 1, _, _)
746: (set_param, indexDisk, _, _)
747: (call, ldk, 1, t268)
748: (assign, instrucao, t268, _)
749: (addition, indexMemory, 1, t269)
750: (assign, indexMemory, t269, _)
751: (goto, L74, _, _)
752: (label, L75, _, _)
753: (param_list, 2, _, _)
754: (set_param, instrucao, _, _)
755: (set_param, indexMemory, _, _)
756: (call, sim, 2, t270)
757: (param_list, 1, _, _)
758: (set_param, nProgramaOnDisk, _, _)
759: (call, mmuSelect, 1, t271)
760: (param_list, 1, _, _)
761: (multiplication, TAMANHO_PARTICAO, particao, t272)
762: (set_param, t272, _, _)
763: (call, mmuLowerIM, 1, t273)
764: (vector_address, PROGRAMAS_EM_MEMORIA, nPrograma, t274)
765: (assign, t274, nProgramaOnDisk, _)
766: (vector_address, PROGRAMAS_EM_MEMORIA_ENDERECO, nPrograma, t275)
767: (assign, t275, beginOnDisk, _)
768: (assign, PROC_ATUAL, 0, _)
769: (return, _, _, _)
770: (function, criarPrograma, _, _)
771: (assign, indexDisk, ENDERECO_INICIO_HD, _)
772: (param_list, 1, _, _)
773: (set_param, KERNEL_MENU_HD_ADD_NOME, _, _)
774: (call, lcd, 1, t276)
775: (param_list, 0, _, _)
776: (call, input, 0, t277)
777: (assign, prog, t277, _)
778: (subtraction, prog, 1, t278)
779: (assign, prog, t278, _)
780: (addition, prog, 1, t279)
781: (vector_address, PROGRAMAS_EM_HD, prog, t280)
782: (assign, t280, t279, _)
783: (vector_value, PROGRAMAS_EM_HD, prog, t281)
784: (vector_address, PROGRAMAS_EM_HD_NOME, prog, t282)
785: (assign, t282, t281, _)
786: (vector_address, PROGRAMAS_EM_HD_ENDERECO, prog, t283)
787: (assign, t283, indexDisk, _)
788: (assign, instrucao, JTM, _)
789: (shift_left, instrucao, 26, t284)
790: (assign, instrucao, t284, _)
791: (addition, instrucao, 1, t285)
792: (assign, instrucao, t285, _)
793: (param_list, 2, _, _)
794: (set_param, instrucao, _, _)
795: (set_param, indexDisk, _, _)
796: (call, sdk, 2, t286)
797: (addition, indexDisk, 1, t287)
798: (assign, indexDisk, t287, _)
799: (param_list, 1, _, _)
800: (set_param, KERNEL_MENU_HD_ADD_QUIT, _, _)
801: (call, lcd, 1, t288)
802: (param_list, 0, _, _)
803: (call, input, 0, t289)
804: (assign, opcao, t289, _)
805: (label, L76, _, _)
806: (not_equal, opcao, 0, t290)
807: (jump_if_false, t290, L77, _)
808: (param_list, 1, _, _)
809: (set_param, KERNEL_MENU_HD_ADD_FIRST_PART, _, _)
810: (call, lcd, 1, t291)
811: (param_list, 0, _, _)
812: (call, input, 0, t292)
813: (assign, instrucao, t292, _)
814: (param_list, 1, _, _)
815: (set_param, KERNEL_MENU_HD_ADD_SECOND_PART, _, _)
816: (call, lcd, 1, t293)
817: (shift_left, instrucao, 8, t294)
818: (assign, instrucao, t294, _)
819: (param_list, 0, _, _)
820: (call, input, 0, t295)
821: (addition, instrucao, t295, t296)
822: (assign, instrucao, t296, _)
823: (param_list, 1, _, _)
824: (set_param, KERNEL_MENU_HD_ADD_THIRD_PART, _, _)
825: (call, lcd, 1, t297)
826: (shift_left, instrucao, 8, t298)
827: (assign, instrucao, t298, _)
828: (param_list, 0, _, _)
829: (call, input, 0, t299)
830: (addition, instrucao, t299, t300)
831: (assign, instrucao, t300, _)
832: (param_list, 1, _, _)
833: (set_param, KERNEL_MENU_HD_ADD_FOURTH_PART, _, _)
834: (call, lcd, 1, t301)
835: (shift_left, instrucao, 8, t302)
836: (assign, instrucao, t302, _)
837: (param_list, 0, _, _)
838: (call, input, 0, t303)
839: (addition, instrucao, t303, t304)
840: (assign, instrucao, t304, _)
841: (param_list, 2, _, _)
842: (set_param, instrucao, _, _)
843: (set_param, indexDisk, _, _)
844: (call, sdk, 2, t305)
845: (addition, indexDisk, 1, t306)
846: (assign, indexDisk, t306, _)
847: (param_list, 1, _, _)
848: (set_param, KERNEL_MENU_HD_ADD_QUIT, _, _)
849: (call, lcd, 1, t307)
850: (param_list, 0, _, _)
851: (call, input, 0, t308)
852: (assign, opcao, t308, _)
853: (goto, L76, _, _)
854: (label, L77, _, _)
855: (assign, instrucao, 127, _)
856: (shift_left, instrucao, 8, t309)
857: (assign, instrucao, t309, _)
858: (addition, instrucao, 32, t310)
859: (assign, instrucao, t310, _)
860: (shift_left, instrucao, 17, t311)
861: (assign, instrucao, t311, _)
862: (shift_right, instrucao, 1, t312)
863: (assign, instrucao, t312, _)
864: (param_list, 2, _, _)
865: (set_param, instrucao, _, _)
866: (set_param, indexDisk, _, _)
867: (call, sdk, 2, t313)
868: (return, _, _, _)
869: (function, run, _, _)
870: (get_param, programa, _, _)
871: (vector_value, PROGRAMAS_EM_MEMORIA, PROC_ATUAL, t314)
872: (not_equal, t314, 0, t315)
873: (jump_if_false, t315, L78, _)
874: (param_list, 1, _, _)
875: (set_param, programa, _, _)
876: (call, lcdCurr, 1, t316)
877: (param_list, 1, _, _)
878: (set_param, PROG_INSERT, _, _)
879: (call, lcd, 1, t317)
880: (addition, STACK_AREA_INICIO, 1, t318)
881: (assign, STACK_PROG_INICIO, t318, _)
882: (vector_address, PROC_ESTADO, PROC_ATUAL, t319)
883: (assign, t319, EXECUTANDO, _)
884: (vector_address, PROC_PC, PROC_ATUAL, t320)
885: (assign, t320, 0, _)
886: (param_list, 1, _, _)
887: (set_param, STACK_PROG_INICIO, _, _)
888: (call, sspb, 1, t321)
889: (param_list, 1, _, _)
890: (set_param, programa, _, _)
891: (call, exec, 1, t322)
892: (param_list, 1, _, _)
893: (set_param, programa, _, _)
894: (call, killProcess, 1, t323)
895: (param_list, 1, _, _)
896: (set_param, KERNEL_MAIN_MENU, _, _)
897: (call, lcd, 1, t324)
898: (label, L78, _, _)
899: (return, _, _, _)
900: (function, runAgain, _, _)
901: (get_param, programa, _, _)
902: (param_list, 1, _, _)
903: (set_param, programa, _, _)
904: (call, lcdCurr, 1, t325)
905: (param_list, 1, _, _)
906: (set_param, PROG_INSERT, _, _)
907: (call, lcd, 1, t326)
908: (addition, STACK_AREA_INICIO, 1, t327)
909: (assign, STACK_PROG_INICIO, t327, _)
910: (vector_address, PROC_ESTADO, PROC_ATUAL, t328)
911: (assign, t328, EXECUTANDO, _)
912: (vector_value, PROC_PAGINA_MEM_DADOS, PROC_ATUAL, t329)
913: (assign, pagina, t329, _)
914: (assign, indexVar, STACK_PROG_INICIO, _)
915: (multiplication, pagina, TAMANHO_PARTICAO, t330)
916: (assign, indexMemory, t330, _)
917: (vector_value, PROC_STACK_SIZE, PROC_ATUAL, t331)
918: (assign, tamanhoStack, t331, _)
919: (label, L79, _, _)
920: (greater_than, tamanhoStack, 0, t332)
921: (jump_if_false, t332, L80, _)
922: (param_list, 1, _, _)
923: (set_param, indexMemory, _, _)
924: (call, ldm, 1, t333)
925: (assign, var, t333, _)
926: (param_list, 2, _, _)
927: (set_param, var, _, _)
928: (set_param, indexVar, _, _)
929: (call, sdm, 2, t334)
930: (addition, indexVar, 1, t335)
931: (assign, indexVar, t335, _)
932: (addition, indexMemory, 1, t336)
933: (assign, indexMemory, t336, _)
934: (subtraction, tamanhoStack, 1, t337)
935: (assign, tamanhoStack, t337, _)
936: (goto, L79, _, _)
937: (label, L80, _, _)
938: (param_list, 1, _, _)
939: (vector_value, PROC_STACK_SIZE, PROC_ATUAL, t338)
940: (addition, STACK_AREA_INICIO, t338, t339)
941: (set_param, t339, _, _)
942: (call, sspb, 1, t340)
943: (param_list, 2, _, _)
944: (addition, PROC_ATUAL, 1, t341)
945: (set_param, t341, _, _)
946: (vector_value, PROC_PC, PROC_ATUAL, t342)
947: (set_param, t342, _, _)
948: (call, execAgain, 2, t343)
949: (param_list, 1, _, _)
950: (set_param, programa, _, _)
951: (call, killProcess, 1, t344)
952: (param_list, 1, _, _)
953: (set_param, KERNEL_MAIN_MENU, _, _)
954: (call, lcd, 1, t345)
955: (return, _, _, _)
956: (function, chooseAndRunProtagonista, _, _)
957: (get_param, programa, _, _)
958: (param_list, 1, _, _)
959: (set_param, programa, _, _)
960: (call, getIdProgramaByName, 1, t346)
961: (assign, PROC_ATUAL, t346, _)
962: (addition, PROC_ATUAL, 1, t347)
963: (assign, programa, t347, _)
964: (assign, PROTAGONISTA, PROC_ATUAL, _)
965: (param_list, 0, _, _)
966: (call, loadRegistradores, 0, t348)
967: (param_list, 1, _, _)
968: (set_param, programa, _, _)
969: (call, runAgain, 1, t349)
970: (return, _, _, _)
971: (function, runNaoPreemptivo, _, _)
972: (get_param, programa, _, _)
973: (param_list, 1, _, _)
974: (set_param, programa, _, _)
975: (call, getIdProgramaByName, 1, t350)
976: (assign, PROC_ATUAL, t350, _)
977: (addition, PROC_ATUAL, 1, t351)
978: (assign, programa, t351, _)
979: (assign, PROTAGONISTA, PROC_ATUAL, _)
980: (param_list, 1, _, _)
981: (set_param, programa, _, _)
982: (call, run, 1, t352)
983: (return, _, _, _)
984: (function, runPreemptivo, _, _)
985: (param_list, 0, _, _)
986: (call, carregarTodosFilaPronto, 0, t353)
987: (param_list, 0, _, _)
988: (call, dequeuePronto, 0, t354)
989: (assign, processo, t354, _)
990: (label, L81, _, _)
991: (not_equal, processo, LISTA_VAZIA, t355)
992: (jump_if_false, t355, L84, _)
993: (subtraction, processo, 1, t356)
994: (assign, PROC_ATUAL, t356, _)
995: (vector_value, PROC_PC, PROC_ATUAL, t357)
996: (equal, t357, 0, t358)
997: (jump_if_false, t358, L82, _)
998: (param_list, 1, _, _)
999: (set_param, processo, _, _)
1000: (call, run, 1, t359)
1001: (goto, L83, _, _)
1002: (label, L82, _, _)
1003: (param_list, 0, _, _)
1004: (call, loadRegistradores, 0, t360)
1005: (param_list, 1, _, _)
1006: (set_param, processo, _, _)
1007: (call, runAgain, 1, t361)
1008: (label, L83, _, _)
1009: (param_list, 0, _, _)
1010: (call, dequeuePronto, 0, t362)
1011: (assign, processo, t362, _)
1012: (goto, L81, _, _)
1013: (label, L84, _, _)
1014: (assign, IS_EXECUCAO_PREEMPTIVA, 0, _)
1015: (return, _, _, _)
1016: (function, main, _, _)
1017: (param_list, 0, _, _)
1018: (call, saveRegs, 0, t363)
1019: (equal, inicializando, 0, t364)
1020: (jump_if_false, t364, L85, _)
1021: (param_list, 0, _, _)
1022: (call, initKernel, 0, t365)
1023: (param_list, 1, _, _)
1024: (set_param, KERNEL_MAIN_MENU, _, _)
1025: (call, lcd, 1, t366)
1026: (assign, inicializando, 1, _)
1027: (param_list, 0, _, _)
1028: (call, cic, 0, t367)
1029: (label, L85, _, _)
1030: (param_list, 0, _, _)
1031: (call, gic, 0, t368)
1032: (assign, interrupcao, t368, _)
1033: (equal, interrupcao, INTERRUPT_INPUT, t369)
1034: (jump_if_false, t369, L93, _)
1035: (param_list, 0, _, _)
1036: (call, gspb, 0, t370)
1037: (assign, STACK_FIM, t370, _)
1038: (subtraction, STACK_FIM, STACK_PROG_INICIO, t371)
1039: (addition, t371, 1, t372)
1040: (assign, tamanhoStack, t372, _)
1041: (vector_address, PROC_STACK_SIZE, PROC_ATUAL, t373)
1042: (assign, t373, tamanhoStack, _)
1043: (vector_address, PROC_ESTADO, PROC_ATUAL, t374)
1044: (assign, t374, BLOQUEADO, _)
1045: (param_list, 0, _, _)
1046: (call, gip, 0, t375)
1047: (vector_address, PROC_PC, PROC_ATUAL, t376)
1048: (assign, t376, t375, _)
1049: (vector_value, PROC_PAGINA_MEM_DADOS, PROC_ATUAL, t377)
1050: (equal, t377, 0, t378)
1051: (jump_if_false, t378, L86, _)
1052: (param_list, 0, _, _)
1053: (call, getParticaoLivreMemDados, 0, t379)
1054: (assign, pagina, t379, _)
1055: (vector_address, PROC_PAGINA_MEM_DADOS, PROC_ATUAL, t380)
1056: (assign, t380, pagina, _)
1057: (goto, L87, _, _)
1058: (label, L86, _, _)
1059: (vector_value, PROC_PAGINA_MEM_DADOS, PROC_ATUAL, t381)
1060: (assign, pagina, t381, _)
1061: (label, L87, _, _)
1062: (assign, indexVar, STACK_PROG_INICIO, _)
1063: (multiplication, pagina, TAMANHO_PARTICAO, t382)
1064: (assign, indexMemory, t382, _)
1065: (label, L88, _, _)
1066: (greater_than, tamanhoStack, 0, t383)
1067: (jump_if_false, t383, L89, _)
1068: (param_list, 1, _, _)
1069: (set_param, indexVar, _, _)
1070: (call, ldm, 1, t384)
1071: (assign, var, t384, _)
1072: (param_list, 2, _, _)
1073: (set_param, var, _, _)
1074: (set_param, indexMemory, _, _)
1075: (call, sdm, 2, t385)
1076: (addition, indexVar, 1, t386)
1077: (assign, indexVar, t386, _)
1078: (addition, indexMemory, 1, t387)
1079: (assign, indexMemory, t387, _)
1080: (subtraction, tamanhoStack, 1, t388)
1081: (assign, tamanhoStack, t388, _)
1082: (goto, L88, _, _)
1083: (label, L89, _, _)
1084: (equal, PROC_ATUAL, PROTAGONISTA, t389)
1085: (jump_if_false, t389, L90, _)
1086: (param_list, 1, _, _)
1087: (addition, PROC_ATUAL, 1, t390)
1088: (set_param, t390, _, _)
1089: (call, runAgain, 1, t391)
1090: (goto, L92, _, _)
1091: (label, L90, _, _)
1092: (param_list, 1, _, _)
1093: (set_param, pagina, _, _)
1094: (call, saveRegistradores, 1, t392)
1095: (vector_address, PROC_ESTADO, PROC_ATUAL, t393)
1096: (assign, t393, BLOQUEADO, _)
1097: (param_list, 1, _, _)
1098: (addition, PROC_ATUAL, 1, t394)
1099: (set_param, t394, _, _)
1100: (call, removeFromQueuePronto, 1, t395)
1101: (equal, IS_EXECUCAO_PREEMPTIVA, 1, t396)
1102: (jump_if_false, t396, L91, _)
1103: (assign, ESTADO_LCD, KERNEL_MAIN_MENU, _)
1104: (param_list, 1, _, _)
1105: (set_param, ESTADO_LCD, _, _)
1106: (call, lcd, 1, t397)
1107: (param_list, 0, _, _)
1108: (call, rgnsp, 0, t398)
1109: (param_list, 0, _, _)
1110: (call, cic, 0, t399)
1111: (param_list, 0, _, _)
1112: (call, runPreemptivo, 0, t400)
1113: (label, L91, _, _)
1114: (label, L92, _, _)
1115: (assign, ESTADO_LCD, KERNEL_MAIN_MENU, _)
1116: (param_list, 1, _, _)
1117: (set_param, ESTADO_LCD, _, _)
1118: (call, lcd, 1, t401)
1119: (param_list, 0, _, _)
1120: (call, rgnsp, 0, t402)
1121: (param_list, 0, _, _)
1122: (call, cic, 0, t403)
1123: (goto, L101, _, _)
1124: (label, L93, _, _)
1125: (equal, interrupcao, INTERRUPT_CONTEXTO, t404)
1126: (jump_if_false, t404, L100, _)
1127: (param_list, 0, _, _)
1128: (call, gspb, 0, t405)
1129: (assign, STACK_FIM, t405, _)
1130: (subtraction, STACK_FIM, STACK_PROG_INICIO, t406)
1131: (addition, t406, 1, t407)
1132: (assign, tamanhoStack, t407, _)
1133: (vector_address, PROC_STACK_SIZE, PROC_ATUAL, t408)
1134: (assign, t408, tamanhoStack, _)
1135: (vector_address, PROC_ESTADO, PROC_ATUAL, t409)
1136: (assign, t409, BLOQUEADO, _)
1137: (param_list, 0, _, _)
1138: (call, gip, 0, t410)
1139: (vector_address, PROC_PC, PROC_ATUAL, t411)
1140: (assign, t411, t410, _)
1141: (vector_value, PROC_PAGINA_MEM_DADOS, PROC_ATUAL, t412)
1142: (equal, t412, 0, t413)
1143: (jump_if_false, t413, L94, _)
1144: (param_list, 0, _, _)
1145: (call, getParticaoLivreMemDados, 0, t414)
1146: (assign, pagina, t414, _)
1147: (vector_address, PROC_PAGINA_MEM_DADOS, PROC_ATUAL, t415)
1148: (assign, t415, pagina, _)
1149: (goto, L95, _, _)
1150: (label, L94, _, _)
1151: (vector_value, PROC_PAGINA_MEM_DADOS, PROC_ATUAL, t416)
1152: (assign, pagina, t416, _)
1153: (label, L95, _, _)
1154: (assign, indexVar, STACK_PROG_INICIO, _)
1155: (multiplication, pagina, TAMANHO_PARTICAO, t417)
1156: (assign, indexMemory, t417, _)
1157: (label, L96, _, _)
1158: (greater_than, tamanhoStack, 0, t418)
1159: (jump_if_false, t418, L97, _)
1160: (param_list, 1, _, _)
1161: (set_param, indexVar, _, _)
1162: (call, ldm, 1, t419)
1163: (assign, var, t419, _)
1164: (param_list, 2, _, _)
1165: (set_param, var, _, _)
1166: (set_param, indexMemory, _, _)
1167: (call, sdm, 2, t420)
1168: (addition, indexVar, 1, t421)
1169: (assign, indexVar, t421, _)
1170: (addition, indexMemory, 1, t422)
1171: (assign, indexMemory, t422, _)
1172: (subtraction, tamanhoStack, 1, t423)
1173: (assign, tamanhoStack, t423, _)
1174: (goto, L96, _, _)
1175: (label, L97, _, _)
1176: (equal, PROC_ATUAL, PROTAGONISTA, t424)
1177: (jump_if_false, t424, L98, _)
1178: (param_list, 1, _, _)
1179: (addition, PROC_ATUAL, 1, t425)
1180: (set_param, t425, _, _)
1181: (call, runAgain, 1, t426)
1182: (goto, L99, _, _)
1183: (label, L98, _, _)
1184: (param_list, 1, _, _)
1185: (set_param, pagina, _, _)
1186: (call, saveRegistradores, 1, t427)
1187: (vector_address, PROC_ESTADO, PROC_ATUAL, t428)
1188: (assign, t428, PRONTO, _)
1189: (assign, ESTADO_LCD, KERNEL_MAIN_MENU, _)
1190: (param_list, 1, _, _)
1191: (set_param, ESTADO_LCD, _, _)
1192: (call, lcd, 1, t429)
1193: (param_list, 0, _, _)
1194: (call, rgnsp, 0, t430)
1195: (param_list, 0, _, _)
1196: (call, cic, 0, t431)
1197: (param_list, 1, _, _)
1198: (addition, PROC_ATUAL, 1, t432)
1199: (set_param, t432, _, _)
1200: (call, enqueuePronto, 1, t433)
1201: (param_list, 0, _, _)
1202: (call, runPreemptivo, 0, t434)
1203: (label, L99, _, _)
1204: (assign, ESTADO_LCD, KERNEL_MAIN_MENU, _)
1205: (param_list, 1, _, _)
1206: (set_param, ESTADO_LCD, _, _)
1207: (call, lcd, 1, t435)
1208: (param_list, 0, _, _)
1209: (call, rgnsp, 0, t436)
1210: (param_list, 0, _, _)
1211: (call, cic, 0, t437)
1212: (label, L100, _, _)
1213: (label, L101, _, _)
1214: (label, L102, _, _)
1215: (jump_if_false, 1, L152, _)
1216: (param_list, 0, _, _)
1217: (call, input, 0, t438)
1218: (assign, novoEstadoLCD, t438, _)
1219: (equal, ESTADO_LCD, KERNEL_MAIN_MENU, t439)
1220: (jump_if_false, t439, L111, _)
1221: (equal, novoEstadoLCD, 1, t440)
1222: (jump_if_false, t440, L103, _)
1223: (assign, novoEstadoLCD, KERNEL_MENU_HD, _)
1224: (goto, L110, _, _)
1225: (label, L103, _, _)
1226: (equal, novoEstadoLCD, 2, t441)
1227: (jump_if_false, t441, L104, _)
1228: (assign, novoEstadoLCD, KERNEL_MENU_MEM, _)
1229: (goto, L109, _, _)
1230: (label, L104, _, _)
1231: (equal, novoEstadoLCD, 3, t442)
1232: (jump_if_false, t442, L105, _)
1233: (assign, novoEstadoLCD, KERNEL_MENU_EXE, _)
1234: (goto, L108, _, _)
1235: (label, L105, _, _)
1236: (equal, novoEstadoLCD, 4, t443)
1237: (jump_if_false, t443, L106, _)
1238: (param_list, 0, _, _)
1239: (call, limparDisplays, 0, t444)
1240: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1241: (goto, L107, _, _)
1242: (label, L106, _, _)
1243: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1244: (label, L107, _, _)
1245: (label, L108, _, _)
1246: (label, L109, _, _)
1247: (label, L110, _, _)
1248: (goto, L151, _, _)
1249: (label, L111, _, _)
1250: (equal, ESTADO_LCD, KERNEL_MENU_HD, t445)
1251: (jump_if_false, t445, L118, _)
1252: (equal, novoEstadoLCD, 1, t446)
1253: (jump_if_false, t446, L112, _)
1254: (param_list, 0, _, _)
1255: (call, criarPrograma, 0, t447)
1256: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1257: (goto, L117, _, _)
1258: (label, L112, _, _)
1259: (equal, novoEstadoLCD, 2, t448)
1260: (jump_if_false, t448, L113, _)
1261: (assign, novoEstadoLCD, KERNEL_MENU_HD_REN, _)
1262: (param_list, 1, _, _)
1263: (param_list, 0, _, _)
1264: (call, getDescritorProgramasHD, 0, t449)
1265: (set_param, t449, _, _)
1266: (call, lcdPgms, 1, t450)
1267: (goto, L116, _, _)
1268: (label, L113, _, _)
1269: (equal, novoEstadoLCD, 3, t451)
1270: (jump_if_false, t451, L114, _)
1271: (assign, novoEstadoLCD, KERNEL_MENU_HD_DEL, _)
1272: (param_list, 1, _, _)
1273: (param_list, 0, _, _)
1274: (call, getDescritorProgramasHD, 0, t452)
1275: (set_param, t452, _, _)
1276: (call, lcdPgms, 1, t453)
1277: (goto, L115, _, _)
1278: (label, L114, _, _)
1279: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1280: (label, L115, _, _)
1281: (label, L116, _, _)
1282: (label, L117, _, _)
1283: (goto, L150, _, _)
1284: (label, L118, _, _)
1285: (equal, ESTADO_LCD, KERNEL_MENU_HD_DEL, t454)
1286: (jump_if_false, t454, L120, _)
1287: (greater_than, novoEstadoLCD, 0, t455)
1288: (jump_if_false, t455, L119, _)
1289: (param_list, 1, _, _)
1290: (set_param, novoEstadoLCD, _, _)
1291: (call, purgarPrograma, 1, t456)
1292: (label, L119, _, _)
1293: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1294: (goto, L149, _, _)
1295: (label, L120, _, _)
1296: (equal, ESTADO_LCD, KERNEL_MENU_HD_REN, t457)
1297: (jump_if_false, t457, L122, _)
1298: (greater_than, novoEstadoLCD, 0, t458)
1299: (jump_if_false, t458, L121, _)
1300: (param_list, 1, _, _)
1301: (set_param, novoEstadoLCD, _, _)
1302: (call, renomearPrograma, 1, t459)
1303: (label, L121, _, _)
1304: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1305: (goto, L148, _, _)
1306: (label, L122, _, _)
1307: (equal, ESTADO_LCD, KERNEL_MENU_MEM, t460)
1308: (jump_if_false, t460, L127, _)
1309: (equal, novoEstadoLCD, 1, t461)
1310: (jump_if_false, t461, L123, _)
1311: (assign, novoEstadoLCD, KERNEL_MENU_MEM_LOAD, _)
1312: (param_list, 1, _, _)
1313: (param_list, 0, _, _)
1314: (call, getDescritorProgramasHD, 0, t462)
1315: (set_param, t462, _, _)
1316: (call, lcdPgms, 1, t463)
1317: (goto, L126, _, _)
1318: (label, L123, _, _)
1319: (equal, novoEstadoLCD, 2, t464)
1320: (jump_if_false, t464, L124, _)
1321: (assign, novoEstadoLCD, KERNEL_MENU_MEM_DEL, _)
1322: (param_list, 1, _, _)
1323: (param_list, 0, _, _)
1324: (call, getDescritorProgramasMemoria, 0, t465)
1325: (set_param, t465, _, _)
1326: (call, lcdPgms, 1, t466)
1327: (goto, L125, _, _)
1328: (label, L124, _, _)
1329: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1330: (label, L125, _, _)
1331: (label, L126, _, _)
1332: (goto, L147, _, _)
1333: (label, L127, _, _)
1334: (equal, ESTADO_LCD, KERNEL_MENU_MEM_LOAD, t467)
1335: (jump_if_false, t467, L129, _)
1336: (greater_than, novoEstadoLCD, 0, t468)
1337: (jump_if_false, t468, L128, _)
1338: (param_list, 1, _, _)
1339: (set_param, novoEstadoLCD, _, _)
1340: (call, carregarPrograma, 1, t469)
1341: (label, L128, _, _)
1342: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1343: (goto, L146, _, _)
1344: (label, L129, _, _)
1345: (equal, ESTADO_LCD, KERNEL_MENU_MEM_DEL, t470)
1346: (jump_if_false, t470, L131, _)
1347: (greater_than, novoEstadoLCD, 0, t471)
1348: (jump_if_false, t471, L130, _)
1349: (param_list, 1, _, _)
1350: (set_param, novoEstadoLCD, _, _)
1351: (call, killProcess, 1, t472)
1352: (label, L130, _, _)
1353: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1354: (goto, L145, _, _)
1355: (label, L131, _, _)
1356: (equal, ESTADO_LCD, KERNEL_MENU_EXE, t473)
1357: (jump_if_false, t473, L138, _)
1358: (equal, novoEstadoLCD, 1, t474)
1359: (jump_if_false, t474, L132, _)
1360: (assign, IS_EXECUCAO_PREEMPTIVA, 1, _)
1361: (param_list, 0, _, _)
1362: (call, runPreemptivo, 0, t475)
1363: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1364: (goto, L137, _, _)
1365: (label, L132, _, _)
1366: (equal, novoEstadoLCD, 2, t476)
1367: (jump_if_false, t476, L133, _)
1368: (param_list, 1, _, _)
1369: (param_list, 0, _, _)
1370: (call, getDescritorProgramasMemoria, 0, t477)
1371: (set_param, t477, _, _)
1372: (call, lcdPgms, 1, t478)
1373: (assign, novoEstadoLCD, KERNEL_MENU_EXEC_N_PREEMPTIVO, _)
1374: (goto, L136, _, _)
1375: (label, L133, _, _)
1376: (equal, novoEstadoLCD, 3, t479)
1377: (jump_if_false, t479, L134, _)
1378: (param_list, 1, _, _)
1379: (param_list, 0, _, _)
1380: (call, getDescritorProgramasBloqueados, 0, t480)
1381: (set_param, t480, _, _)
1382: (call, lcdPgms, 1, t481)
1383: (assign, novoEstadoLCD, KERNEL_MENU_EXEC_BLOCKED, _)
1384: (goto, L135, _, _)
1385: (label, L134, _, _)
1386: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1387: (label, L135, _, _)
1388: (label, L136, _, _)
1389: (label, L137, _, _)
1390: (goto, L144, _, _)
1391: (label, L138, _, _)
1392: (equal, ESTADO_LCD, KERNEL_MENU_EXEC_N_PREEMPTIVO, t482)
1393: (jump_if_false, t482, L140, _)
1394: (greater_than, novoEstadoLCD, 0, t483)
1395: (jump_if_false, t483, L139, _)
1396: (assign, IS_EXECUCAO_PREEMPTIVA, 0, _)
1397: (param_list, 1, _, _)
1398: (set_param, novoEstadoLCD, _, _)
1399: (call, runNaoPreemptivo, 1, t484)
1400: (label, L139, _, _)
1401: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1402: (goto, L143, _, _)
1403: (label, L140, _, _)
1404: (equal, ESTADO_LCD, KERNEL_MENU_EXEC_BLOCKED, t485)
1405: (jump_if_false, t485, L142, _)
1406: (greater_than, novoEstadoLCD, 0, t486)
1407: (jump_if_false, t486, L141, _)
1408: (param_list, 1, _, _)
1409: (set_param, novoEstadoLCD, _, _)
1410: (call, chooseAndRunProtagonista, 1, t487)
1411: (label, L141, _, _)
1412: (assign, novoEstadoLCD, KERNEL_MAIN_MENU, _)
1413: (label, L142, _, _)
1414: (label, L143, _, _)
1415: (label, L144, _, _)
1416: (label, L145, _, _)
1417: (label, L146, _, _)
1418: (label, L147, _, _)
1419: (label, L148, _, _)
1420: (label, L149, _, _)
1421: (label, L150, _, _)
1422: (label, L151, _, _)
1423: (assign, ESTADO_LCD, novoEstadoLCD, _)
1424: (param_list, 1, _, _)
1425: (set_param, ESTADO_LCD, _, _)
1426: (call, lcd, 1, t488)
1427: (goto, L102, _, _)
1428: (label, L152, _, _)
1429: (halt, _, _, _)

********** Código objeto **********

getTamanhoKernel:
    0:	addi	$sp, $sp, 4
    1:	li	$t0, 0
    2:	sw	$t0, 0($sp)
    3:	lw	$s0, 0($sp)
    4:	mov	$a0, $s0
    5:	ldk	$t1, $a0
    6:	sw	$t1, -1($sp)
.L1	
    7:	lw	$s0, -1($sp)
    8:	srli	$t2, $s0, 26
    9:	lw	$s1, 426($gp)
    10:	ne	$t3, $t2, $s1
    11:	jf	$t3, L2
    12:	lw	$s2, 0($sp)
    13:	addi	$t4, $s2, 1
    14:	sw	$t4, 0($sp)
    15:	lw	$s2, 0($sp)
    16:	mov	$a0, $s2
    17:	ldk	$t5, $a0
    18:	sw	$t5, -1($sp)
    19:	lw	$s0, -1($sp)
    20:	j	L1
.L2	
    21:	lw	$s0, 0($sp)
    22:	mov	$v0, $s0
    23:	jr	$ra

powByTwo:
    24:	addi	$sp, $sp, 4
    25:	sw	$a0, -1($sp)
    26:	lw	$s0, -1($sp)
    27:	li	$t1, 0
    28:	eq	$t0, $s0, $t1
    29:	jf	$t0, L3
    30:	li	$t2, 1
    31:	mov	$v0, $t2
    32:	jr	$ra
.L3	
    33:	li	$t3, 1
    34:	sw	$t3, 0($sp)
.L4	
    35:	lw	$s0, -1($sp)
    36:	li	$t5, 0
    37:	gt	$t4, $s0, $t5
    38:	jf	$t4, L5
    39:	lw	$s1, 0($sp)
    40:	muli	$t6, $s1, 2
    41:	sw	$t6, 0($sp)
    42:	lw	$s1, 0($sp)
    43:	subi	$t7, $s0, 1
    44:	sw	$t7, -1($sp)
    45:	lw	$s0, -1($sp)
    46:	j	L4
.L5	
    47:	lw	$s0, 0($sp)
    48:	mov	$v0, $s0
    49:	jr	$ra

limparDisplays:
    50:	addi	$sp, $sp, 2
    51:	li	$a0, 0
    52:	li	$a1, 0
    53:	out	$a0, 0
    54:	li	$a0, 0
    55:	li	$a1, 1
    56:	out	$a0, 1
    57:	li	$a0, 0
    58:	li	$a1, 2
    59:	out	$a0, 2
    60:	jr	$ra

loadRegistradores:
    61:	addi	$sp, $sp, 6
    62:	la	$s0, 64($gp)
    63:	lw	$s1, 95($gp)
    64:	add	$t0, $s0, $s1
    65:	lw	$t0, 0($t0)
    66:	addi	$t1, $t0, 1
    67:	sw	$t1, -2($sp)
    68:	lw	$s2, -2($sp)
    69:	lw	$s3, 235($gp)
    70:	mul	$t2, $s2, $s3
    71:	sw	$t2, -1($sp)
    72:	lw	$s4, 236($gp)
    73:	subi	$t3, $s4, 1
    74:	mul	$t4, $s3, $t3
    75:	sw	$t4, 0($sp)
.L6	
    76:	lw	$s0, 235($gp)
    77:	lw	$s1, 236($gp)
    78:	mul	$t5, $s0, $s1
    79:	lw	$s2, 0($sp)
    80:	lt	$t6, $s2, $t5
    81:	jf	$t6, L7
    82:	lw	$s3, -1($sp)
    83:	mov	$a0, $s3
    84:	lw	$t7, 0($a0)
    85:	sw	$t7, -3($sp)
    86:	lw	$s4, -3($sp)
    87:	mov	$a0, $s4
    88:	mov	$a1, $s2
    89:	sw	$a0, 0($a1)
    90:	addi	$t8, $s3, 1
    91:	sw	$t8, -1($sp)
    92:	lw	$s3, -1($sp)
    93:	addi	$t0, $s2, 1
    94:	sw	$t0, 0($sp)
    95:	lw	$s2, 0($sp)
    96:	j	L6
.L7	
    97:	jr	$ra

saveRegistradores:
    98:	addi	$sp, $sp, 6
    99:	sw	$a0, -3($sp)
    100:	lw	$s0, -3($sp)
    101:	addi	$t0, $s0, 1
    102:	sw	$t0, -3($sp)
    103:	lw	$s0, -3($sp)
    104:	lw	$s1, 236($gp)
    105:	subi	$t1, $s1, 1
    106:	lw	$s2, 235($gp)
    107:	mul	$t2, $s2, $t1
    108:	sw	$t2, -1($sp)
    109:	mul	$t3, $s0, $s2
    110:	sw	$t3, 0($sp)
.L8	
    111:	lw	$s0, 235($gp)
    112:	lw	$s1, 236($gp)
    113:	mul	$t4, $s0, $s1
    114:	lw	$s2, -1($sp)
    115:	lt	$t5, $s2, $t4
    116:	jf	$t5, L9
    117:	mov	$a0, $s2
    118:	lw	$t6, 0($a0)
    119:	sw	$t6, -2($sp)
    120:	lw	$s3, -2($sp)
    121:	mov	$a0, $s3
    122:	lw	$s4, 0($sp)
    123:	mov	$a1, $s4
    124:	sw	$a0, 0($a1)
    125:	addi	$t7, $s2, 1
    126:	sw	$t7, -1($sp)
    127:	lw	$s2, -1($sp)
    128:	addi	$t8, $s4, 1
    129:	sw	$t8, 0($sp)
    130:	lw	$s4, 0($sp)
    131:	j	L8
.L9	
    132:	jr	$ra

getIdProgramaByName:
    133:	addi	$sp, $sp, 4
    134:	sw	$a0, -1($sp)
    135:	li	$t0, 0
    136:	sw	$t0, 0($sp)
.L10	
    137:	lw	$s0, 0($sp)
    138:	lw	$s1, 238($gp)
    139:	lt	$t1, $s0, $s1
    140:	jf	$t1, L12
    141:	la	$s2, 394($gp)
    142:	add	$t2, $s2, $s0
    143:	lw	$t2, 0($t2)
    144:	lw	$s3, -1($sp)
    145:	eq	$t3, $t2, $s3
    146:	jf	$t3, L11
    147:	la	$s4, 374($gp)
    148:	add	$t4, $s4, $s0
    149:	lw	$t4, 0($t4)
    150:	subi	$t5, $t4, 1
    151:	mov	$v0, $t5
    152:	jr	$ra
.L11	
    153:	lw	$s0, 0($sp)
    154:	addi	$t6, $s0, 1
    155:	sw	$t6, 0($sp)
    156:	lw	$s0, 0($sp)
    157:	j	L10
.L12	
    158:	jr	$ra

killProcess:
    159:	addi	$sp, $sp, 5
    160:	sw	$a0, -2($sp)
    161:	lw	$s0, -2($sp)
    162:	subi	$t0, $s0, 1
    163:	sw	$t0, 95($gp)
    164:	la	$s1, 54($gp)
    165:	lw	$s2, 95($gp)
    166:	add	$t1, $s1, $s2
    167:	lw	$t1, 0($t1)
    168:	sw	$t1, -1($sp)
    169:	la	$s3, 74($gp)
    170:	add	$t2, $s3, $s2
    171:	lw	$t2, 0($t2)
    172:	sw	$t2, 0($sp)
.L13	
    173:	lw	$s0, 0($sp)
    174:	li	$t4, 0
    175:	gt	$t3, $s0, $t4
    176:	jf	$t3, L14
    177:	la	$s1, 107($gp)
    178:	lw	$s2, -1($sp)
    179:	add	$t5, $s1, $s2
    180:	li	$t6, 0
    181:	sw	$t6, 0($t5)
    182:	addi	$t7, $s2, 1
    183:	sw	$t7, -1($sp)
    184:	lw	$s2, -1($sp)
    185:	subi	$t8, $s0, 1
    186:	sw	$t8, 0($sp)
    187:	lw	$s0, 0($sp)
    188:	j	L13
.L14	
    189:	la	$s0, 404($gp)
    190:	lw	$s1, 95($gp)
    191:	add	$t0, $s0, $s1
    192:	li	$t1, 0
    193:	sw	$t1, 0($t0)
    194:	la	$s2, 4($gp)
    195:	add	$t2, $s2, $s1
    196:	li	$t3, 0
    197:	sw	$t3, 0($t2)
    198:	la	$s3, 14($gp)
    199:	add	$t4, $s3, $s1
    200:	li	$t5, 0
    201:	sw	$t5, 0($t4)
    202:	la	$s4, 24($gp)
    203:	add	$t6, $s4, $s1
    204:	li	$t7, 0
    205:	sw	$t7, 0($t6)
    206:	la	$s5, 34($gp)
    207:	add	$t8, $s5, $s1
    208:	li	$t0, 0
    209:	sw	$t0, 0($t8)
    210:	la	$s6, 44($gp)
    211:	add	$t1, $s6, $s1
    212:	li	$t2, 0
    213:	sw	$t2, 0($t1)
    214:	la	$s7, 64($gp)
    215:	add	$t3, $s7, $s1
    216:	li	$t4, 0
    217:	sw	$t4, 0($t3)
    218:	la	$s8, 74($gp)
    219:	add	$t5, $s8, $s1
    220:	li	$t6, 0
    221:	sw	$t6, 0($t5)
    222:	la	$s9, 84($gp)
    223:	add	$t7, $s9, $s1
    224:	li	$t8, 0
    225:	sw	$t8, 0($t7)
    226:	li	$t0, 0
    227:	sw	$t0, 95($gp)
    228:	lw	$s1, 95($gp)
    229:	li	$t1, 999
    230:	sw	$t1, 94($gp)
    231:	jr	$ra

purgarPrograma:
    232:	addi	$sp, $sp, 5
    233:	sw	$a0, -2($sp)
    234:	lw	$s0, -2($sp)
    235:	mov	$a0, $s0
    236:	sw	$ra, -3($sp)
    237:	jal	getIdProgramaByName
    238:	subi	$sp, $sp, 4
    239:	lw	$ra, -3($sp)
    240:	mov	$s0, $v0
    241:	sw	$s0, -2($sp)
    242:	la	$s1, 4($gp)
    243:	lw	$s2, -2($sp)
    244:	add	$t0, $s1, $s2
    245:	lw	$t0, 0($t0)
    246:	li	$t2, 0
    247:	ne	$t1, $t0, $t2
    248:	jf	$t1, L15
    249:	addi	$t3, $s2, 1
    250:	mov	$a0, $t3
    251:	sw	$ra, -3($sp)
    252:	jal	killProcess
    253:	subi	$sp, $sp, 5
    254:	lw	$ra, -3($sp)
    255:	mov	$s0, $v0
.L15	
    256:	la	$s0, 384($gp)
    257:	lw	$s1, -2($sp)
    258:	add	$t4, $s0, $s1
    259:	lw	$t4, 0($t4)
    260:	sw	$t4, -1($sp)
    261:	lw	$s2, -1($sp)
    262:	mov	$a0, $s2
    263:	ldk	$t5, $a0
    264:	sw	$t5, 0($sp)
.L16	
    265:	lw	$s0, 0($sp)
    266:	srli	$t6, $s0, 26
    267:	lw	$s1, 424($gp)
    268:	ne	$t7, $t6, $s1
    269:	jf	$t7, L17
    270:	li	$a0, 0
    271:	lw	$s2, -1($sp)
    272:	mov	$a1, $s2
    273:	sdk	$a0, $a1
    274:	addi	$t8, $s2, 1
    275:	sw	$t8, -1($sp)
    276:	lw	$s2, -1($sp)
    277:	mov	$a0, $s2
    278:	ldk	$t0, $a0
    279:	sw	$t0, 0($sp)
    280:	lw	$s0, 0($sp)
    281:	j	L16
.L17	
    282:	li	$a0, 0
    283:	lw	$s0, -1($sp)
    284:	mov	$a1, $s0
    285:	sdk	$a0, $a1
    286:	la	$s1, 374($gp)
    287:	lw	$s2, -2($sp)
    288:	add	$t1, $s1, $s2
    289:	li	$t2, 0
    290:	sw	$t2, 0($t1)
    291:	la	$s3, 394($gp)
    292:	add	$t3, $s3, $s2
    293:	li	$t4, 0
    294:	sw	$t4, 0($t3)
    295:	la	$s4, 384($gp)
    296:	add	$t5, $s4, $s2
    297:	li	$t6, 0
    298:	sw	$t6, 0($t5)
    299:	jr	$ra

renomearPrograma:
    300:	addi	$sp, $sp, 4
    301:	sw	$a0, -1($sp)
    302:	lw	$s0, -1($sp)
    303:	subi	$t0, $s0, 1
    304:	sw	$t0, -1($sp)
    305:	lw	$s0, -1($sp)
    306:	lw	$s1, 431($gp)
    307:	mov	$a0, $s1
    308:	lcd	$a0
    309:	in	$t1
    310:	sw	$t1, 0($sp)
    311:	la	$s2, 394($gp)
    312:	add	$t2, $s2, $s0
    313:	lw	$s3, 0($sp)
    314:	sw	$s3, 0($t2)
    315:	jr	$ra

getDescritorProgramasHD:
    316:	addi	$sp, $sp, 4
    317:	li	$t0, 0
    318:	sw	$t0, -1($sp)
    319:	li	$t1, 0
    320:	sw	$t1, 0($sp)
.L18	
    321:	lw	$s0, -1($sp)
    322:	lw	$s1, 238($gp)
    323:	lt	$t2, $s0, $s1
    324:	jf	$t2, L20
    325:	la	$s2, 374($gp)
    326:	add	$t3, $s2, $s0
    327:	lw	$t3, 0($t3)
    328:	li	$t5, 0
    329:	ne	$t4, $t3, $t5
    330:	jf	$t4, L19
    331:	la	$s3, 394($gp)
    332:	add	$t6, $s3, $s0
    333:	lw	$t6, 0($t6)
    334:	subi	$t7, $t6, 1
    335:	mov	$a0, $t7
    336:	sw	$ra, -2($sp)
    337:	jal	powByTwo
    338:	subi	$sp, $sp, 4
    339:	lw	$ra, -2($sp)
    340:	mov	$s0, $v0
    341:	lw	$s1, 0($sp)
    342:	add	$t8, $s1, $s0
    343:	sw	$t8, 0($sp)
    344:	lw	$s1, 0($sp)
.L19	
    345:	lw	$s0, -1($sp)
    346:	addi	$t0, $s0, 1
    347:	sw	$t0, -1($sp)
    348:	lw	$s0, -1($sp)
    349:	j	L18
.L20	
    350:	lw	$s0, 0($sp)
    351:	mov	$v0, $s0
    352:	jr	$ra

getDescritorProgramasMemoria:
    353:	addi	$sp, $sp, 4
    354:	li	$t0, 0
    355:	sw	$t0, -1($sp)
    356:	li	$t1, 0
    357:	sw	$t1, 0($sp)
.L21	
    358:	lw	$s0, -1($sp)
    359:	lw	$s1, 238($gp)
    360:	lt	$t2, $s0, $s1
    361:	jf	$t2, L23
    362:	la	$s2, 404($gp)
    363:	add	$t3, $s2, $s0
    364:	lw	$t3, 0($t3)
    365:	li	$t5, 0
    366:	ne	$t4, $t3, $t5
    367:	jf	$t4, L22
    368:	la	$s3, 394($gp)
    369:	add	$t6, $s3, $s0
    370:	lw	$t6, 0($t6)
    371:	subi	$t7, $t6, 1
    372:	mov	$a0, $t7
    373:	sw	$ra, -2($sp)
    374:	jal	powByTwo
    375:	subi	$sp, $sp, 4
    376:	lw	$ra, -2($sp)
    377:	mov	$s0, $v0
    378:	lw	$s1, 0($sp)
    379:	add	$t8, $s1, $s0
    380:	sw	$t8, 0($sp)
    381:	lw	$s1, 0($sp)
.L22	
    382:	lw	$s0, -1($sp)
    383:	addi	$t0, $s0, 1
    384:	sw	$t0, -1($sp)
    385:	lw	$s0, -1($sp)
    386:	j	L21
.L23	
    387:	lw	$s0, 0($sp)
    388:	mov	$v0, $s0
    389:	jr	$ra

getDescritorProgramasBloqueados:
    390:	addi	$sp, $sp, 4
    391:	li	$t0, 0
    392:	sw	$t0, -1($sp)
    393:	li	$t1, 0
    394:	sw	$t1, 0($sp)
.L24	
    395:	lw	$s0, -1($sp)
    396:	lw	$s1, 238($gp)
    397:	lt	$t2, $s0, $s1
    398:	jf	$t2, L26
    399:	la	$s2, 4($gp)
    400:	add	$t3, $s2, $s0
    401:	lw	$t3, 0($t3)
    402:	lw	$s3, 2($gp)
    403:	eq	$t4, $t3, $s3
    404:	jf	$t4, L25
    405:	la	$s4, 394($gp)
    406:	add	$t5, $s4, $s0
    407:	lw	$t5, 0($t5)
    408:	subi	$t6, $t5, 1
    409:	mov	$a0, $t6
    410:	sw	$ra, -2($sp)
    411:	jal	powByTwo
    412:	subi	$sp, $sp, 4
    413:	lw	$ra, -2($sp)
    414:	mov	$s0, $v0
    415:	lw	$s1, 0($sp)
    416:	add	$t7, $s1, $s0
    417:	sw	$t7, 0($sp)
    418:	lw	$s1, 0($sp)
.L25	
    419:	lw	$s0, -1($sp)
    420:	addi	$t8, $s0, 1
    421:	sw	$t8, -1($sp)
    422:	lw	$s0, -1($sp)
    423:	j	L24
.L26	
    424:	lw	$s0, 0($sp)
    425:	mov	$v0, $s0
    426:	jr	$ra

initInterrupcoes:
    427:	addi	$sp, $sp, 2
    428:	li	$t0, 2
    429:	sw	$t0, 372($gp)
    430:	li	$t1, 1
    431:	sw	$t1, 373($gp)
    432:	jr	$ra

initProcessos:
    433:	addi	$sp, $sp, 3
    434:	li	$t0, 1
    435:	sw	$t0, 0($gp)
    436:	li	$t1, 2
    437:	sw	$t1, 1($gp)
    438:	li	$t2, 3
    439:	sw	$t2, 2($gp)
    440:	li	$t3, 404
    441:	sw	$t3, 3($gp)
    442:	li	$t4, 0
    443:	sw	$t4, 0($sp)
.L27	
    444:	lw	$s0, 0($sp)
    445:	li	$t6, 10
    446:	lt	$t5, $s0, $t6
    447:	jf	$t5, L28
    448:	la	$s1, 4($gp)
    449:	add	$t7, $s1, $s0
    450:	li	$t8, 0
    451:	sw	$t8, 0($t7)
    452:	la	$s2, 14($gp)
    453:	add	$t0, $s2, $s0
    454:	li	$t1, 0
    455:	sw	$t1, 0($t0)
    456:	la	$s3, 24($gp)
    457:	add	$t2, $s3, $s0
    458:	li	$t3, 0
    459:	sw	$t3, 0($t2)
    460:	la	$s4, 34($gp)
    461:	add	$t4, $s4, $s0
    462:	li	$t5, 0
    463:	sw	$t5, 0($t4)
    464:	la	$s5, 44($gp)
    465:	add	$t6, $s5, $s0
    466:	li	$t7, 0
    467:	sw	$t7, 0($t6)
    468:	la	$s6, 64($gp)
    469:	add	$t8, $s6, $s0
    470:	li	$t0, 0
    471:	sw	$t0, 0($t8)
    472:	la	$s7, 74($gp)
    473:	add	$t1, $s7, $s0
    474:	li	$t2, 0
    475:	sw	$t2, 0($t1)
    476:	la	$s8, 84($gp)
    477:	add	$t3, $s8, $s0
    478:	li	$t4, 0
    479:	sw	$t4, 0($t3)
    480:	la	$s9, 96($gp)
    481:	add	$t5, $s9, $s0
    482:	li	$t6, 0
    483:	sw	$t6, 0($t5)
    484:	addi	$t7, $s0, 1
    485:	sw	$t7, 0($sp)
    486:	lw	$s0, 0($sp)
    487:	j	L27
.L28	
    488:	li	$t8, 0
    489:	sw	$t8, 106($gp)
    490:	jr	$ra

initMemoria:
    491:	addi	$sp, $sp, 2
    492:	li	$t0, 32
    493:	sw	$t0, 235($gp)
    494:	li	$t1, 128
    495:	sw	$t1, 236($gp)
    496:	li	$t2, 100
    497:	sw	$t2, 237($gp)
    498:	li	$t3, 10
    499:	sw	$t3, 238($gp)
    500:	li	$t4, 999
    501:	sw	$t4, 94($gp)
    502:	jr	$ra

initDisplay:
    503:	addi	$sp, $sp, 2
    504:	li	$t0, 0
    505:	sw	$t0, 427($gp)
    506:	li	$t1, 1
    507:	sw	$t1, 428($gp)
    508:	li	$t2, 2
    509:	sw	$t2, 429($gp)
    510:	li	$t3, 3
    511:	sw	$t3, 430($gp)
    512:	li	$t4, 4
    513:	sw	$t4, 431($gp)
    514:	li	$t5, 5
    515:	sw	$t5, 432($gp)
    516:	li	$t6, 6
    517:	sw	$t6, 433($gp)
    518:	li	$t7, 7
    519:	sw	$t7, 434($gp)
    520:	li	$t8, 8
    521:	sw	$t8, 435($gp)
    522:	li	$t0, 9
    523:	sw	$t0, 436($gp)
    524:	li	$t1, 10
    525:	sw	$t1, 437($gp)
    526:	li	$t2, 11
    527:	sw	$t2, 438($gp)
    528:	li	$t3, 12
    529:	sw	$t3, 439($gp)
    530:	li	$t4, 13
    531:	sw	$t4, 440($gp)
    532:	li	$t5, 14
    533:	sw	$t5, 441($gp)
    534:	li	$t6, 15
    535:	sw	$t6, 442($gp)
    536:	li	$t7, 16
    537:	sw	$t7, 443($gp)
    538:	li	$t8, 30
    539:	sw	$t8, 444($gp)
    540:	lw	$s0, 427($gp)
    541:	sw	$s0, 445($gp)
    542:	jr	$ra

initConstantes:
    543:	addi	$sp, $sp, 2
    544:	li	$t0, 4095
    545:	sw	$t0, 240($gp)
    546:	li	$t1, 57
    547:	sw	$t1, 424($gp)
    548:	li	$t2, 61
    549:	sw	$t2, 425($gp)
    550:	li	$t3, 63
    551:	sw	$t3, 426($gp)
    552:	jr	$ra

initParticoes:
    553:	addi	$sp, $sp, 5
    554:	li	$t0, 0
    555:	sw	$t0, -2($sp)
.L29	
    556:	lw	$s0, -2($sp)
    557:	lw	$s1, 236($gp)
    558:	lt	$t1, $s0, $s1
    559:	jf	$t1, L30
    560:	la	$s2, 107($gp)
    561:	add	$t2, $s2, $s0
    562:	li	$t3, 0
    563:	sw	$t3, 0($t2)
    564:	la	$s3, 244($gp)
    565:	add	$t4, $s3, $s0
    566:	li	$t5, 0
    567:	sw	$t5, 0($t4)
    568:	addi	$t6, $s0, 1
    569:	sw	$t6, -2($sp)
    570:	lw	$s0, -2($sp)
    571:	j	L29
.L30	
    572:	sw	$ra, -3($sp)
    573:	jal	getTamanhoKernel
    574:	subi	$sp, $sp, 4
    575:	lw	$ra, -3($sp)
    576:	mov	$s0, $v0
    577:	sw	$s0, 0($sp)
    578:	lw	$s1, 0($sp)
    579:	addi	$t7, $s1, 1
    580:	sw	$t7, 239($gp)
    581:	lw	$s2, 235($gp)
    582:	div	$t8, $s1, $s2
    583:	sw	$t8, -1($sp)
    584:	mod	$t0, $s1, $s2
    585:	li	$t2, 0
    586:	gt	$t1, $t0, $t2
    587:	jf	$t1, L31
    588:	lw	$s3, -1($sp)
    589:	addi	$t3, $s3, 1
    590:	sw	$t3, -1($sp)
    591:	lw	$s3, -1($sp)
.L31	
    592:	li	$t4, 0
    593:	sw	$t4, -2($sp)
.L32	
    594:	lw	$s0, -2($sp)
    595:	lw	$s1, -1($sp)
    596:	lt	$t5, $s0, $s1
    597:	jf	$t5, L33
    598:	la	$s2, 107($gp)
    599:	add	$t6, $s2, $s0
    600:	li	$t7, 1
    601:	sw	$t7, 0($t6)
    602:	addi	$t8, $s0, 1
    603:	sw	$t8, -2($sp)
    604:	lw	$s0, -2($sp)
    605:	j	L32
.L33	
    606:	mov	$t0, $sp
    607:	lw	$s0, 235($gp)
    608:	div	$t1, $t0, $s0
    609:	sw	$t1, -1($sp)
    610:	mov	$t2, $sp
    611:	mod	$t3, $t2, $s0
    612:	li	$t5, 0
    613:	gt	$t4, $t3, $t5
    614:	jf	$t4, L34
    615:	lw	$s1, -1($sp)
    616:	addi	$t6, $s1, 1
    617:	sw	$t6, -1($sp)
    618:	lw	$s1, -1($sp)
.L34	
    619:	lw	$s0, -1($sp)
    620:	addi	$t7, $s0, 1
    621:	sw	$t7, -1($sp)
    622:	lw	$s0, -1($sp)
    623:	li	$t8, 0
    624:	sw	$t8, -2($sp)
.L35	
    625:	lw	$s0, -2($sp)
    626:	lw	$s1, -1($sp)
    627:	lt	$t0, $s0, $s1
    628:	jf	$t0, L36
    629:	la	$s2, 244($gp)
    630:	add	$t1, $s2, $s0
    631:	li	$t2, 1
    632:	sw	$t2, 0($t1)
    633:	addi	$t3, $s0, 1
    634:	sw	$t3, -2($sp)
    635:	lw	$s0, -2($sp)
    636:	j	L35
.L36	
    637:	lw	$s0, -1($sp)
    638:	lw	$s1, 235($gp)
    639:	mul	$t4, $s0, $s1
    640:	sw	$t4, 241($gp)
    641:	lw	$s2, 236($gp)
    642:	subi	$t5, $s2, 1
    643:	la	$s3, 244($gp)
    644:	add	$t6, $s3, $t5
    645:	li	$t7, 1
    646:	sw	$t7, 0($t6)
    647:	jr	$ra

initProgramas:
    648:	addi	$sp, $sp, 5
    649:	li	$t0, 0
    650:	sw	$t0, -1($sp)
.L37	
    651:	lw	$s0, -1($sp)
    652:	lw	$s1, 238($gp)
    653:	lt	$t1, $s0, $s1
    654:	jf	$t1, L38
    655:	la	$s2, 374($gp)
    656:	add	$t2, $s2, $s0
    657:	li	$t3, 0
    658:	sw	$t3, 0($t2)
    659:	la	$s3, 384($gp)
    660:	add	$t4, $s3, $s0
    661:	li	$t5, 0
    662:	sw	$t5, 0($t4)
    663:	la	$s4, 394($gp)
    664:	add	$t6, $s4, $s0
    665:	li	$t7, 0
    666:	sw	$t7, 0($t6)
    667:	la	$s5, 404($gp)
    668:	add	$t8, $s5, $s0
    669:	li	$t0, 0
    670:	sw	$t0, 0($t8)
    671:	la	$s6, 414($gp)
    672:	add	$t1, $s6, $s0
    673:	li	$t2, 0
    674:	sw	$t2, 0($t1)
    675:	addi	$t3, $s0, 1
    676:	sw	$t3, -1($sp)
    677:	lw	$s0, -1($sp)
    678:	j	L37
.L38	
    679:	lw	$s0, 239($gp)
    680:	sw	$s0, -2($sp)
    681:	li	$t4, 0
    682:	sw	$t4, -1($sp)
.L39	
    683:	lw	$s0, -2($sp)
    684:	lw	$s1, 240($gp)
    685:	lt	$t5, $s0, $s1
    686:	jf	$t5, L41
    687:	mov	$a0, $s0
    688:	ldk	$t6, $a0
    689:	sw	$t6, 0($sp)
    690:	lw	$s2, 0($sp)
    691:	srli	$t7, $s2, 26
    692:	lw	$s3, 425($gp)
    693:	eq	$t8, $t7, $s3
    694:	jf	$t8, L40
    695:	lw	$s4, -1($sp)
    696:	addi	$t0, $s4, 1
    697:	la	$s5, 374($gp)
    698:	add	$t1, $s5, $s4
    699:	sw	$t0, 0($t1)
    700:	add	$t2, $s5, $s4
    701:	lw	$t2, 0($t2)
    702:	la	$s6, 394($gp)
    703:	add	$t3, $s6, $s4
    704:	sw	$t2, 0($t3)
    705:	la	$s7, 384($gp)
    706:	add	$t4, $s7, $s4
    707:	sw	$s0, 0($t4)
    708:	addi	$t5, $s4, 1
    709:	sw	$t5, -1($sp)
    710:	lw	$s4, -1($sp)
.L40	
    711:	lw	$s0, -2($sp)
    712:	addi	$t6, $s0, 1
    713:	sw	$t6, -2($sp)
    714:	lw	$s0, -2($sp)
    715:	j	L39
.L41	
    716:	jr	$ra

initKernel:
    717:	addi	$sp, $sp, 2
    718:	sw	$ra, 0($sp)
    719:	jal	initProcessos
    720:	subi	$sp, $sp, 3
    721:	lw	$ra, 0($sp)
    722:	mov	$s0, $v0
    723:	sw	$ra, 0($sp)
    724:	jal	initMemoria
    725:	subi	$sp, $sp, 2
    726:	lw	$ra, 0($sp)
    727:	mov	$s0, $v0
    728:	sw	$ra, 0($sp)
    729:	jal	initDisplay
    730:	subi	$sp, $sp, 2
    731:	lw	$ra, 0($sp)
    732:	mov	$s0, $v0
    733:	sw	$ra, 0($sp)
    734:	jal	initConstantes
    735:	subi	$sp, $sp, 2
    736:	lw	$ra, 0($sp)
    737:	mov	$s0, $v0
    738:	sw	$ra, 0($sp)
    739:	jal	initParticoes
    740:	subi	$sp, $sp, 5
    741:	lw	$ra, 0($sp)
    742:	mov	$s0, $v0
    743:	sw	$ra, 0($sp)
    744:	jal	initProgramas
    745:	subi	$sp, $sp, 5
    746:	lw	$ra, 0($sp)
    747:	mov	$s0, $v0
    748:	sw	$ra, 0($sp)
    749:	jal	initInterrupcoes
    750:	subi	$sp, $sp, 2
    751:	lw	$ra, 0($sp)
    752:	mov	$s0, $v0
    753:	jr	$ra

getParticaoLivreMemInstrucoes:
    754:	addi	$sp, $sp, 6
    755:	sw	$a0, -3($sp)
    756:	lw	$s0, -3($sp)
    757:	lw	$s1, 235($gp)
    758:	div	$t0, $s0, $s1
    759:	sw	$t0, -1($sp)
    760:	mod	$t1, $s0, $s1
    761:	li	$t3, 0
    762:	gt	$t2, $t1, $t3
    763:	jf	$t2, L42
    764:	lw	$s2, -1($sp)
    765:	addi	$t4, $s2, 1
    766:	sw	$t4, -1($sp)
    767:	lw	$s2, -1($sp)
.L42	
    768:	la	$s0, 74($gp)
    769:	lw	$s1, 95($gp)
    770:	add	$t5, $s0, $s1
    771:	lw	$s2, -1($sp)
    772:	sw	$s2, 0($t5)
    773:	li	$t6, 0
    774:	sw	$t6, -2($sp)
.L43	
    775:	lw	$s0, -2($sp)
    776:	lw	$s1, 236($gp)
    777:	lt	$t7, $s0, $s1
    778:	jf	$t7, L47
    779:	la	$s2, 107($gp)
    780:	add	$t8, $s2, $s0
    781:	lw	$t8, 0($t8)
    782:	li	$t1, 0
    783:	eq	$t0, $t8, $t1
    784:	jf	$t0, L46
    785:	sw	$s0, 0($sp)
.L44	
    786:	lw	$s0, -1($sp)
    787:	li	$t3, 0
    788:	gt	$t2, $s0, $t3
    789:	jf	$t2, L45
    790:	la	$s1, 107($gp)
    791:	lw	$s2, -2($sp)
    792:	add	$t4, $s1, $s2
    793:	li	$t5, 1
    794:	sw	$t5, 0($t4)
    795:	subi	$t6, $s0, 1
    796:	sw	$t6, -1($sp)
    797:	lw	$s0, -1($sp)
    798:	addi	$t7, $s2, 1
    799:	sw	$t7, -2($sp)
    800:	lw	$s2, -2($sp)
    801:	j	L44
.L45	
    802:	lw	$s0, 0($sp)
    803:	mov	$v0, $s0
    804:	jr	$ra
.L46	
    805:	lw	$s0, -2($sp)
    806:	addi	$t8, $s0, 1
    807:	sw	$t8, -2($sp)
    808:	lw	$s0, -2($sp)
    809:	j	L43
.L47	
    810:	lw	$s0, 237($gp)
    811:	mov	$v0, $s0
    812:	jr	$ra

getParticaoLivreMemDados:
    813:	addi	$sp, $sp, 5
    814:	la	$s0, 24($gp)
    815:	lw	$s1, 95($gp)
    816:	add	$t0, $s0, $s1
    817:	lw	$t0, 0($t0)
    818:	lw	$s2, 235($gp)
    819:	div	$t1, $t0, $s2
    820:	addi	$t2, $t1, 1
    821:	sw	$t2, -1($sp)
    822:	add	$t3, $s0, $s1
    823:	lw	$t3, 0($t3)
    824:	mod	$t4, $t3, $s2
    825:	li	$t6, 0
    826:	gt	$t5, $t4, $t6
    827:	jf	$t5, L48
    828:	lw	$s3, -1($sp)
    829:	addi	$t7, $s3, 1
    830:	sw	$t7, -1($sp)
    831:	lw	$s3, -1($sp)
.L48	
    832:	lw	$s0, 236($gp)
    833:	subi	$t8, $s0, 1
    834:	sw	$t8, -2($sp)
.L49	
    835:	lw	$s0, -2($sp)
    836:	li	$t1, 0
    837:	gt	$t0, $s0, $t1
    838:	jf	$t0, L53
    839:	la	$s1, 244($gp)
    840:	add	$t2, $s1, $s0
    841:	lw	$t2, 0($t2)
    842:	li	$t4, 0
    843:	eq	$t3, $t2, $t4
    844:	jf	$t3, L52
.L50	
    845:	lw	$s0, -1($sp)
    846:	li	$t6, 0
    847:	gt	$t5, $s0, $t6
    848:	jf	$t5, L51
    849:	lw	$s1, -2($sp)
    850:	sw	$s1, 0($sp)
    851:	la	$s2, 244($gp)
    852:	add	$t7, $s2, $s1
    853:	li	$t8, 1
    854:	sw	$t8, 0($t7)
    855:	subi	$t0, $s0, 1
    856:	sw	$t0, -1($sp)
    857:	lw	$s0, -1($sp)
    858:	subi	$t1, $s1, 1
    859:	sw	$t1, -2($sp)
    860:	lw	$s1, -2($sp)
    861:	j	L50
.L51	
    862:	lw	$s0, 0($sp)
    863:	mov	$v0, $s0
    864:	jr	$ra
.L52	
    865:	lw	$s0, -2($sp)
    866:	subi	$t2, $s0, 1
    867:	sw	$t2, -2($sp)
    868:	lw	$s0, -2($sp)
    869:	j	L49
.L53	
    870:	lw	$s0, 237($gp)
    871:	mov	$v0, $s0
    872:	jr	$ra

getProcessoBloqueado:
    873:	addi	$sp, $sp, 3
    874:	li	$t0, 0
    875:	sw	$t0, 0($sp)
.L54	
    876:	lw	$s0, 0($sp)
    877:	lw	$s1, 238($gp)
    878:	lt	$t1, $s0, $s1
    879:	jf	$t1, L56
    880:	la	$s2, 4($gp)
    881:	add	$t2, $s2, $s0
    882:	lw	$t2, 0($t2)
    883:	lw	$s3, 2($gp)
    884:	eq	$t3, $t2, $s3
    885:	jf	$t3, L55
    886:	mov	$v0, $s0
    887:	jr	$ra
.L55	
    888:	lw	$s0, 0($sp)
    889:	addi	$t4, $s0, 1
    890:	sw	$t4, 0($sp)
    891:	lw	$s0, 0($sp)
    892:	j	L54
.L56	
    893:	lw	$s0, 3($gp)
    894:	mov	$v0, $s0
    895:	jr	$ra

removeFromQueuePronto:
    896:	addi	$sp, $sp, 5
    897:	sw	$a0, -2($sp)
    898:	li	$t0, 0
    899:	sw	$t0, -1($sp)
.L57	
    900:	lw	$s0, -1($sp)
    901:	lw	$s1, 238($gp)
    902:	lt	$t1, $s0, $s1
    903:	jf	$t1, L59
    904:	la	$s2, 96($gp)
    905:	add	$t2, $s2, $s0
    906:	lw	$t2, 0($t2)
    907:	lw	$s3, -2($sp)
    908:	eq	$t3, $t2, $s3
    909:	jf	$t3, L58
    910:	add	$t4, $s2, $s0
    911:	li	$t5, 0
    912:	sw	$t5, 0($t4)
    913:	addi	$t6, $s0, 1
    914:	sw	$t6, 0($sp)
.L58	
    915:	lw	$s0, -1($sp)
    916:	addi	$t7, $s0, 1
    917:	sw	$t7, -1($sp)
    918:	lw	$s0, -1($sp)
    919:	j	L57
.L59	
.L60	
    920:	lw	$s0, 0($sp)
    921:	lw	$s1, 238($gp)
    922:	lt	$t8, $s0, $s1
    923:	jf	$t8, L61
    924:	la	$s2, 96($gp)
    925:	add	$t0, $s2, $s0
    926:	lw	$t0, 0($t0)
    927:	subi	$t1, $s0, 1
    928:	add	$t2, $s2, $t1
    929:	sw	$t0, 0($t2)
    930:	addi	$t3, $s0, 1
    931:	sw	$t3, 0($sp)
    932:	lw	$s0, 0($sp)
    933:	j	L60
.L61	
    934:	lw	$s0, 238($gp)
    935:	subi	$t4, $s0, 1
    936:	la	$s1, 96($gp)
    937:	add	$t5, $s1, $t4
    938:	li	$t6, 0
    939:	sw	$t6, 0($t5)
    940:	jr	$ra

organizeQueuePronto:
    941:	addi	$sp, $sp, 3
    942:	li	$t0, 1
    943:	sw	$t0, 0($sp)
.L62	
    944:	lw	$s0, 0($sp)
    945:	lw	$s1, 238($gp)
    946:	lt	$t1, $s0, $s1
    947:	jf	$t1, L63
    948:	la	$s2, 96($gp)
    949:	add	$t2, $s2, $s0
    950:	lw	$t2, 0($t2)
    951:	subi	$t3, $s0, 1
    952:	add	$t4, $s2, $t3
    953:	sw	$t2, 0($t4)
    954:	addi	$t5, $s0, 1
    955:	sw	$t5, 0($sp)
    956:	lw	$s0, 0($sp)
    957:	j	L62
.L63	
    958:	lw	$s0, 238($gp)
    959:	subi	$t6, $s0, 1
    960:	la	$s1, 96($gp)
    961:	add	$t7, $s1, $t6
    962:	li	$t8, 0
    963:	sw	$t8, 0($t7)
    964:	jr	$ra

dequeuePronto:
    965:	addi	$sp, $sp, 3
    966:	la	$s0, 96($gp)
    967:	lw	$t0, 0($s0)
    968:	li	$t2, 0
    969:	ne	$t1, $t0, $t2
    970:	jf	$t1, L64
    971:	lw	$t3, 0($s0)
    972:	sw	$t3, 0($sp)
    973:	sw	$ra, -1($sp)
    974:	jal	organizeQueuePronto
    975:	subi	$sp, $sp, 3
    976:	lw	$ra, -1($sp)
    977:	mov	$s0, $v0
    978:	lw	$s1, 0($sp)
    979:	mov	$v0, $s1
    980:	jr	$ra
.L64	
    981:	lw	$s0, 3($gp)
    982:	mov	$v0, $s0
    983:	jr	$ra

enqueuePronto:
    984:	addi	$sp, $sp, 4
    985:	sw	$a0, -1($sp)
    986:	li	$t0, 0
    987:	sw	$t0, 0($sp)
.L65	
    988:	lw	$s0, 0($sp)
    989:	lw	$s1, 238($gp)
    990:	lt	$t1, $s0, $s1
    991:	jf	$t1, L67
    992:	la	$s2, 96($gp)
    993:	add	$t2, $s2, $s0
    994:	lw	$t2, 0($t2)
    995:	li	$t4, 0
    996:	eq	$t3, $t2, $t4
    997:	jf	$t3, L66
    998:	add	$t5, $s2, $s0
    999:	lw	$s3, -1($sp)
    1000:	sw	$s3, 0($t5)
    1001:	jr	$ra
.L66	
    1002:	lw	$s0, 0($sp)
    1003:	addi	$t6, $s0, 1
    1004:	sw	$t6, 0($sp)
    1005:	lw	$s0, 0($sp)
    1006:	j	L65
.L67	
    1007:	jr	$ra

carregarTodosFilaPronto:
    1008:	addi	$sp, $sp, 3
    1009:	li	$t0, 0
    1010:	sw	$t0, 0($sp)
.L68	
    1011:	lw	$s0, 0($sp)
    1012:	lw	$s1, 238($gp)
    1013:	lt	$t1, $s0, $s1
    1014:	jf	$t1, L71
    1015:	la	$s2, 404($gp)
    1016:	add	$t2, $s2, $s0
    1017:	lw	$t2, 0($t2)
    1018:	li	$t4, 0
    1019:	ne	$t3, $t2, $t4
    1020:	jf	$t3, L70
    1021:	la	$s3, 4($gp)
    1022:	add	$t5, $s3, $s0
    1023:	lw	$t5, 0($t5)
    1024:	lw	$s4, 2($gp)
    1025:	ne	$t6, $t5, $s4
    1026:	jf	$t6, L69
    1027:	add	$t7, $s3, $s0
    1028:	lw	$s5, 1($gp)
    1029:	sw	$s5, 0($t7)
    1030:	addi	$t8, $s0, 1
    1031:	mov	$a0, $t8
    1032:	sw	$ra, -1($sp)
    1033:	jal	enqueuePronto
    1034:	subi	$sp, $sp, 4
    1035:	lw	$ra, -1($sp)
    1036:	mov	$s0, $v0
.L69	
.L70	
    1037:	lw	$s0, 0($sp)
    1038:	addi	$t0, $s0, 1
    1039:	sw	$t0, 0($sp)
    1040:	lw	$s0, 0($sp)
    1041:	j	L68
.L71	
    1042:	jr	$ra

getTamanhoPrograma:
    1043:	addi	$sp, $sp, 5
    1044:	sw	$a0, -2($sp)
    1045:	lw	$s0, -2($sp)
    1046:	sw	$s0, 0($sp)
    1047:	lw	$s1, 0($sp)
    1048:	mov	$a0, $s1
    1049:	ldk	$t0, $a0
    1050:	sw	$t0, -1($sp)
.L72	
    1051:	lw	$s0, -1($sp)
    1052:	srli	$t1, $s0, 26
    1053:	lw	$s1, 424($gp)
    1054:	ne	$t2, $t1, $s1
    1055:	jf	$t2, L73
    1056:	lw	$s2, 0($sp)
    1057:	addi	$t3, $s2, 1
    1058:	sw	$t3, 0($sp)
    1059:	lw	$s2, 0($sp)
    1060:	mov	$a0, $s2
    1061:	ldk	$t4, $a0
    1062:	sw	$t4, -1($sp)
    1063:	lw	$s0, -1($sp)
    1064:	j	L72
.L73	
    1065:	lw	$s0, 0($sp)
    1066:	lw	$s1, -2($sp)
    1067:	sub	$t5, $s0, $s1
    1068:	mov	$v0, $t5
    1069:	jr	$ra

carregarPrograma:
    1070:	addi	$sp, $sp, 10
    1071:	sw	$a0, -7($sp)
    1072:	lw	$s0, -7($sp)
    1073:	mov	$a0, $s0
    1074:	sw	$ra, -8($sp)
    1075:	jal	getIdProgramaByName
    1076:	subi	$sp, $sp, 4
    1077:	lw	$ra, -8($sp)
    1078:	mov	$s0, $v0
    1079:	sw	$s0, -7($sp)
    1080:	lw	$s1, -7($sp)
    1081:	sw	$s1, 95($gp)
    1082:	la	$s2, 384($gp)
    1083:	add	$t0, $s2, $s1
    1084:	lw	$t0, 0($t0)
    1085:	sw	$t0, -1($sp)
    1086:	la	$s3, 374($gp)
    1087:	add	$t1, $s3, $s1
    1088:	lw	$t1, 0($t1)
    1089:	sw	$t1, 0($sp)
    1090:	lw	$s4, -1($sp)
    1091:	sw	$s4, -6($sp)
    1092:	mov	$a0, $s4
    1093:	sw	$ra, -8($sp)
    1094:	jal	getTamanhoPrograma
    1095:	subi	$sp, $sp, 5
    1096:	lw	$ra, -8($sp)
    1097:	mov	$s0, $v0
    1098:	sw	$s0, -2($sp)
    1099:	lw	$s1, -2($sp)
    1100:	mov	$a0, $s1
    1101:	sw	$ra, -8($sp)
    1102:	jal	getParticaoLivreMemInstrucoes
    1103:	subi	$sp, $sp, 6
    1104:	lw	$ra, -8($sp)
    1105:	mov	$s0, $v0
    1106:	sw	$s0, -3($sp)
    1107:	la	$s1, 54($gp)
    1108:	lw	$s2, 95($gp)
    1109:	add	$t2, $s1, $s2
    1110:	lw	$s3, -3($sp)
    1111:	sw	$s3, 0($t2)
    1112:	lw	$s4, 235($gp)
    1113:	mul	$t3, $s4, $s3
    1114:	sw	$t3, -5($sp)
    1115:	lw	$s5, -6($sp)
    1116:	mov	$a0, $s5
    1117:	ldk	$t4, $a0
    1118:	sw	$t4, -4($sp)
.L74	
    1119:	lw	$s0, -4($sp)
    1120:	srli	$t5, $s0, 26
    1121:	lw	$s1, 424($gp)
    1122:	ne	$t6, $t5, $s1
    1123:	jf	$t6, L75
    1124:	mov	$a0, $s0
    1125:	lw	$s2, -5($sp)
    1126:	mov	$a1, $s2
    1127:	sim	$a0, $a1
    1128:	lw	$s3, -6($sp)
    1129:	addi	$t7, $s3, 1
    1130:	sw	$t7, -6($sp)
    1131:	lw	$s3, -6($sp)
    1132:	mov	$a0, $s3
    1133:	ldk	$t8, $a0
    1134:	sw	$t8, -4($sp)
    1135:	lw	$s0, -4($sp)
    1136:	addi	$t0, $s2, 1
    1137:	sw	$t0, -5($sp)
    1138:	lw	$s2, -5($sp)
    1139:	j	L74
.L75	
    1140:	lw	$s0, -4($sp)
    1141:	mov	$a0, $s0
    1142:	lw	$s1, -5($sp)
    1143:	mov	$a1, $s1
    1144:	sim	$a0, $a1
    1145:	lw	$s2, 0($sp)
    1146:	mov	$a0, $s2
    1147:	mmuSelect	, $a0
    1148:	lw	$s3, 235($gp)
    1149:	lw	$s4, -3($sp)
    1150:	mul	$t1, $s3, $s4
    1151:	mov	$a0, $t1
    1152:	mmuLowerIM	$a0
    1153:	la	$s5, 404($gp)
    1154:	lw	$s6, -7($sp)
    1155:	add	$t2, $s5, $s6
    1156:	sw	$s2, 0($t2)
    1157:	la	$s7, 414($gp)
    1158:	add	$t3, $s7, $s6
    1159:	lw	$s8, -1($sp)
    1160:	sw	$s8, 0($t3)
    1161:	li	$t4, 0
    1162:	sw	$t4, 95($gp)
    1163:	jr	$ra

criarPrograma:
    1164:	addi	$sp, $sp, 6
    1165:	lw	$s0, 239($gp)
    1166:	sw	$s0, -2($sp)
    1167:	lw	$s1, 432($gp)
    1168:	mov	$a0, $s1
    1169:	lcd	$a0
    1170:	in	$t0
    1171:	sw	$t0, -3($sp)
    1172:	lw	$s2, -3($sp)
    1173:	subi	$t1, $s2, 1
    1174:	sw	$t1, -3($sp)
    1175:	lw	$s2, -3($sp)
    1176:	addi	$t2, $s2, 1
    1177:	la	$s3, 374($gp)
    1178:	add	$t3, $s3, $s2
    1179:	sw	$t2, 0($t3)
    1180:	add	$t4, $s3, $s2
    1181:	lw	$t4, 0($t4)
    1182:	la	$s4, 394($gp)
    1183:	add	$t5, $s4, $s2
    1184:	sw	$t4, 0($t5)
    1185:	la	$s5, 384($gp)
    1186:	add	$t6, $s5, $s2
    1187:	lw	$s6, -2($sp)
    1188:	sw	$s6, 0($t6)
    1189:	lw	$s7, 425($gp)
    1190:	sw	$s7, -1($sp)
    1191:	lw	$s8, -1($sp)
    1192:	slli	$t7, $s8, 26
    1193:	sw	$t7, -1($sp)
    1194:	lw	$s8, -1($sp)
    1195:	addi	$t8, $s8, 1
    1196:	sw	$t8, -1($sp)
    1197:	lw	$s8, -1($sp)
    1198:	mov	$a0, $s8
    1199:	mov	$a1, $s6
    1200:	sdk	$a0, $a1
    1201:	addi	$t0, $s6, 1
    1202:	sw	$t0, -2($sp)
    1203:	lw	$s6, -2($sp)
    1204:	lw	$s9, 433($gp)
    1205:	mov	$a0, $s9
    1206:	lcd	$a0
    1207:	in	$t1
    1208:	sw	$t1, 0($sp)
.L76	
    1209:	lw	$s0, 0($sp)
    1210:	li	$t3, 0
    1211:	ne	$t2, $s0, $t3
    1212:	jf	$t2, L77
    1213:	lw	$s1, 434($gp)
    1214:	mov	$a0, $s1
    1215:	lcd	$a0
    1216:	in	$t4
    1217:	sw	$t4, -1($sp)
    1218:	lw	$s2, 435($gp)
    1219:	mov	$a0, $s2
    1220:	lcd	$a0
    1221:	lw	$s3, -1($sp)
    1222:	slli	$t5, $s3, 8
    1223:	sw	$t5, -1($sp)
    1224:	lw	$s3, -1($sp)
    1225:	in	$t6
    1226:	add	$t7, $s3, $t6
    1227:	sw	$t7, -1($sp)
    1228:	lw	$s3, -1($sp)
    1229:	lw	$s4, 436($gp)
    1230:	mov	$a0, $s4
    1231:	lcd	$a0
    1232:	slli	$t8, $s3, 8
    1233:	sw	$t8, -1($sp)
    1234:	lw	$s3, -1($sp)
    1235:	in	$t0
    1236:	add	$t1, $s3, $t0
    1237:	sw	$t1, -1($sp)
    1238:	lw	$s3, -1($sp)
    1239:	lw	$s5, 437($gp)
    1240:	mov	$a0, $s5
    1241:	lcd	$a0
    1242:	slli	$t2, $s3, 8
    1243:	sw	$t2, -1($sp)
    1244:	lw	$s3, -1($sp)
    1245:	in	$t3
    1246:	add	$t4, $s3, $t3
    1247:	sw	$t4, -1($sp)
    1248:	lw	$s3, -1($sp)
    1249:	mov	$a0, $s3
    1250:	lw	$s6, -2($sp)
    1251:	mov	$a1, $s6
    1252:	sdk	$a0, $a1
    1253:	addi	$t5, $s6, 1
    1254:	sw	$t5, -2($sp)
    1255:	lw	$s6, -2($sp)
    1256:	lw	$s7, 433($gp)
    1257:	mov	$a0, $s7
    1258:	lcd	$a0
    1259:	in	$t6
    1260:	sw	$t6, 0($sp)
    1261:	lw	$s0, 0($sp)
    1262:	j	L76
.L77	
    1263:	li	$t7, 127
    1264:	sw	$t7, -1($sp)
    1265:	lw	$s0, -1($sp)
    1266:	slli	$t8, $s0, 8
    1267:	sw	$t8, -1($sp)
    1268:	lw	$s0, -1($sp)
    1269:	addi	$t0, $s0, 32
    1270:	sw	$t0, -1($sp)
    1271:	lw	$s0, -1($sp)
    1272:	slli	$t1, $s0, 17
    1273:	sw	$t1, -1($sp)
    1274:	lw	$s0, -1($sp)
    1275:	srli	$t2, $s0, 1
    1276:	sw	$t2, -1($sp)
    1277:	lw	$s0, -1($sp)
    1278:	mov	$a0, $s0
    1279:	lw	$s1, -2($sp)
    1280:	mov	$a1, $s1
    1281:	sdk	$a0, $a1
    1282:	jr	$ra

run:
    1283:	addi	$sp, $sp, 3
    1284:	sw	$a0, 0($sp)
    1285:	la	$s0, 404($gp)
    1286:	lw	$s1, 95($gp)
    1287:	add	$t0, $s0, $s1
    1288:	lw	$t0, 0($t0)
    1289:	li	$t2, 0
    1290:	ne	$t1, $t0, $t2
    1291:	jf	$t1, L78
    1292:	lw	$s2, 0($sp)
    1293:	mov	$a0, $s2
    1294:	lcdCurr	$a0
    1295:	lw	$s3, 444($gp)
    1296:	mov	$a0, $s3
    1297:	lcd	$a0
    1298:	lw	$s4, 241($gp)
    1299:	addi	$t3, $s4, 1
    1300:	sw	$t3, 242($gp)
    1301:	la	$s5, 4($gp)
    1302:	add	$t4, $s5, $s1
    1303:	lw	$s6, 0($gp)
    1304:	sw	$s6, 0($t4)
    1305:	la	$s7, 14($gp)
    1306:	add	$t5, $s7, $s1
    1307:	li	$t6, 0
    1308:	sw	$t6, 0($t5)
    1309:	lw	$s8, 242($gp)
    1310:	mov	$a0, $s8
    1311:	mov	$spb, $a0
    1312:	mov	$a0, $s2
    1313:	mmuSelect	, $a0
    1314:	sw	$ra, -1($sp)
    1315:	mov	$a2, $sp
    1316:	mov	$a3, $gp
    1317:	mov	$sp, $spb
    1318:	mov	$gp, $gpb
    1319:	mov	$spb, $a2
    1320:	mov	$gpb, $a3
    1321:	exec	
    1322:	mov	$sp, $spb
    1323:	mov	$gp, $gpb
    1324:	lw	$ra, -1($sp)
    1325:	lw	$s0, 0($sp)
    1326:	mov	$a0, $s0
    1327:	sw	$ra, -1($sp)
    1328:	jal	killProcess
    1329:	subi	$sp, $sp, 5
    1330:	lw	$ra, -1($sp)
    1331:	mov	$s0, $v0
    1332:	lw	$s1, 427($gp)
    1333:	mov	$a0, $s1
    1334:	lcd	$a0
.L78	
    1335:	jr	$ra

runAgain:
    1336:	addi	$sp, $sp, 8
    1337:	sw	$a0, -5($sp)
    1338:	lw	$s0, -5($sp)
    1339:	mov	$a0, $s0
    1340:	lcdCurr	$a0
    1341:	lw	$s1, 444($gp)
    1342:	mov	$a0, $s1
    1343:	lcd	$a0
    1344:	lw	$s2, 241($gp)
    1345:	addi	$t0, $s2, 1
    1346:	sw	$t0, 242($gp)
    1347:	la	$s3, 4($gp)
    1348:	lw	$s4, 95($gp)
    1349:	add	$t1, $s3, $s4
    1350:	lw	$s5, 0($gp)
    1351:	sw	$s5, 0($t1)
    1352:	la	$s6, 64($gp)
    1353:	add	$t2, $s6, $s4
    1354:	lw	$t2, 0($t2)
    1355:	sw	$t2, -3($sp)
    1356:	lw	$s7, 242($gp)
    1357:	sw	$s7, -2($sp)
    1358:	lw	$s8, -3($sp)
    1359:	lw	$s9, 235($gp)
    1360:	mul	$t3, $s8, $s9
    1361:	sw	$t3, -1($sp)
    1362:	la	$s0, 24($gp)
    1363:	add	$t4, $s0, $s4
    1364:	lw	$t4, 0($t4)
    1365:	sw	$t4, 0($sp)
.L79	
    1366:	lw	$s0, 0($sp)
    1367:	li	$t6, 0
    1368:	gt	$t5, $s0, $t6
    1369:	jf	$t5, L80
    1370:	lw	$s1, -1($sp)
    1371:	mov	$a0, $s1
    1372:	lw	$t7, 0($a0)
    1373:	sw	$t7, -4($sp)
    1374:	lw	$s2, -4($sp)
    1375:	mov	$a0, $s2
    1376:	lw	$s3, -2($sp)
    1377:	mov	$a1, $s3
    1378:	sw	$a0, 0($a1)
    1379:	addi	$t8, $s3, 1
    1380:	sw	$t8, -2($sp)
    1381:	lw	$s3, -2($sp)
    1382:	addi	$t0, $s1, 1
    1383:	sw	$t0, -1($sp)
    1384:	lw	$s1, -1($sp)
    1385:	subi	$t1, $s0, 1
    1386:	sw	$t1, 0($sp)
    1387:	lw	$s0, 0($sp)
    1388:	j	L79
.L80	
    1389:	la	$s0, 24($gp)
    1390:	lw	$s1, 95($gp)
    1391:	add	$t2, $s0, $s1
    1392:	lw	$t2, 0($t2)
    1393:	lw	$s2, 241($gp)
    1394:	add	$t3, $s2, $t2
    1395:	mov	$a0, $t3
    1396:	mov	$spb, $a0
    1397:	addi	$t4, $s1, 1
    1398:	mov	$a0, $t4
    1399:	la	$s3, 14($gp)
    1400:	add	$t5, $s3, $s1
    1401:	lw	$t5, 0($t5)
    1402:	mov	$a1, $t5
    1403:	mmuSelect	, $a0
    1404:	sw	$ra, -6($sp)
    1405:	mov	$a2, $sp
    1406:	mov	$a3, $gp
    1407:	mov	$sp, $spb
    1408:	mov	$gp, $gpb
    1409:	mov	$spb, $a2
    1410:	mov	$gpb, $a3
    1411:	mov	$k1, $a1
    1412:	lw	$rz, 4064($rz)
    1413:	lw	$a0, 4065($rz)
    1414:	lw	$a1, 4066($rz)
    1415:	lw	$a2, 4067($rz)
    1416:	lw	$a3, 4068($rz)
    1417:	lw	$s0, 4069($rz)
    1418:	lw	$s1, 4070($rz)
    1419:	lw	$s2, 4071($rz)
    1420:	lw	$s3, 4072($rz)
    1421:	lw	$s4, 4073($rz)
    1422:	lw	$s5, 4074($rz)
    1423:	lw	$s6, 4075($rz)
    1424:	lw	$s7, 4076($rz)
    1425:	lw	$s8, 4077($rz)
    1426:	lw	$s9, 4078($rz)
    1427:	lw	$t0, 4079($rz)
    1428:	lw	$t1, 4080($rz)
    1429:	lw	$t2, 4081($rz)
    1430:	lw	$t3, 4082($rz)
    1431:	lw	$t4, 4083($rz)
    1432:	lw	$t5, 4084($rz)
    1433:	lw	$t6, 4085($rz)
    1434:	lw	$t7, 4086($rz)
    1435:	lw	$t8, 4087($rz)
    1436:	lw	$v0, 4088($rz)
    1437:	lw	$ra, 4089($rz)
    1438:	execAgain	, $k1
    1439:	mov	$sp, $spb
    1440:	mov	$gp, $gpb
    1441:	lw	$ra, -6($sp)
    1442:	lw	$s0, -5($sp)
    1443:	mov	$a0, $s0
    1444:	sw	$ra, -6($sp)
    1445:	jal	killProcess
    1446:	subi	$sp, $sp, 5
    1447:	lw	$ra, -6($sp)
    1448:	mov	$s0, $v0
    1449:	lw	$s1, 427($gp)
    1450:	mov	$a0, $s1
    1451:	lcd	$a0
    1452:	jr	$ra

chooseAndRunProtagonista:
    1453:	addi	$sp, $sp, 3
    1454:	sw	$a0, 0($sp)
    1455:	lw	$s0, 0($sp)
    1456:	mov	$a0, $s0
    1457:	sw	$ra, -1($sp)
    1458:	jal	getIdProgramaByName
    1459:	subi	$sp, $sp, 4
    1460:	lw	$ra, -1($sp)
    1461:	mov	$s0, $v0
    1462:	sw	$s0, 95($gp)
    1463:	lw	$s1, 95($gp)
    1464:	addi	$t0, $s1, 1
    1465:	sw	$t0, 0($sp)
    1466:	sw	$s1, 94($gp)
    1467:	sw	$ra, -1($sp)
    1468:	jal	loadRegistradores
    1469:	subi	$sp, $sp, 6
    1470:	lw	$ra, -1($sp)
    1471:	mov	$s0, $v0
    1472:	lw	$s1, 0($sp)
    1473:	mov	$a0, $s1
    1474:	sw	$ra, -1($sp)
    1475:	jal	runAgain
    1476:	subi	$sp, $sp, 8
    1477:	lw	$ra, -1($sp)
    1478:	mov	$s0, $v0
    1479:	jr	$ra

runNaoPreemptivo:
    1480:	addi	$sp, $sp, 3
    1481:	sw	$a0, 0($sp)
    1482:	lw	$s0, 0($sp)
    1483:	mov	$a0, $s0
    1484:	sw	$ra, -1($sp)
    1485:	jal	getIdProgramaByName
    1486:	subi	$sp, $sp, 4
    1487:	lw	$ra, -1($sp)
    1488:	mov	$s0, $v0
    1489:	sw	$s0, 95($gp)
    1490:	lw	$s1, 95($gp)
    1491:	addi	$t0, $s1, 1
    1492:	sw	$t0, 0($sp)
    1493:	sw	$s1, 94($gp)
    1494:	lw	$s2, 0($sp)
    1495:	mov	$a0, $s2
    1496:	sw	$ra, -1($sp)
    1497:	jal	run
    1498:	subi	$sp, $sp, 3
    1499:	lw	$ra, -1($sp)
    1500:	mov	$s0, $v0
    1501:	jr	$ra

runPreemptivo:
    1502:	addi	$sp, $sp, 3
    1503:	sw	$ra, -1($sp)
    1504:	jal	carregarTodosFilaPronto
    1505:	subi	$sp, $sp, 3
    1506:	lw	$ra, -1($sp)
    1507:	mov	$s0, $v0
    1508:	sw	$ra, -1($sp)
    1509:	jal	dequeuePronto
    1510:	subi	$sp, $sp, 3
    1511:	lw	$ra, -1($sp)
    1512:	mov	$s0, $v0
    1513:	sw	$s0, 0($sp)
.L81	
    1514:	lw	$s0, 0($sp)
    1515:	lw	$s1, 3($gp)
    1516:	ne	$t0, $s0, $s1
    1517:	jf	$t0, L84
    1518:	subi	$t1, $s0, 1
    1519:	sw	$t1, 95($gp)
    1520:	la	$s2, 14($gp)
    1521:	lw	$s3, 95($gp)
    1522:	add	$t2, $s2, $s3
    1523:	lw	$t2, 0($t2)
    1524:	li	$t4, 0
    1525:	eq	$t3, $t2, $t4
    1526:	jf	$t3, L82
    1527:	mov	$a0, $s0
    1528:	sw	$ra, -1($sp)
    1529:	jal	run
    1530:	subi	$sp, $sp, 3
    1531:	lw	$ra, -1($sp)
    1532:	mov	$s0, $v0
    1533:	j	L83
.L82	
    1534:	sw	$ra, -1($sp)
    1535:	jal	loadRegistradores
    1536:	subi	$sp, $sp, 6
    1537:	lw	$ra, -1($sp)
    1538:	mov	$s0, $v0
    1539:	lw	$s1, 0($sp)
    1540:	mov	$a0, $s1
    1541:	sw	$ra, -1($sp)
    1542:	jal	runAgain
    1543:	subi	$sp, $sp, 8
    1544:	lw	$ra, -1($sp)
    1545:	mov	$s0, $v0
.L83	
    1546:	sw	$ra, -1($sp)
    1547:	jal	dequeuePronto
    1548:	subi	$sp, $sp, 3
    1549:	lw	$ra, -1($sp)
    1550:	mov	$s0, $v0
    1551:	sw	$s0, 0($sp)
    1552:	j	L81
.L84	
    1553:	li	$t5, 0
    1554:	sw	$t5, 106($gp)
    1555:	jr	$ra

main:
    1556:	mov	$spb, $sp
    1557:	mov	$gpb, $gp
    1558:	li	$rz, 0
    1559:	li	$sp, 0
    1560:	li	$gp, 0
    1561:	addi	$sp, $sp, 455
    1562:	sw	$rz, 4064($rz)
    1563:	sw	$a0, 4065($rz)
    1564:	sw	$a1, 4066($rz)
    1565:	sw	$a2, 4067($rz)
    1566:	sw	$a3, 4068($rz)
    1567:	sw	$s0, 4069($rz)
    1568:	sw	$s1, 4070($rz)
    1569:	sw	$s2, 4071($rz)
    1570:	sw	$s3, 4072($rz)
    1571:	sw	$s4, 4073($rz)
    1572:	sw	$s5, 4074($rz)
    1573:	sw	$s6, 4075($rz)
    1574:	sw	$s7, 4076($rz)
    1575:	sw	$s8, 4077($rz)
    1576:	sw	$s9, 4078($rz)
    1577:	sw	$t0, 4079($rz)
    1578:	sw	$t1, 4080($rz)
    1579:	sw	$t2, 4081($rz)
    1580:	sw	$t3, 4082($rz)
    1581:	sw	$t4, 4083($rz)
    1582:	sw	$t5, 4084($rz)
    1583:	sw	$t6, 4085($rz)
    1584:	sw	$t7, 4086($rz)
    1585:	sw	$t8, 4087($rz)
    1586:	sw	$v0, 4088($rz)
    1587:	sw	$ra, 4089($rz)
    1588:	lw	$s0, -5($sp)
    1589:	li	$t1, 0
    1590:	eq	$t0, $s0, $t1
    1591:	jf	$t0, L85
    1592:	jal	initKernel
    1593:	subi	$sp, $sp, 2
    1594:	mov	$s0, $v0
    1595:	lw	$s1, 427($gp)
    1596:	mov	$a0, $s1
    1597:	lcd	$a0
    1598:	li	$t2, 1
    1599:	sw	$t2, -5($sp)
    1600:	cic	
.L85	
    1601:	gic	$t3
    1602:	sw	$t3, -6($sp)
    1603:	lw	$s0, -6($sp)
    1604:	lw	$s1, 373($gp)
    1605:	eq	$t4, $s0, $s1
    1606:	jf	$t4, L93
    1607:	mov	$t5, $spb
    1608:	sw	$t5, 243($gp)
    1609:	lw	$s2, 243($gp)
    1610:	lw	$s3, 242($gp)
    1611:	sub	$t6, $s2, $s3
    1612:	addi	$t7, $t6, 1
    1613:	sw	$t7, 0($sp)
    1614:	la	$s4, 24($gp)
    1615:	lw	$s5, 95($gp)
    1616:	add	$t8, $s4, $s5
    1617:	lw	$s6, 0($sp)
    1618:	sw	$s6, 0($t8)
    1619:	la	$s7, 4($gp)
    1620:	add	$t0, $s7, $s5
    1621:	lw	$s8, 2($gp)
    1622:	sw	$s8, 0($t0)
    1623:	gip	$t1
    1624:	la	$s9, 14($gp)
    1625:	add	$t2, $s9, $s5
    1626:	sw	$t1, 0($t2)
    1627:	la	$s0, 64($gp)
    1628:	add	$t3, $s0, $s5
    1629:	lw	$t3, 0($t3)
    1630:	li	$t5, 0
    1631:	eq	$t4, $t3, $t5
    1632:	jf	$t4, L86
    1633:	jal	getParticaoLivreMemDados
    1634:	subi	$sp, $sp, 5
    1635:	mov	$s0, $v0
    1636:	sw	$s0, -4($sp)
    1637:	la	$s1, 64($gp)
    1638:	lw	$s2, 95($gp)
    1639:	add	$t6, $s1, $s2
    1640:	lw	$s3, -4($sp)
    1641:	sw	$s3, 0($t6)
    1642:	j	L87
.L86	
    1643:	la	$s0, 64($gp)
    1644:	lw	$s1, 95($gp)
    1645:	add	$t7, $s0, $s1
    1646:	lw	$t7, 0($t7)
    1647:	sw	$t7, -4($sp)
.L87	
    1648:	lw	$s0, 242($gp)
    1649:	sw	$s0, -2($sp)
    1650:	lw	$s1, -4($sp)
    1651:	lw	$s2, 235($gp)
    1652:	mul	$t8, $s1, $s2
    1653:	sw	$t8, -1($sp)
.L88	
    1654:	lw	$s0, 0($sp)
    1655:	li	$t1, 0
    1656:	gt	$t0, $s0, $t1
    1657:	jf	$t0, L89
    1658:	lw	$s1, -2($sp)
    1659:	mov	$a0, $s1
    1660:	lw	$t2, 0($a0)
    1661:	sw	$t2, -3($sp)
    1662:	lw	$s2, -3($sp)
    1663:	mov	$a0, $s2
    1664:	lw	$s3, -1($sp)
    1665:	mov	$a1, $s3
    1666:	sw	$a0, 0($a1)
    1667:	addi	$t3, $s1, 1
    1668:	sw	$t3, -2($sp)
    1669:	lw	$s1, -2($sp)
    1670:	addi	$t4, $s3, 1
    1671:	sw	$t4, -1($sp)
    1672:	lw	$s3, -1($sp)
    1673:	subi	$t5, $s0, 1
    1674:	sw	$t5, 0($sp)
    1675:	lw	$s0, 0($sp)
    1676:	j	L88
.L89	
    1677:	lw	$s0, 95($gp)
    1678:	lw	$s1, 94($gp)
    1679:	eq	$t6, $s0, $s1
    1680:	jf	$t6, L90
    1681:	addi	$t7, $s0, 1
    1682:	mov	$a0, $t7
    1683:	jal	runAgain
    1684:	subi	$sp, $sp, 8
    1685:	mov	$s0, $v0
    1686:	j	L92
.L90	
    1687:	lw	$s0, -4($sp)
    1688:	mov	$a0, $s0
    1689:	jal	saveRegistradores
    1690:	subi	$sp, $sp, 6
    1691:	mov	$s0, $v0
    1692:	la	$s1, 4($gp)
    1693:	lw	$s2, 95($gp)
    1694:	add	$t8, $s1, $s2
    1695:	lw	$s3, 2($gp)
    1696:	sw	$s3, 0($t8)
    1697:	addi	$t0, $s2, 1
    1698:	mov	$a0, $t0
    1699:	jal	removeFromQueuePronto
    1700:	subi	$sp, $sp, 5
    1701:	mov	$s0, $v0
    1702:	lw	$s1, 106($gp)
    1703:	li	$t2, 1
    1704:	eq	$t1, $s1, $t2
    1705:	jf	$t1, L91
    1706:	lw	$s2, 427($gp)
    1707:	sw	$s2, 445($gp)
    1708:	lw	$s3, 445($gp)
    1709:	mov	$a0, $s3
    1710:	lcd	$a0
    1711:	li	$gp, 0
    1712:	li	$sp, 455
    1713:	cic	
    1714:	jal	runPreemptivo
    1715:	subi	$sp, $sp, 3
    1716:	mov	$s0, $v0
.L91	
.L92	
    1717:	lw	$s0, 427($gp)
    1718:	sw	$s0, 445($gp)
    1719:	lw	$s1, 445($gp)
    1720:	mov	$a0, $s1
    1721:	lcd	$a0
    1722:	li	$gp, 0
    1723:	li	$sp, 455
    1724:	cic	
    1725:	j	L101
.L93	
    1726:	lw	$s0, -6($sp)
    1727:	lw	$s1, 372($gp)
    1728:	eq	$t3, $s0, $s1
    1729:	jf	$t3, L100
    1730:	mov	$t4, $spb
    1731:	sw	$t4, 243($gp)
    1732:	lw	$s2, 243($gp)
    1733:	lw	$s3, 242($gp)
    1734:	sub	$t5, $s2, $s3
    1735:	addi	$t6, $t5, 1
    1736:	sw	$t6, 0($sp)
    1737:	la	$s4, 24($gp)
    1738:	lw	$s5, 95($gp)
    1739:	add	$t7, $s4, $s5
    1740:	lw	$s6, 0($sp)
    1741:	sw	$s6, 0($t7)
    1742:	la	$s7, 4($gp)
    1743:	add	$t8, $s7, $s5
    1744:	lw	$s8, 2($gp)
    1745:	sw	$s8, 0($t8)
    1746:	gip	$t0
    1747:	la	$s9, 14($gp)
    1748:	add	$t1, $s9, $s5
    1749:	sw	$t0, 0($t1)
    1750:	la	$s0, 64($gp)
    1751:	add	$t2, $s0, $s5
    1752:	lw	$t2, 0($t2)
    1753:	li	$t4, 0
    1754:	eq	$t3, $t2, $t4
    1755:	jf	$t3, L94
    1756:	jal	getParticaoLivreMemDados
    1757:	subi	$sp, $sp, 5
    1758:	mov	$s0, $v0
    1759:	sw	$s0, -4($sp)
    1760:	la	$s1, 64($gp)
    1761:	lw	$s2, 95($gp)
    1762:	add	$t5, $s1, $s2
    1763:	lw	$s3, -4($sp)
    1764:	sw	$s3, 0($t5)
    1765:	j	L95
.L94	
    1766:	la	$s0, 64($gp)
    1767:	lw	$s1, 95($gp)
    1768:	add	$t6, $s0, $s1
    1769:	lw	$t6, 0($t6)
    1770:	sw	$t6, -4($sp)
.L95	
    1771:	lw	$s0, 242($gp)
    1772:	sw	$s0, -2($sp)
    1773:	lw	$s1, -4($sp)
    1774:	lw	$s2, 235($gp)
    1775:	mul	$t7, $s1, $s2
    1776:	sw	$t7, -1($sp)
.L96	
    1777:	lw	$s0, 0($sp)
    1778:	li	$t0, 0
    1779:	gt	$t8, $s0, $t0
    1780:	jf	$t8, L97
    1781:	lw	$s1, -2($sp)
    1782:	mov	$a0, $s1
    1783:	lw	$t1, 0($a0)
    1784:	sw	$t1, -3($sp)
    1785:	lw	$s2, -3($sp)
    1786:	mov	$a0, $s2
    1787:	lw	$s3, -1($sp)
    1788:	mov	$a1, $s3
    1789:	sw	$a0, 0($a1)
    1790:	addi	$t2, $s1, 1
    1791:	sw	$t2, -2($sp)
    1792:	lw	$s1, -2($sp)
    1793:	addi	$t3, $s3, 1
    1794:	sw	$t3, -1($sp)
    1795:	lw	$s3, -1($sp)
    1796:	subi	$t4, $s0, 1
    1797:	sw	$t4, 0($sp)
    1798:	lw	$s0, 0($sp)
    1799:	j	L96
.L97	
    1800:	lw	$s0, 95($gp)
    1801:	lw	$s1, 94($gp)
    1802:	eq	$t5, $s0, $s1
    1803:	jf	$t5, L98
    1804:	addi	$t6, $s0, 1
    1805:	mov	$a0, $t6
    1806:	jal	runAgain
    1807:	subi	$sp, $sp, 8
    1808:	mov	$s0, $v0
    1809:	j	L99
.L98	
    1810:	lw	$s0, -4($sp)
    1811:	mov	$a0, $s0
    1812:	jal	saveRegistradores
    1813:	subi	$sp, $sp, 6
    1814:	mov	$s0, $v0
    1815:	la	$s1, 4($gp)
    1816:	lw	$s2, 95($gp)
    1817:	add	$t7, $s1, $s2
    1818:	lw	$s3, 1($gp)
    1819:	sw	$s3, 0($t7)
    1820:	lw	$s4, 427($gp)
    1821:	sw	$s4, 445($gp)
    1822:	lw	$s5, 445($gp)
    1823:	mov	$a0, $s5
    1824:	lcd	$a0
    1825:	li	$gp, 0
    1826:	li	$sp, 455
    1827:	cic	
    1828:	addi	$t8, $s2, 1
    1829:	mov	$a0, $t8
    1830:	jal	enqueuePronto
    1831:	subi	$sp, $sp, 4
    1832:	mov	$s0, $v0
    1833:	jal	runPreemptivo
    1834:	subi	$sp, $sp, 3
    1835:	mov	$s0, $v0
.L99	
    1836:	lw	$s0, 427($gp)
    1837:	sw	$s0, 445($gp)
    1838:	lw	$s1, 445($gp)
    1839:	mov	$a0, $s1
    1840:	lcd	$a0
    1841:	li	$gp, 0
    1842:	li	$sp, 455
    1843:	cic	
.L100	
.L101	
.L102	
    1844:	li	$t0, 1
    1845:	jf	$t0, L152
    1846:	in	$t1
    1847:	sw	$t1, -7($sp)
    1848:	lw	$s0, 445($gp)
    1849:	lw	$s1, 427($gp)
    1850:	eq	$t2, $s0, $s1
    1851:	jf	$t2, L111
    1852:	lw	$s2, -7($sp)
    1853:	li	$t4, 1
    1854:	eq	$t3, $s2, $t4
    1855:	jf	$t3, L103
    1856:	lw	$s3, 428($gp)
    1857:	sw	$s3, -7($sp)
    1858:	lw	$s2, -7($sp)
    1859:	j	L110
.L103	
    1860:	lw	$s0, -7($sp)
    1861:	li	$t6, 2
    1862:	eq	$t5, $s0, $t6
    1863:	jf	$t5, L104
    1864:	lw	$s1, 438($gp)
    1865:	sw	$s1, -7($sp)
    1866:	lw	$s0, -7($sp)
    1867:	j	L109
.L104	
    1868:	lw	$s0, -7($sp)
    1869:	li	$t8, 3
    1870:	eq	$t7, $s0, $t8
    1871:	jf	$t7, L105
    1872:	lw	$s1, 441($gp)
    1873:	sw	$s1, -7($sp)
    1874:	lw	$s0, -7($sp)
    1875:	j	L108
.L105	
    1876:	lw	$s0, -7($sp)
    1877:	li	$t1, 4
    1878:	eq	$t0, $s0, $t1
    1879:	jf	$t0, L106
    1880:	jal	limparDisplays
    1881:	subi	$sp, $sp, 2
    1882:	mov	$s0, $v0
    1883:	lw	$s1, 427($gp)
    1884:	sw	$s1, -7($sp)
    1885:	j	L107
.L106	
    1886:	lw	$s0, 427($gp)
    1887:	sw	$s0, -7($sp)
.L107	
.L108	
.L109	
.L110	
    1888:	j	L151
.L111	
    1889:	lw	$s0, 445($gp)
    1890:	lw	$s1, 428($gp)
    1891:	eq	$t2, $s0, $s1
    1892:	jf	$t2, L118
    1893:	lw	$s2, -7($sp)
    1894:	li	$t4, 1
    1895:	eq	$t3, $s2, $t4
    1896:	jf	$t3, L112
    1897:	jal	criarPrograma
    1898:	subi	$sp, $sp, 6
    1899:	mov	$s0, $v0
    1900:	lw	$s1, 427($gp)
    1901:	sw	$s1, -7($sp)
    1902:	j	L117
.L112	
    1903:	lw	$s0, -7($sp)
    1904:	li	$t6, 2
    1905:	eq	$t5, $s0, $t6
    1906:	jf	$t5, L113
    1907:	lw	$s1, 430($gp)
    1908:	sw	$s1, -7($sp)
    1909:	lw	$s0, -7($sp)
    1910:	jal	getDescritorProgramasHD
    1911:	subi	$sp, $sp, 4
    1912:	mov	$s0, $v0
    1913:	mov	$a0, $s0
    1914:	lcdPgms	$a0
    1915:	j	L116
.L113	
    1916:	lw	$s0, -7($sp)
    1917:	li	$t8, 3
    1918:	eq	$t7, $s0, $t8
    1919:	jf	$t7, L114
    1920:	lw	$s1, 429($gp)
    1921:	sw	$s1, -7($sp)
    1922:	lw	$s0, -7($sp)
    1923:	jal	getDescritorProgramasHD
    1924:	subi	$sp, $sp, 4
    1925:	mov	$s0, $v0
    1926:	mov	$a0, $s0
    1927:	lcdPgms	$a0
    1928:	j	L115
.L114	
    1929:	lw	$s0, 427($gp)
    1930:	sw	$s0, -7($sp)
.L115	
.L116	
.L117	
    1931:	j	L150
.L118	
    1932:	lw	$s0, 445($gp)
    1933:	lw	$s1, 429($gp)
    1934:	eq	$t0, $s0, $s1
    1935:	jf	$t0, L120
    1936:	lw	$s2, -7($sp)
    1937:	li	$t2, 0
    1938:	gt	$t1, $s2, $t2
    1939:	jf	$t1, L119
    1940:	mov	$a0, $s2
    1941:	jal	purgarPrograma
    1942:	subi	$sp, $sp, 5
    1943:	mov	$s0, $v0
.L119	
    1944:	lw	$s0, 427($gp)
    1945:	sw	$s0, -7($sp)
    1946:	j	L149
.L120	
    1947:	lw	$s0, 445($gp)
    1948:	lw	$s1, 430($gp)
    1949:	eq	$t3, $s0, $s1
    1950:	jf	$t3, L122
    1951:	lw	$s2, -7($sp)
    1952:	li	$t5, 0
    1953:	gt	$t4, $s2, $t5
    1954:	jf	$t4, L121
    1955:	mov	$a0, $s2
    1956:	jal	renomearPrograma
    1957:	subi	$sp, $sp, 4
    1958:	mov	$s0, $v0
.L121	
    1959:	lw	$s0, 427($gp)
    1960:	sw	$s0, -7($sp)
    1961:	j	L148
.L122	
    1962:	lw	$s0, 445($gp)
    1963:	lw	$s1, 438($gp)
    1964:	eq	$t6, $s0, $s1
    1965:	jf	$t6, L127
    1966:	lw	$s2, -7($sp)
    1967:	li	$t8, 1
    1968:	eq	$t7, $s2, $t8
    1969:	jf	$t7, L123
    1970:	lw	$s3, 439($gp)
    1971:	sw	$s3, -7($sp)
    1972:	lw	$s2, -7($sp)
    1973:	jal	getDescritorProgramasHD
    1974:	subi	$sp, $sp, 4
    1975:	mov	$s0, $v0
    1976:	mov	$a0, $s0
    1977:	lcdPgms	$a0
    1978:	j	L126
.L123	
    1979:	lw	$s0, -7($sp)
    1980:	li	$t1, 2
    1981:	eq	$t0, $s0, $t1
    1982:	jf	$t0, L124
    1983:	lw	$s1, 440($gp)
    1984:	sw	$s1, -7($sp)
    1985:	lw	$s0, -7($sp)
    1986:	jal	getDescritorProgramasMemoria
    1987:	subi	$sp, $sp, 4
    1988:	mov	$s0, $v0
    1989:	mov	$a0, $s0
    1990:	lcdPgms	$a0
    1991:	j	L125
.L124	
    1992:	lw	$s0, 427($gp)
    1993:	sw	$s0, -7($sp)
.L125	
.L126	
    1994:	j	L147
.L127	
    1995:	lw	$s0, 445($gp)
    1996:	lw	$s1, 439($gp)
    1997:	eq	$t2, $s0, $s1
    1998:	jf	$t2, L129
    1999:	lw	$s2, -7($sp)
    2000:	li	$t4, 0
    2001:	gt	$t3, $s2, $t4
    2002:	jf	$t3, L128
    2003:	mov	$a0, $s2
    2004:	jal	carregarPrograma
    2005:	subi	$sp, $sp, 10
    2006:	mov	$s0, $v0
.L128	
    2007:	lw	$s0, 427($gp)
    2008:	sw	$s0, -7($sp)
    2009:	j	L146
.L129	
    2010:	lw	$s0, 445($gp)
    2011:	lw	$s1, 440($gp)
    2012:	eq	$t5, $s0, $s1
    2013:	jf	$t5, L131
    2014:	lw	$s2, -7($sp)
    2015:	li	$t7, 0
    2016:	gt	$t6, $s2, $t7
    2017:	jf	$t6, L130
    2018:	mov	$a0, $s2
    2019:	jal	killProcess
    2020:	subi	$sp, $sp, 5
    2021:	mov	$s0, $v0
.L130	
    2022:	lw	$s0, 427($gp)
    2023:	sw	$s0, -7($sp)
    2024:	j	L145
.L131	
    2025:	lw	$s0, 445($gp)
    2026:	lw	$s1, 441($gp)
    2027:	eq	$t8, $s0, $s1
    2028:	jf	$t8, L138
    2029:	lw	$s2, -7($sp)
    2030:	li	$t1, 1
    2031:	eq	$t0, $s2, $t1
    2032:	jf	$t0, L132
    2033:	li	$t2, 1
    2034:	sw	$t2, 106($gp)
    2035:	jal	runPreemptivo
    2036:	subi	$sp, $sp, 3
    2037:	mov	$s0, $v0
    2038:	lw	$s1, 427($gp)
    2039:	sw	$s1, -7($sp)
    2040:	j	L137
.L132	
    2041:	lw	$s0, -7($sp)
    2042:	li	$t4, 2
    2043:	eq	$t3, $s0, $t4
    2044:	jf	$t3, L133
    2045:	jal	getDescritorProgramasMemoria
    2046:	subi	$sp, $sp, 4
    2047:	mov	$s0, $v0
    2048:	mov	$a0, $s0
    2049:	lcdPgms	$a0
    2050:	lw	$s1, 442($gp)
    2051:	sw	$s1, -7($sp)
    2052:	j	L136
.L133	
    2053:	lw	$s0, -7($sp)
    2054:	li	$t6, 3
    2055:	eq	$t5, $s0, $t6
    2056:	jf	$t5, L134
    2057:	jal	getDescritorProgramasBloqueados
    2058:	subi	$sp, $sp, 4
    2059:	mov	$s0, $v0
    2060:	mov	$a0, $s0
    2061:	lcdPgms	$a0
    2062:	lw	$s1, 443($gp)
    2063:	sw	$s1, -7($sp)
    2064:	j	L135
.L134	
    2065:	lw	$s0, 427($gp)
    2066:	sw	$s0, -7($sp)
.L135	
.L136	
.L137	
    2067:	j	L144
.L138	
    2068:	lw	$s0, 445($gp)
    2069:	lw	$s1, 442($gp)
    2070:	eq	$t7, $s0, $s1
    2071:	jf	$t7, L140
    2072:	lw	$s2, -7($sp)
    2073:	li	$t0, 0
    2074:	gt	$t8, $s2, $t0
    2075:	jf	$t8, L139
    2076:	li	$t1, 0
    2077:	sw	$t1, 106($gp)
    2078:	mov	$a0, $s2
    2079:	jal	runNaoPreemptivo
    2080:	subi	$sp, $sp, 3
    2081:	mov	$s0, $v0
.L139	
    2082:	lw	$s0, 427($gp)
    2083:	sw	$s0, -7($sp)
    2084:	j	L143
.L140	
    2085:	lw	$s0, 445($gp)
    2086:	lw	$s1, 443($gp)
    2087:	eq	$t2, $s0, $s1
    2088:	jf	$t2, L142
    2089:	lw	$s2, -7($sp)
    2090:	li	$t4, 0
    2091:	gt	$t3, $s2, $t4
    2092:	jf	$t3, L141
    2093:	mov	$a0, $s2
    2094:	jal	chooseAndRunProtagonista
    2095:	subi	$sp, $sp, 3
    2096:	mov	$s0, $v0
.L141	
    2097:	lw	$s0, 427($gp)
    2098:	sw	$s0, -7($sp)
.L142	
.L143	
.L144	
.L145	
.L146	
.L147	
.L148	
.L149	
.L150	
.L151	
    2099:	lw	$s0, -7($sp)
    2100:	sw	$s0, 445($gp)
    2101:	lw	$s1, 445($gp)
    2102:	mov	$a0, $s1
    2103:	lcd	$a0
    2104:	j	L102
.L152	
    2105:	halt	

********** Código binário **********

disk[0] <= 32'b111100_00000000000000011000010101;		// Jump to Main
disk[1] <= 32'b000001_11110_11110_0000000000000100; 	// addi
disk[2] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[3] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[4] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[5] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[6] <= 32'b010110_00001_10000_0000000000000000; 	// ldk
disk[7] <= 32'b010010_11110_10000_1111111111111111; 	// sw
disk[8] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[9] <= 32'b001101_00101_10001_0000000000011010; 	// srli
disk[10] <= 32'b001111_11101_00110_0000000110101010; 	// lw
disk[11] <= 32'b000000_10001_00110_10010_00000_001101; 	// ne
disk[12] <= 32'b010101_10010_00000_0000000000010110; 	// jf
disk[13] <= 32'b001111_11110_00111_0000000000000000; 	// lw
disk[14] <= 32'b000001_00111_10011_0000000000000001; 	// addi
disk[15] <= 32'b010010_11110_10011_0000000000000000; 	// sw
disk[16] <= 32'b001111_11110_00111_0000000000000000; 	// lw
disk[17] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[18] <= 32'b010110_00001_10100_0000000000000000; 	// ldk
disk[19] <= 32'b010010_11110_10100_1111111111111111; 	// sw
disk[20] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[21] <= 32'b111100_00000000000000000000001000; 	// j
disk[22] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[23] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[24] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[25] <= 32'b000001_11110_11110_0000000000000100; 	// addi
disk[26] <= 32'b010010_11110_00001_1111111111111111; 	// sw
disk[27] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[28] <= 32'b010000_00000_10000_0000000000000000; 	// li
disk[29] <= 32'b000000_00101_10000_01111_00000_001100; 	// eq
disk[30] <= 32'b010101_01111_00000_0000000000100010; 	// jf
disk[31] <= 32'b010000_00000_10001_0000000000000001; 	// li
disk[32] <= 32'b001110_10001_11000_0000000000000000; 	// mov
disk[33] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[34] <= 32'b010000_00000_10010_0000000000000001; 	// li
disk[35] <= 32'b010010_11110_10010_0000000000000000; 	// sw
disk[36] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[37] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[38] <= 32'b000000_00101_10100_10011_00000_010000; 	// gt
disk[39] <= 32'b010101_10011_00000_0000000000110000; 	// jf
disk[40] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[41] <= 32'b000011_00110_10101_0000000000000010; 	// muli
disk[42] <= 32'b010010_11110_10101_0000000000000000; 	// sw
disk[43] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[44] <= 32'b000010_00101_10110_0000000000000001; 	// subi
disk[45] <= 32'b010010_11110_10110_1111111111111111; 	// sw
disk[46] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[47] <= 32'b111100_00000000000000000000100100; 	// j
disk[48] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[49] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[50] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[51] <= 32'b000001_11110_11110_0000000000000010; 	// addi
disk[52] <= 32'b010000_00000_00001_0000000000000000; 	// li
disk[53] <= 32'b010000_00000_00010_0000000000000000; 	// li
disk[54] <= 32'b010100_00000_00001_0000000000000000; 	// out
disk[55] <= 32'b010000_00000_00001_0000000000000000; 	// li
disk[56] <= 32'b010000_00000_00010_0000000000000001; 	// li
disk[57] <= 32'b010100_00000_00001_0000000000000001; 	// out
disk[58] <= 32'b010000_00000_00001_0000000000000000; 	// li
disk[59] <= 32'b010000_00000_00010_0000000000000010; 	// li
disk[60] <= 32'b010100_00000_00001_0000000000000010; 	// out
disk[61] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[62] <= 32'b000001_11110_11110_0000000000000110; 	// addi
disk[63] <= 32'b010001_11101_00101_0000000001000000; 	// la
disk[64] <= 32'b001111_11101_00110_0000000001011111; 	// lw
disk[65] <= 32'b000000_00101_00110_01111_00000_000000; 	// add
disk[66] <= 32'b001111_01111_01111_0000000000000000; 	// lw
disk[67] <= 32'b000001_01111_10000_0000000000000001; 	// addi
disk[68] <= 32'b010010_11110_10000_1111111111111110; 	// sw
disk[69] <= 32'b001111_11110_00111_1111111111111110; 	// lw
disk[70] <= 32'b001111_11101_01000_0000000011101011; 	// lw
disk[71] <= 32'b000000_00111_01000_10001_00000_000010; 	// mul
disk[72] <= 32'b010010_11110_10001_1111111111111111; 	// sw
disk[73] <= 32'b001111_11101_01001_0000000011101100; 	// lw
disk[74] <= 32'b000010_01001_10010_0000000000000001; 	// subi
disk[75] <= 32'b000000_01000_10010_10011_00000_000010; 	// mul
disk[76] <= 32'b010010_11110_10011_0000000000000000; 	// sw
disk[77] <= 32'b001111_11101_00101_0000000011101011; 	// lw
disk[78] <= 32'b001111_11101_00110_0000000011101100; 	// lw
disk[79] <= 32'b000000_00101_00110_10100_00000_000010; 	// mul
disk[80] <= 32'b001111_11110_00111_0000000000000000; 	// lw
disk[81] <= 32'b000000_00111_10100_10101_00000_001110; 	// lt
disk[82] <= 32'b010101_10101_00000_0000000001100010; 	// jf
disk[83] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[84] <= 32'b001110_01000_00001_0000000000000000; 	// mov
disk[85] <= 32'b001111_00001_10110_0000000000000000; 	// lw
disk[86] <= 32'b010010_11110_10110_1111111111111101; 	// sw
disk[87] <= 32'b001111_11110_01001_1111111111111101; 	// lw
disk[88] <= 32'b001110_01001_00001_0000000000000000; 	// mov
disk[89] <= 32'b001110_00111_00010_0000000000000000; 	// mov
disk[90] <= 32'b010010_00010_00001_0000000000000000; 	// sw
disk[91] <= 32'b000001_01000_10111_0000000000000001; 	// addi
disk[92] <= 32'b010010_11110_10111_1111111111111111; 	// sw
disk[93] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[94] <= 32'b000001_00111_01111_0000000000000001; 	// addi
disk[95] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[96] <= 32'b001111_11110_00111_0000000000000000; 	// lw
disk[97] <= 32'b111100_00000000000000000001001101; 	// j
disk[98] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[99] <= 32'b000001_11110_11110_0000000000000110; 	// addi
disk[100] <= 32'b010010_11110_00001_1111111111111101; 	// sw
disk[101] <= 32'b001111_11110_00101_1111111111111101; 	// lw
disk[102] <= 32'b000001_00101_01111_0000000000000001; 	// addi
disk[103] <= 32'b010010_11110_01111_1111111111111101; 	// sw
disk[104] <= 32'b001111_11110_00101_1111111111111101; 	// lw
disk[105] <= 32'b001111_11101_00110_0000000011101100; 	// lw
disk[106] <= 32'b000010_00110_10000_0000000000000001; 	// subi
disk[107] <= 32'b001111_11101_00111_0000000011101011; 	// lw
disk[108] <= 32'b000000_00111_10000_10001_00000_000010; 	// mul
disk[109] <= 32'b010010_11110_10001_1111111111111111; 	// sw
disk[110] <= 32'b000000_00101_00111_10010_00000_000010; 	// mul
disk[111] <= 32'b010010_11110_10010_0000000000000000; 	// sw
disk[112] <= 32'b001111_11101_00101_0000000011101011; 	// lw
disk[113] <= 32'b001111_11101_00110_0000000011101100; 	// lw
disk[114] <= 32'b000000_00101_00110_10011_00000_000010; 	// mul
disk[115] <= 32'b001111_11110_00111_1111111111111111; 	// lw
disk[116] <= 32'b000000_00111_10011_10100_00000_001110; 	// lt
disk[117] <= 32'b010101_10100_00000_0000000010000101; 	// jf
disk[118] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[119] <= 32'b001111_00001_10101_0000000000000000; 	// lw
disk[120] <= 32'b010010_11110_10101_1111111111111110; 	// sw
disk[121] <= 32'b001111_11110_01000_1111111111111110; 	// lw
disk[122] <= 32'b001110_01000_00001_0000000000000000; 	// mov
disk[123] <= 32'b001111_11110_01001_0000000000000000; 	// lw
disk[124] <= 32'b001110_01001_00010_0000000000000000; 	// mov
disk[125] <= 32'b010010_00010_00001_0000000000000000; 	// sw
disk[126] <= 32'b000001_00111_10110_0000000000000001; 	// addi
disk[127] <= 32'b010010_11110_10110_1111111111111111; 	// sw
disk[128] <= 32'b001111_11110_00111_1111111111111111; 	// lw
disk[129] <= 32'b000001_01001_10111_0000000000000001; 	// addi
disk[130] <= 32'b010010_11110_10111_0000000000000000; 	// sw
disk[131] <= 32'b001111_11110_01001_0000000000000000; 	// lw
disk[132] <= 32'b111100_00000000000000000001110000; 	// j
disk[133] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[134] <= 32'b000001_11110_11110_0000000000000100; 	// addi
disk[135] <= 32'b010010_11110_00001_1111111111111111; 	// sw
disk[136] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[137] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[138] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[139] <= 32'b001111_11101_00110_0000000011101110; 	// lw
disk[140] <= 32'b000000_00101_00110_10000_00000_001110; 	// lt
disk[141] <= 32'b010101_10000_00000_0000000010011111; 	// jf
disk[142] <= 32'b010001_11101_00111_0000000110001010; 	// la
disk[143] <= 32'b000000_00111_00101_10001_00000_000000; 	// add
disk[144] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[145] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[146] <= 32'b000000_10001_01000_10010_00000_001100; 	// eq
disk[147] <= 32'b010101_10010_00000_0000000010011010; 	// jf
disk[148] <= 32'b010001_11101_01001_0000000101110110; 	// la
disk[149] <= 32'b000000_01001_00101_10011_00000_000000; 	// add
disk[150] <= 32'b001111_10011_10011_0000000000000000; 	// lw
disk[151] <= 32'b000010_10011_10100_0000000000000001; 	// subi
disk[152] <= 32'b001110_10100_11000_0000000000000000; 	// mov
disk[153] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[154] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[155] <= 32'b000001_00101_10101_0000000000000001; 	// addi
disk[156] <= 32'b010010_11110_10101_0000000000000000; 	// sw
disk[157] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[158] <= 32'b111100_00000000000000000010001010; 	// j
disk[159] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[160] <= 32'b000001_11110_11110_0000000000000101; 	// addi
disk[161] <= 32'b010010_11110_00001_1111111111111110; 	// sw
disk[162] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[163] <= 32'b000010_00101_01111_0000000000000001; 	// subi
disk[164] <= 32'b010010_11101_01111_0000000001011111; 	// sw
disk[165] <= 32'b010001_11101_00110_0000000000110110; 	// la
disk[166] <= 32'b001111_11101_00111_0000000001011111; 	// lw
disk[167] <= 32'b000000_00110_00111_10000_00000_000000; 	// add
disk[168] <= 32'b001111_10000_10000_0000000000000000; 	// lw
disk[169] <= 32'b010010_11110_10000_1111111111111111; 	// sw
disk[170] <= 32'b010001_11101_01000_0000000001001010; 	// la
disk[171] <= 32'b000000_01000_00111_10001_00000_000000; 	// add
disk[172] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[173] <= 32'b010010_11110_10001_0000000000000000; 	// sw
disk[174] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[175] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[176] <= 32'b000000_00101_10011_10010_00000_010000; 	// gt
disk[177] <= 32'b010101_10010_00000_0000000010111110; 	// jf
disk[178] <= 32'b010001_11101_00110_0000000001101011; 	// la
disk[179] <= 32'b001111_11110_00111_1111111111111111; 	// lw
disk[180] <= 32'b000000_00110_00111_10100_00000_000000; 	// add
disk[181] <= 32'b010000_00000_10101_0000000000000000; 	// li
disk[182] <= 32'b010010_10100_10101_0000000000000000; 	// sw
disk[183] <= 32'b000001_00111_10110_0000000000000001; 	// addi
disk[184] <= 32'b010010_11110_10110_1111111111111111; 	// sw
disk[185] <= 32'b001111_11110_00111_1111111111111111; 	// lw
disk[186] <= 32'b000010_00101_10111_0000000000000001; 	// subi
disk[187] <= 32'b010010_11110_10111_0000000000000000; 	// sw
disk[188] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[189] <= 32'b111100_00000000000000000010101110; 	// j
disk[190] <= 32'b010001_11101_00101_0000000110010100; 	// la
disk[191] <= 32'b001111_11101_00110_0000000001011111; 	// lw
disk[192] <= 32'b000000_00101_00110_01111_00000_000000; 	// add
disk[193] <= 32'b010000_00000_10000_0000000000000000; 	// li
disk[194] <= 32'b010010_01111_10000_0000000000000000; 	// sw
disk[195] <= 32'b010001_11101_00111_0000000000000100; 	// la
disk[196] <= 32'b000000_00111_00110_10001_00000_000000; 	// add
disk[197] <= 32'b010000_00000_10010_0000000000000000; 	// li
disk[198] <= 32'b010010_10001_10010_0000000000000000; 	// sw
disk[199] <= 32'b010001_11101_01000_0000000000001110; 	// la
disk[200] <= 32'b000000_01000_00110_10011_00000_000000; 	// add
disk[201] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[202] <= 32'b010010_10011_10100_0000000000000000; 	// sw
disk[203] <= 32'b010001_11101_01001_0000000000011000; 	// la
disk[204] <= 32'b000000_01001_00110_10101_00000_000000; 	// add
disk[205] <= 32'b010000_00000_10110_0000000000000000; 	// li
disk[206] <= 32'b010010_10101_10110_0000000000000000; 	// sw
disk[207] <= 32'b010001_11101_01010_0000000000100010; 	// la
disk[208] <= 32'b000000_01010_00110_10111_00000_000000; 	// add
disk[209] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[210] <= 32'b010010_10111_01111_0000000000000000; 	// sw
disk[211] <= 32'b010001_11101_01011_0000000000101100; 	// la
disk[212] <= 32'b000000_01011_00110_10000_00000_000000; 	// add
disk[213] <= 32'b010000_00000_10001_0000000000000000; 	// li
disk[214] <= 32'b010010_10000_10001_0000000000000000; 	// sw
disk[215] <= 32'b010001_11101_01100_0000000001000000; 	// la
disk[216] <= 32'b000000_01100_00110_10010_00000_000000; 	// add
disk[217] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[218] <= 32'b010010_10010_10011_0000000000000000; 	// sw
disk[219] <= 32'b010001_11101_01101_0000000001001010; 	// la
disk[220] <= 32'b000000_01101_00110_10100_00000_000000; 	// add
disk[221] <= 32'b010000_00000_10101_0000000000000000; 	// li
disk[222] <= 32'b010010_10100_10101_0000000000000000; 	// sw
disk[223] <= 32'b010001_11101_01110_0000000001010100; 	// la
disk[224] <= 32'b000000_01110_00110_10110_00000_000000; 	// add
disk[225] <= 32'b010000_00000_10111_0000000000000000; 	// li
disk[226] <= 32'b010010_10110_10111_0000000000000000; 	// sw
disk[227] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[228] <= 32'b010010_11101_01111_0000000001011111; 	// sw
disk[229] <= 32'b001111_11101_00110_0000000001011111; 	// lw
disk[230] <= 32'b010000_00000_10000_0000001111100111; 	// li
disk[231] <= 32'b010010_11101_10000_0000000001011110; 	// sw
disk[232] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[233] <= 32'b000001_11110_11110_0000000000000101; 	// addi
disk[234] <= 32'b010010_11110_00001_1111111111111110; 	// sw
disk[235] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[236] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[237] <= 32'b010010_11110_11111_1111111111111101; 	// sw
disk[238] <= 32'b111110_00000000000000000010000110; 	// jal
disk[239] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[240] <= 32'b001111_11110_11111_1111111111111101; 	// lw
disk[241] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[242] <= 32'b010010_11110_00101_1111111111111110; 	// sw
disk[243] <= 32'b010001_11101_00110_0000000000000100; 	// la
disk[244] <= 32'b001111_11110_00111_1111111111111110; 	// lw
disk[245] <= 32'b000000_00110_00111_01111_00000_000000; 	// add
disk[246] <= 32'b001111_01111_01111_0000000000000000; 	// lw
disk[247] <= 32'b010000_00000_10001_0000000000000000; 	// li
disk[248] <= 32'b000000_01111_10001_10000_00000_001101; 	// ne
disk[249] <= 32'b010101_10000_00000_0000000100000001; 	// jf
disk[250] <= 32'b000001_00111_10010_0000000000000001; 	// addi
disk[251] <= 32'b001110_10010_00001_0000000000000000; 	// mov
disk[252] <= 32'b010010_11110_11111_1111111111111101; 	// sw
disk[253] <= 32'b111110_00000000000000000010100000; 	// jal
disk[254] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[255] <= 32'b001111_11110_11111_1111111111111101; 	// lw
disk[256] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[257] <= 32'b010001_11101_00101_0000000110000000; 	// la
disk[258] <= 32'b001111_11110_00110_1111111111111110; 	// lw
disk[259] <= 32'b000000_00101_00110_10011_00000_000000; 	// add
disk[260] <= 32'b001111_10011_10011_0000000000000000; 	// lw
disk[261] <= 32'b010010_11110_10011_1111111111111111; 	// sw
disk[262] <= 32'b001111_11110_00111_1111111111111111; 	// lw
disk[263] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[264] <= 32'b010110_00001_10100_0000000000000000; 	// ldk
disk[265] <= 32'b010010_11110_10100_0000000000000000; 	// sw
disk[266] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[267] <= 32'b001101_00101_10101_0000000000011010; 	// srli
disk[268] <= 32'b001111_11101_00110_0000000110101000; 	// lw
disk[269] <= 32'b000000_10101_00110_10110_00000_001101; 	// ne
disk[270] <= 32'b010101_10110_00000_0000000100011011; 	// jf
disk[271] <= 32'b010000_00000_00001_0000000000000000; 	// li
disk[272] <= 32'b001111_11110_00111_1111111111111111; 	// lw
disk[273] <= 32'b001110_00111_00010_0000000000000000; 	// mov
disk[274] <= 32'b010111_00010_00001_0000000000000000; 	// sdk
disk[275] <= 32'b000001_00111_10111_0000000000000001; 	// addi
disk[276] <= 32'b010010_11110_10111_1111111111111111; 	// sw
disk[277] <= 32'b001111_11110_00111_1111111111111111; 	// lw
disk[278] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[279] <= 32'b010110_00001_01111_0000000000000000; 	// ldk
disk[280] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[281] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[282] <= 32'b111100_00000000000000000100001010; 	// j
disk[283] <= 32'b010000_00000_00001_0000000000000000; 	// li
disk[284] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[285] <= 32'b001110_00101_00010_0000000000000000; 	// mov
disk[286] <= 32'b010111_00010_00001_0000000000000000; 	// sdk
disk[287] <= 32'b010001_11101_00110_0000000101110110; 	// la
disk[288] <= 32'b001111_11110_00111_1111111111111110; 	// lw
disk[289] <= 32'b000000_00110_00111_10000_00000_000000; 	// add
disk[290] <= 32'b010000_00000_10001_0000000000000000; 	// li
disk[291] <= 32'b010010_10000_10001_0000000000000000; 	// sw
disk[292] <= 32'b010001_11101_01000_0000000110001010; 	// la
disk[293] <= 32'b000000_01000_00111_10010_00000_000000; 	// add
disk[294] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[295] <= 32'b010010_10010_10011_0000000000000000; 	// sw
disk[296] <= 32'b010001_11101_01001_0000000110000000; 	// la
disk[297] <= 32'b000000_01001_00111_10100_00000_000000; 	// add
disk[298] <= 32'b010000_00000_10101_0000000000000000; 	// li
disk[299] <= 32'b010010_10100_10101_0000000000000000; 	// sw
disk[300] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[301] <= 32'b000001_11110_11110_0000000000000100; 	// addi
disk[302] <= 32'b010010_11110_00001_1111111111111111; 	// sw
disk[303] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[304] <= 32'b000010_00101_01111_0000000000000001; 	// subi
disk[305] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[306] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[307] <= 32'b001111_11101_00110_0000000110101111; 	// lw
disk[308] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[309] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[310] <= 32'b010011_00000_10000_0000000000000000; 	// in
disk[311] <= 32'b010010_11110_10000_0000000000000000; 	// sw
disk[312] <= 32'b010001_11101_00111_0000000110001010; 	// la
disk[313] <= 32'b000000_00111_00101_10001_00000_000000; 	// add
disk[314] <= 32'b001111_11110_01000_0000000000000000; 	// lw
disk[315] <= 32'b010010_10001_01000_0000000000000000; 	// sw
disk[316] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[317] <= 32'b000001_11110_11110_0000000000000100; 	// addi
disk[318] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[319] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[320] <= 32'b010000_00000_10000_0000000000000000; 	// li
disk[321] <= 32'b010010_11110_10000_0000000000000000; 	// sw
disk[322] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[323] <= 32'b001111_11101_00110_0000000011101110; 	// lw
disk[324] <= 32'b000000_00101_00110_10001_00000_001110; 	// lt
disk[325] <= 32'b010101_10001_00000_0000000101011111; 	// jf
disk[326] <= 32'b010001_11101_00111_0000000101110110; 	// la
disk[327] <= 32'b000000_00111_00101_10010_00000_000000; 	// add
disk[328] <= 32'b001111_10010_10010_0000000000000000; 	// lw
disk[329] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[330] <= 32'b000000_10010_10100_10011_00000_001101; 	// ne
disk[331] <= 32'b010101_10011_00000_0000000101011010; 	// jf
disk[332] <= 32'b010001_11101_01000_0000000110001010; 	// la
disk[333] <= 32'b000000_01000_00101_10101_00000_000000; 	// add
disk[334] <= 32'b001111_10101_10101_0000000000000000; 	// lw
disk[335] <= 32'b000010_10101_10110_0000000000000001; 	// subi
disk[336] <= 32'b001110_10110_00001_0000000000000000; 	// mov
disk[337] <= 32'b010010_11110_11111_1111111111111110; 	// sw
disk[338] <= 32'b111110_00000000000000000000011001; 	// jal
disk[339] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[340] <= 32'b001111_11110_11111_1111111111111110; 	// lw
disk[341] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[342] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[343] <= 32'b000000_00110_00101_10111_00000_000000; 	// add
disk[344] <= 32'b010010_11110_10111_0000000000000000; 	// sw
disk[345] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[346] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[347] <= 32'b000001_00101_01111_0000000000000001; 	// addi
disk[348] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[349] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[350] <= 32'b111100_00000000000000000101000010; 	// j
disk[351] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[352] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[353] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[354] <= 32'b000001_11110_11110_0000000000000100; 	// addi
disk[355] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[356] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[357] <= 32'b010000_00000_10000_0000000000000000; 	// li
disk[358] <= 32'b010010_11110_10000_0000000000000000; 	// sw
disk[359] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[360] <= 32'b001111_11101_00110_0000000011101110; 	// lw
disk[361] <= 32'b000000_00101_00110_10001_00000_001110; 	// lt
disk[362] <= 32'b010101_10001_00000_0000000110000100; 	// jf
disk[363] <= 32'b010001_11101_00111_0000000110010100; 	// la
disk[364] <= 32'b000000_00111_00101_10010_00000_000000; 	// add
disk[365] <= 32'b001111_10010_10010_0000000000000000; 	// lw
disk[366] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[367] <= 32'b000000_10010_10100_10011_00000_001101; 	// ne
disk[368] <= 32'b010101_10011_00000_0000000101111111; 	// jf
disk[369] <= 32'b010001_11101_01000_0000000110001010; 	// la
disk[370] <= 32'b000000_01000_00101_10101_00000_000000; 	// add
disk[371] <= 32'b001111_10101_10101_0000000000000000; 	// lw
disk[372] <= 32'b000010_10101_10110_0000000000000001; 	// subi
disk[373] <= 32'b001110_10110_00001_0000000000000000; 	// mov
disk[374] <= 32'b010010_11110_11111_1111111111111110; 	// sw
disk[375] <= 32'b111110_00000000000000000000011001; 	// jal
disk[376] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[377] <= 32'b001111_11110_11111_1111111111111110; 	// lw
disk[378] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[379] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[380] <= 32'b000000_00110_00101_10111_00000_000000; 	// add
disk[381] <= 32'b010010_11110_10111_0000000000000000; 	// sw
disk[382] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[383] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[384] <= 32'b000001_00101_01111_0000000000000001; 	// addi
disk[385] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[386] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[387] <= 32'b111100_00000000000000000101100111; 	// j
disk[388] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[389] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[390] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[391] <= 32'b000001_11110_11110_0000000000000100; 	// addi
disk[392] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[393] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[394] <= 32'b010000_00000_10000_0000000000000000; 	// li
disk[395] <= 32'b010010_11110_10000_0000000000000000; 	// sw
disk[396] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[397] <= 32'b001111_11101_00110_0000000011101110; 	// lw
disk[398] <= 32'b000000_00101_00110_10001_00000_001110; 	// lt
disk[399] <= 32'b010101_10001_00000_0000000110101001; 	// jf
disk[400] <= 32'b010001_11101_00111_0000000000000100; 	// la
disk[401] <= 32'b000000_00111_00101_10010_00000_000000; 	// add
disk[402] <= 32'b001111_10010_10010_0000000000000000; 	// lw
disk[403] <= 32'b001111_11101_01000_0000000000000010; 	// lw
disk[404] <= 32'b000000_10010_01000_10011_00000_001100; 	// eq
disk[405] <= 32'b010101_10011_00000_0000000110100100; 	// jf
disk[406] <= 32'b010001_11101_01001_0000000110001010; 	// la
disk[407] <= 32'b000000_01001_00101_10100_00000_000000; 	// add
disk[408] <= 32'b001111_10100_10100_0000000000000000; 	// lw
disk[409] <= 32'b000010_10100_10101_0000000000000001; 	// subi
disk[410] <= 32'b001110_10101_00001_0000000000000000; 	// mov
disk[411] <= 32'b010010_11110_11111_1111111111111110; 	// sw
disk[412] <= 32'b111110_00000000000000000000011001; 	// jal
disk[413] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[414] <= 32'b001111_11110_11111_1111111111111110; 	// lw
disk[415] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[416] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[417] <= 32'b000000_00110_00101_10110_00000_000000; 	// add
disk[418] <= 32'b010010_11110_10110_0000000000000000; 	// sw
disk[419] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[420] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[421] <= 32'b000001_00101_10111_0000000000000001; 	// addi
disk[422] <= 32'b010010_11110_10111_1111111111111111; 	// sw
disk[423] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[424] <= 32'b111100_00000000000000000110001100; 	// j
disk[425] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[426] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[427] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[428] <= 32'b000001_11110_11110_0000000000000010; 	// addi
disk[429] <= 32'b010000_00000_01111_0000000000000010; 	// li
disk[430] <= 32'b010010_11101_01111_0000000101110100; 	// sw
disk[431] <= 32'b010000_00000_10000_0000000000000001; 	// li
disk[432] <= 32'b010010_11101_10000_0000000101110101; 	// sw
disk[433] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[434] <= 32'b000001_11110_11110_0000000000000011; 	// addi
disk[435] <= 32'b010000_00000_01111_0000000000000001; 	// li
disk[436] <= 32'b010010_11101_01111_0000000000000000; 	// sw
disk[437] <= 32'b010000_00000_10000_0000000000000010; 	// li
disk[438] <= 32'b010010_11101_10000_0000000000000001; 	// sw
disk[439] <= 32'b010000_00000_10001_0000000000000011; 	// li
disk[440] <= 32'b010010_11101_10001_0000000000000010; 	// sw
disk[441] <= 32'b010000_00000_10010_0000000110010100; 	// li
disk[442] <= 32'b010010_11101_10010_0000000000000011; 	// sw
disk[443] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[444] <= 32'b010010_11110_10011_0000000000000000; 	// sw
disk[445] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[446] <= 32'b010000_00000_10101_0000000000001010; 	// li
disk[447] <= 32'b000000_00101_10101_10100_00000_001110; 	// lt
disk[448] <= 32'b010101_10100_00000_0000000111101001; 	// jf
disk[449] <= 32'b010001_11101_00110_0000000000000100; 	// la
disk[450] <= 32'b000000_00110_00101_10110_00000_000000; 	// add
disk[451] <= 32'b010000_00000_10111_0000000000000000; 	// li
disk[452] <= 32'b010010_10110_10111_0000000000000000; 	// sw
disk[453] <= 32'b010001_11101_00111_0000000000001110; 	// la
disk[454] <= 32'b000000_00111_00101_01111_00000_000000; 	// add
disk[455] <= 32'b010000_00000_10000_0000000000000000; 	// li
disk[456] <= 32'b010010_01111_10000_0000000000000000; 	// sw
disk[457] <= 32'b010001_11101_01000_0000000000011000; 	// la
disk[458] <= 32'b000000_01000_00101_10001_00000_000000; 	// add
disk[459] <= 32'b010000_00000_10010_0000000000000000; 	// li
disk[460] <= 32'b010010_10001_10010_0000000000000000; 	// sw
disk[461] <= 32'b010001_11101_01001_0000000000100010; 	// la
disk[462] <= 32'b000000_01001_00101_10011_00000_000000; 	// add
disk[463] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[464] <= 32'b010010_10011_10100_0000000000000000; 	// sw
disk[465] <= 32'b010001_11101_01010_0000000000101100; 	// la
disk[466] <= 32'b000000_01010_00101_10101_00000_000000; 	// add
disk[467] <= 32'b010000_00000_10110_0000000000000000; 	// li
disk[468] <= 32'b010010_10101_10110_0000000000000000; 	// sw
disk[469] <= 32'b010001_11101_01011_0000000001000000; 	// la
disk[470] <= 32'b000000_01011_00101_10111_00000_000000; 	// add
disk[471] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[472] <= 32'b010010_10111_01111_0000000000000000; 	// sw
disk[473] <= 32'b010001_11101_01100_0000000001001010; 	// la
disk[474] <= 32'b000000_01100_00101_10000_00000_000000; 	// add
disk[475] <= 32'b010000_00000_10001_0000000000000000; 	// li
disk[476] <= 32'b010010_10000_10001_0000000000000000; 	// sw
disk[477] <= 32'b010001_11101_01101_0000000001010100; 	// la
disk[478] <= 32'b000000_01101_00101_10010_00000_000000; 	// add
disk[479] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[480] <= 32'b010010_10010_10011_0000000000000000; 	// sw
disk[481] <= 32'b010001_11101_01110_0000000001100000; 	// la
disk[482] <= 32'b000000_01110_00101_10100_00000_000000; 	// add
disk[483] <= 32'b010000_00000_10101_0000000000000000; 	// li
disk[484] <= 32'b010010_10100_10101_0000000000000000; 	// sw
disk[485] <= 32'b000001_00101_10110_0000000000000001; 	// addi
disk[486] <= 32'b010010_11110_10110_0000000000000000; 	// sw
disk[487] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[488] <= 32'b111100_00000000000000000110111101; 	// j
disk[489] <= 32'b010000_00000_10111_0000000000000000; 	// li
disk[490] <= 32'b010010_11101_10111_0000000001101010; 	// sw
disk[491] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[492] <= 32'b000001_11110_11110_0000000000000010; 	// addi
disk[493] <= 32'b010000_00000_01111_0000000000100000; 	// li
disk[494] <= 32'b010010_11101_01111_0000000011101011; 	// sw
disk[495] <= 32'b010000_00000_10000_0000000010000000; 	// li
disk[496] <= 32'b010010_11101_10000_0000000011101100; 	// sw
disk[497] <= 32'b010000_00000_10001_0000000001100100; 	// li
disk[498] <= 32'b010010_11101_10001_0000000011101101; 	// sw
disk[499] <= 32'b010000_00000_10010_0000000000001010; 	// li
disk[500] <= 32'b010010_11101_10010_0000000011101110; 	// sw
disk[501] <= 32'b010000_00000_10011_0000001111100111; 	// li
disk[502] <= 32'b010010_11101_10011_0000000001011110; 	// sw
disk[503] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[504] <= 32'b000001_11110_11110_0000000000000010; 	// addi
disk[505] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[506] <= 32'b010010_11101_01111_0000000110101011; 	// sw
disk[507] <= 32'b010000_00000_10000_0000000000000001; 	// li
disk[508] <= 32'b010010_11101_10000_0000000110101100; 	// sw
disk[509] <= 32'b010000_00000_10001_0000000000000010; 	// li
disk[510] <= 32'b010010_11101_10001_0000000110101101; 	// sw
disk[511] <= 32'b010000_00000_10010_0000000000000011; 	// li
disk[512] <= 32'b010010_11101_10010_0000000110101110; 	// sw
disk[513] <= 32'b010000_00000_10011_0000000000000100; 	// li
disk[514] <= 32'b010010_11101_10011_0000000110101111; 	// sw
disk[515] <= 32'b010000_00000_10100_0000000000000101; 	// li
disk[516] <= 32'b010010_11101_10100_0000000110110000; 	// sw
disk[517] <= 32'b010000_00000_10101_0000000000000110; 	// li
disk[518] <= 32'b010010_11101_10101_0000000110110001; 	// sw
disk[519] <= 32'b010000_00000_10110_0000000000000111; 	// li
disk[520] <= 32'b010010_11101_10110_0000000110110010; 	// sw
disk[521] <= 32'b010000_00000_10111_0000000000001000; 	// li
disk[522] <= 32'b010010_11101_10111_0000000110110011; 	// sw
disk[523] <= 32'b010000_00000_01111_0000000000001001; 	// li
disk[524] <= 32'b010010_11101_01111_0000000110110100; 	// sw
disk[525] <= 32'b010000_00000_10000_0000000000001010; 	// li
disk[526] <= 32'b010010_11101_10000_0000000110110101; 	// sw
disk[527] <= 32'b010000_00000_10001_0000000000001011; 	// li
disk[528] <= 32'b010010_11101_10001_0000000110110110; 	// sw
disk[529] <= 32'b010000_00000_10010_0000000000001100; 	// li
disk[530] <= 32'b010010_11101_10010_0000000110110111; 	// sw
disk[531] <= 32'b010000_00000_10011_0000000000001101; 	// li
disk[532] <= 32'b010010_11101_10011_0000000110111000; 	// sw
disk[533] <= 32'b010000_00000_10100_0000000000001110; 	// li
disk[534] <= 32'b010010_11101_10100_0000000110111001; 	// sw
disk[535] <= 32'b010000_00000_10101_0000000000001111; 	// li
disk[536] <= 32'b010010_11101_10101_0000000110111010; 	// sw
disk[537] <= 32'b010000_00000_10110_0000000000010000; 	// li
disk[538] <= 32'b010010_11101_10110_0000000110111011; 	// sw
disk[539] <= 32'b010000_00000_10111_0000000000011110; 	// li
disk[540] <= 32'b010010_11101_10111_0000000110111100; 	// sw
disk[541] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[542] <= 32'b010010_11101_00101_0000000110111101; 	// sw
disk[543] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[544] <= 32'b000001_11110_11110_0000000000000010; 	// addi
disk[545] <= 32'b010000_00000_01111_0000111111111111; 	// li
disk[546] <= 32'b010010_11101_01111_0000000011110000; 	// sw
disk[547] <= 32'b010000_00000_10000_0000000000111001; 	// li
disk[548] <= 32'b010010_11101_10000_0000000110101000; 	// sw
disk[549] <= 32'b010000_00000_10001_0000000000111101; 	// li
disk[550] <= 32'b010010_11101_10001_0000000110101001; 	// sw
disk[551] <= 32'b010000_00000_10010_0000000000111111; 	// li
disk[552] <= 32'b010010_11101_10010_0000000110101010; 	// sw
disk[553] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[554] <= 32'b000001_11110_11110_0000000000000101; 	// addi
disk[555] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[556] <= 32'b010010_11110_01111_1111111111111110; 	// sw
disk[557] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[558] <= 32'b001111_11101_00110_0000000011101100; 	// lw
disk[559] <= 32'b000000_00101_00110_10000_00000_001110; 	// lt
disk[560] <= 32'b010101_10000_00000_0000001000111101; 	// jf
disk[561] <= 32'b010001_11101_00111_0000000001101011; 	// la
disk[562] <= 32'b000000_00111_00101_10001_00000_000000; 	// add
disk[563] <= 32'b010000_00000_10010_0000000000000000; 	// li
disk[564] <= 32'b010010_10001_10010_0000000000000000; 	// sw
disk[565] <= 32'b010001_11101_01000_0000000011110100; 	// la
disk[566] <= 32'b000000_01000_00101_10011_00000_000000; 	// add
disk[567] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[568] <= 32'b010010_10011_10100_0000000000000000; 	// sw
disk[569] <= 32'b000001_00101_10101_0000000000000001; 	// addi
disk[570] <= 32'b010010_11110_10101_1111111111111110; 	// sw
disk[571] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[572] <= 32'b111100_00000000000000001000101101; 	// j
disk[573] <= 32'b010010_11110_11111_1111111111111101; 	// sw
disk[574] <= 32'b111110_00000000000000000000000001; 	// jal
disk[575] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[576] <= 32'b001111_11110_11111_1111111111111101; 	// lw
disk[577] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[578] <= 32'b010010_11110_00101_0000000000000000; 	// sw
disk[579] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[580] <= 32'b000001_00110_10110_0000000000000001; 	// addi
disk[581] <= 32'b010010_11101_10110_0000000011101111; 	// sw
disk[582] <= 32'b001111_11101_00111_0000000011101011; 	// lw
disk[583] <= 32'b000000_00110_00111_10111_00000_000011; 	// div
disk[584] <= 32'b010010_11110_10111_1111111111111111; 	// sw
disk[585] <= 32'b000000_00110_00111_01111_00000_000100; 	// mod
disk[586] <= 32'b010000_00000_10001_0000000000000000; 	// li
disk[587] <= 32'b000000_01111_10001_10000_00000_010000; 	// gt
disk[588] <= 32'b010101_10000_00000_0000001001010001; 	// jf
disk[589] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[590] <= 32'b000001_01000_10010_0000000000000001; 	// addi
disk[591] <= 32'b010010_11110_10010_1111111111111111; 	// sw
disk[592] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[593] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[594] <= 32'b010010_11110_10011_1111111111111110; 	// sw
disk[595] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[596] <= 32'b001111_11110_00110_1111111111111111; 	// lw
disk[597] <= 32'b000000_00101_00110_10100_00000_001110; 	// lt
disk[598] <= 32'b010101_10100_00000_0000001001011111; 	// jf
disk[599] <= 32'b010001_11101_00111_0000000001101011; 	// la
disk[600] <= 32'b000000_00111_00101_10101_00000_000000; 	// add
disk[601] <= 32'b010000_00000_10110_0000000000000001; 	// li
disk[602] <= 32'b010010_10101_10110_0000000000000000; 	// sw
disk[603] <= 32'b000001_00101_10111_0000000000000001; 	// addi
disk[604] <= 32'b010010_11110_10111_1111111111111110; 	// sw
disk[605] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[606] <= 32'b111100_00000000000000001001010011; 	// j
disk[607] <= 32'b001110_11110_01111_0000000000000000; 	// mov
disk[608] <= 32'b001111_11101_00101_0000000011101011; 	// lw
disk[609] <= 32'b000000_01111_00101_10000_00000_000011; 	// div
disk[610] <= 32'b010010_11110_10000_1111111111111111; 	// sw
disk[611] <= 32'b001110_11110_10001_0000000000000000; 	// mov
disk[612] <= 32'b000000_10001_00101_10010_00000_000100; 	// mod
disk[613] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[614] <= 32'b000000_10010_10100_10011_00000_010000; 	// gt
disk[615] <= 32'b010101_10011_00000_0000001001101100; 	// jf
disk[616] <= 32'b001111_11110_00110_1111111111111111; 	// lw
disk[617] <= 32'b000001_00110_10101_0000000000000001; 	// addi
disk[618] <= 32'b010010_11110_10101_1111111111111111; 	// sw
disk[619] <= 32'b001111_11110_00110_1111111111111111; 	// lw
disk[620] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[621] <= 32'b000001_00101_10110_0000000000000001; 	// addi
disk[622] <= 32'b010010_11110_10110_1111111111111111; 	// sw
disk[623] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[624] <= 32'b010000_00000_10111_0000000000000000; 	// li
disk[625] <= 32'b010010_11110_10111_1111111111111110; 	// sw
disk[626] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[627] <= 32'b001111_11110_00110_1111111111111111; 	// lw
disk[628] <= 32'b000000_00101_00110_01111_00000_001110; 	// lt
disk[629] <= 32'b010101_01111_00000_0000001001111110; 	// jf
disk[630] <= 32'b010001_11101_00111_0000000011110100; 	// la
disk[631] <= 32'b000000_00111_00101_10000_00000_000000; 	// add
disk[632] <= 32'b010000_00000_10001_0000000000000001; 	// li
disk[633] <= 32'b010010_10000_10001_0000000000000000; 	// sw
disk[634] <= 32'b000001_00101_10010_0000000000000001; 	// addi
disk[635] <= 32'b010010_11110_10010_1111111111111110; 	// sw
disk[636] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[637] <= 32'b111100_00000000000000001001110010; 	// j
disk[638] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[639] <= 32'b001111_11101_00110_0000000011101011; 	// lw
disk[640] <= 32'b000000_00101_00110_10011_00000_000010; 	// mul
disk[641] <= 32'b010010_11101_10011_0000000011110001; 	// sw
disk[642] <= 32'b001111_11101_00111_0000000011101100; 	// lw
disk[643] <= 32'b000010_00111_10100_0000000000000001; 	// subi
disk[644] <= 32'b010001_11101_01000_0000000011110100; 	// la
disk[645] <= 32'b000000_01000_10100_10101_00000_000000; 	// add
disk[646] <= 32'b010000_00000_10110_0000000000000001; 	// li
disk[647] <= 32'b010010_10101_10110_0000000000000000; 	// sw
disk[648] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[649] <= 32'b000001_11110_11110_0000000000000101; 	// addi
disk[650] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[651] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[652] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[653] <= 32'b001111_11101_00110_0000000011101110; 	// lw
disk[654] <= 32'b000000_00101_00110_10000_00000_001110; 	// lt
disk[655] <= 32'b010101_10000_00000_0000001010101000; 	// jf
disk[656] <= 32'b010001_11101_00111_0000000101110110; 	// la
disk[657] <= 32'b000000_00111_00101_10001_00000_000000; 	// add
disk[658] <= 32'b010000_00000_10010_0000000000000000; 	// li
disk[659] <= 32'b010010_10001_10010_0000000000000000; 	// sw
disk[660] <= 32'b010001_11101_01000_0000000110000000; 	// la
disk[661] <= 32'b000000_01000_00101_10011_00000_000000; 	// add
disk[662] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[663] <= 32'b010010_10011_10100_0000000000000000; 	// sw
disk[664] <= 32'b010001_11101_01001_0000000110001010; 	// la
disk[665] <= 32'b000000_01001_00101_10101_00000_000000; 	// add
disk[666] <= 32'b010000_00000_10110_0000000000000000; 	// li
disk[667] <= 32'b010010_10101_10110_0000000000000000; 	// sw
disk[668] <= 32'b010001_11101_01010_0000000110010100; 	// la
disk[669] <= 32'b000000_01010_00101_10111_00000_000000; 	// add
disk[670] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[671] <= 32'b010010_10111_01111_0000000000000000; 	// sw
disk[672] <= 32'b010001_11101_01011_0000000110011110; 	// la
disk[673] <= 32'b000000_01011_00101_10000_00000_000000; 	// add
disk[674] <= 32'b010000_00000_10001_0000000000000000; 	// li
disk[675] <= 32'b010010_10000_10001_0000000000000000; 	// sw
disk[676] <= 32'b000001_00101_10010_0000000000000001; 	// addi
disk[677] <= 32'b010010_11110_10010_1111111111111111; 	// sw
disk[678] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[679] <= 32'b111100_00000000000000001010001100; 	// j
disk[680] <= 32'b001111_11101_00101_0000000011101111; 	// lw
disk[681] <= 32'b010010_11110_00101_1111111111111110; 	// sw
disk[682] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[683] <= 32'b010010_11110_10011_1111111111111111; 	// sw
disk[684] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[685] <= 32'b001111_11101_00110_0000000011110000; 	// lw
disk[686] <= 32'b000000_00101_00110_10100_00000_001110; 	// lt
disk[687] <= 32'b010101_10100_00000_0000001011001101; 	// jf
disk[688] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[689] <= 32'b010110_00001_10101_0000000000000000; 	// ldk
disk[690] <= 32'b010010_11110_10101_0000000000000000; 	// sw
disk[691] <= 32'b001111_11110_00111_0000000000000000; 	// lw
disk[692] <= 32'b001101_00111_10110_0000000000011010; 	// srli
disk[693] <= 32'b001111_11101_01000_0000000110101001; 	// lw
disk[694] <= 32'b000000_10110_01000_10111_00000_001100; 	// eq
disk[695] <= 32'b010101_10111_00000_0000001011001000; 	// jf
disk[696] <= 32'b001111_11110_01001_1111111111111111; 	// lw
disk[697] <= 32'b000001_01001_01111_0000000000000001; 	// addi
disk[698] <= 32'b010001_11101_01010_0000000101110110; 	// la
disk[699] <= 32'b000000_01010_01001_10000_00000_000000; 	// add
disk[700] <= 32'b010010_10000_01111_0000000000000000; 	// sw
disk[701] <= 32'b000000_01010_01001_10001_00000_000000; 	// add
disk[702] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[703] <= 32'b010001_11101_01011_0000000110001010; 	// la
disk[704] <= 32'b000000_01011_01001_10010_00000_000000; 	// add
disk[705] <= 32'b010010_10010_10001_0000000000000000; 	// sw
disk[706] <= 32'b010001_11101_01100_0000000110000000; 	// la
disk[707] <= 32'b000000_01100_01001_10011_00000_000000; 	// add
disk[708] <= 32'b010010_10011_00101_0000000000000000; 	// sw
disk[709] <= 32'b000001_01001_10100_0000000000000001; 	// addi
disk[710] <= 32'b010010_11110_10100_1111111111111111; 	// sw
disk[711] <= 32'b001111_11110_01001_1111111111111111; 	// lw
disk[712] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[713] <= 32'b000001_00101_10101_0000000000000001; 	// addi
disk[714] <= 32'b010010_11110_10101_1111111111111110; 	// sw
disk[715] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[716] <= 32'b111100_00000000000000001010101100; 	// j
disk[717] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[718] <= 32'b000001_11110_11110_0000000000000010; 	// addi
disk[719] <= 32'b010010_11110_11111_0000000000000000; 	// sw
disk[720] <= 32'b111110_00000000000000000110110010; 	// jal
disk[721] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[722] <= 32'b001111_11110_11111_0000000000000000; 	// lw
disk[723] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[724] <= 32'b010010_11110_11111_0000000000000000; 	// sw
disk[725] <= 32'b111110_00000000000000000111101100; 	// jal
disk[726] <= 32'b000010_11110_11110_0000000000000010; 	// subi
disk[727] <= 32'b001111_11110_11111_0000000000000000; 	// lw
disk[728] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[729] <= 32'b010010_11110_11111_0000000000000000; 	// sw
disk[730] <= 32'b111110_00000000000000000111111000; 	// jal
disk[731] <= 32'b000010_11110_11110_0000000000000010; 	// subi
disk[732] <= 32'b001111_11110_11111_0000000000000000; 	// lw
disk[733] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[734] <= 32'b010010_11110_11111_0000000000000000; 	// sw
disk[735] <= 32'b111110_00000000000000001000100000; 	// jal
disk[736] <= 32'b000010_11110_11110_0000000000000010; 	// subi
disk[737] <= 32'b001111_11110_11111_0000000000000000; 	// lw
disk[738] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[739] <= 32'b010010_11110_11111_0000000000000000; 	// sw
disk[740] <= 32'b111110_00000000000000001000101010; 	// jal
disk[741] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[742] <= 32'b001111_11110_11111_0000000000000000; 	// lw
disk[743] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[744] <= 32'b010010_11110_11111_0000000000000000; 	// sw
disk[745] <= 32'b111110_00000000000000001010001001; 	// jal
disk[746] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[747] <= 32'b001111_11110_11111_0000000000000000; 	// lw
disk[748] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[749] <= 32'b010010_11110_11111_0000000000000000; 	// sw
disk[750] <= 32'b111110_00000000000000000110101100; 	// jal
disk[751] <= 32'b000010_11110_11110_0000000000000010; 	// subi
disk[752] <= 32'b001111_11110_11111_0000000000000000; 	// lw
disk[753] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[754] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[755] <= 32'b000001_11110_11110_0000000000000110; 	// addi
disk[756] <= 32'b010010_11110_00001_1111111111111101; 	// sw
disk[757] <= 32'b001111_11110_00101_1111111111111101; 	// lw
disk[758] <= 32'b001111_11101_00110_0000000011101011; 	// lw
disk[759] <= 32'b000000_00101_00110_01111_00000_000011; 	// div
disk[760] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[761] <= 32'b000000_00101_00110_10000_00000_000100; 	// mod
disk[762] <= 32'b010000_00000_10010_0000000000000000; 	// li
disk[763] <= 32'b000000_10000_10010_10001_00000_010000; 	// gt
disk[764] <= 32'b010101_10001_00000_0000001100000001; 	// jf
disk[765] <= 32'b001111_11110_00111_1111111111111111; 	// lw
disk[766] <= 32'b000001_00111_10011_0000000000000001; 	// addi
disk[767] <= 32'b010010_11110_10011_1111111111111111; 	// sw
disk[768] <= 32'b001111_11110_00111_1111111111111111; 	// lw
disk[769] <= 32'b010001_11101_00101_0000000001001010; 	// la
disk[770] <= 32'b001111_11101_00110_0000000001011111; 	// lw
disk[771] <= 32'b000000_00101_00110_10100_00000_000000; 	// add
disk[772] <= 32'b001111_11110_00111_1111111111111111; 	// lw
disk[773] <= 32'b010010_10100_00111_0000000000000000; 	// sw
disk[774] <= 32'b010000_00000_10101_0000000000000000; 	// li
disk[775] <= 32'b010010_11110_10101_1111111111111110; 	// sw
disk[776] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[777] <= 32'b001111_11101_00110_0000000011101100; 	// lw
disk[778] <= 32'b000000_00101_00110_10110_00000_001110; 	// lt
disk[779] <= 32'b010101_10110_00000_0000001100101011; 	// jf
disk[780] <= 32'b010001_11101_00111_0000000001101011; 	// la
disk[781] <= 32'b000000_00111_00101_10111_00000_000000; 	// add
disk[782] <= 32'b001111_10111_10111_0000000000000000; 	// lw
disk[783] <= 32'b010000_00000_10000_0000000000000000; 	// li
disk[784] <= 32'b000000_10111_10000_01111_00000_001100; 	// eq
disk[785] <= 32'b010101_01111_00000_0000001100100110; 	// jf
disk[786] <= 32'b010010_11110_00101_0000000000000000; 	// sw
disk[787] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[788] <= 32'b010000_00000_10010_0000000000000000; 	// li
disk[789] <= 32'b000000_00101_10010_10001_00000_010000; 	// gt
disk[790] <= 32'b010101_10001_00000_0000001100100011; 	// jf
disk[791] <= 32'b010001_11101_00110_0000000001101011; 	// la
disk[792] <= 32'b001111_11110_00111_1111111111111110; 	// lw
disk[793] <= 32'b000000_00110_00111_10011_00000_000000; 	// add
disk[794] <= 32'b010000_00000_10100_0000000000000001; 	// li
disk[795] <= 32'b010010_10011_10100_0000000000000000; 	// sw
disk[796] <= 32'b000010_00101_10101_0000000000000001; 	// subi
disk[797] <= 32'b010010_11110_10101_1111111111111111; 	// sw
disk[798] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[799] <= 32'b000001_00111_10110_0000000000000001; 	// addi
disk[800] <= 32'b010010_11110_10110_1111111111111110; 	// sw
disk[801] <= 32'b001111_11110_00111_1111111111111110; 	// lw
disk[802] <= 32'b111100_00000000000000001100010011; 	// j
disk[803] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[804] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[805] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[806] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[807] <= 32'b000001_00101_10111_0000000000000001; 	// addi
disk[808] <= 32'b010010_11110_10111_1111111111111110; 	// sw
disk[809] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[810] <= 32'b111100_00000000000000001100001000; 	// j
disk[811] <= 32'b001111_11101_00101_0000000011101101; 	// lw
disk[812] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[813] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[814] <= 32'b000001_11110_11110_0000000000000101; 	// addi
disk[815] <= 32'b010001_11101_00101_0000000000011000; 	// la
disk[816] <= 32'b001111_11101_00110_0000000001011111; 	// lw
disk[817] <= 32'b000000_00101_00110_01111_00000_000000; 	// add
disk[818] <= 32'b001111_01111_01111_0000000000000000; 	// lw
disk[819] <= 32'b001111_11101_00111_0000000011101011; 	// lw
disk[820] <= 32'b000000_01111_00111_10000_00000_000011; 	// div
disk[821] <= 32'b000001_10000_10001_0000000000000001; 	// addi
disk[822] <= 32'b010010_11110_10001_1111111111111111; 	// sw
disk[823] <= 32'b000000_00101_00110_10010_00000_000000; 	// add
disk[824] <= 32'b001111_10010_10010_0000000000000000; 	// lw
disk[825] <= 32'b000000_10010_00111_10011_00000_000100; 	// mod
disk[826] <= 32'b010000_00000_10101_0000000000000000; 	// li
disk[827] <= 32'b000000_10011_10101_10100_00000_010000; 	// gt
disk[828] <= 32'b010101_10100_00000_0000001101000001; 	// jf
disk[829] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[830] <= 32'b000001_01000_10110_0000000000000001; 	// addi
disk[831] <= 32'b010010_11110_10110_1111111111111111; 	// sw
disk[832] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[833] <= 32'b001111_11101_00101_0000000011101100; 	// lw
disk[834] <= 32'b000010_00101_10111_0000000000000001; 	// subi
disk[835] <= 32'b010010_11110_10111_1111111111111110; 	// sw
disk[836] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[837] <= 32'b010000_00000_10000_0000000000000000; 	// li
disk[838] <= 32'b000000_00101_10000_01111_00000_010000; 	// gt
disk[839] <= 32'b010101_01111_00000_0000001101100111; 	// jf
disk[840] <= 32'b010001_11101_00110_0000000011110100; 	// la
disk[841] <= 32'b000000_00110_00101_10001_00000_000000; 	// add
disk[842] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[843] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[844] <= 32'b000000_10001_10011_10010_00000_001100; 	// eq
disk[845] <= 32'b010101_10010_00000_0000001101100010; 	// jf
disk[846] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[847] <= 32'b010000_00000_10101_0000000000000000; 	// li
disk[848] <= 32'b000000_00101_10101_10100_00000_010000; 	// gt
disk[849] <= 32'b010101_10100_00000_0000001101011111; 	// jf
disk[850] <= 32'b001111_11110_00110_1111111111111110; 	// lw
disk[851] <= 32'b010010_11110_00110_0000000000000000; 	// sw
disk[852] <= 32'b010001_11101_00111_0000000011110100; 	// la
disk[853] <= 32'b000000_00111_00110_10110_00000_000000; 	// add
disk[854] <= 32'b010000_00000_10111_0000000000000001; 	// li
disk[855] <= 32'b010010_10110_10111_0000000000000000; 	// sw
disk[856] <= 32'b000010_00101_01111_0000000000000001; 	// subi
disk[857] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[858] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[859] <= 32'b000010_00110_10000_0000000000000001; 	// subi
disk[860] <= 32'b010010_11110_10000_1111111111111110; 	// sw
disk[861] <= 32'b001111_11110_00110_1111111111111110; 	// lw
disk[862] <= 32'b111100_00000000000000001101001110; 	// j
disk[863] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[864] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[865] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[866] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[867] <= 32'b000010_00101_10001_0000000000000001; 	// subi
disk[868] <= 32'b010010_11110_10001_1111111111111110; 	// sw
disk[869] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[870] <= 32'b111100_00000000000000001101000100; 	// j
disk[871] <= 32'b001111_11101_00101_0000000011101101; 	// lw
disk[872] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[873] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[874] <= 32'b000001_11110_11110_0000000000000011; 	// addi
disk[875] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[876] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[877] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[878] <= 32'b001111_11101_00110_0000000011101110; 	// lw
disk[879] <= 32'b000000_00101_00110_10000_00000_001110; 	// lt
disk[880] <= 32'b010101_10000_00000_0000001101111110; 	// jf
disk[881] <= 32'b010001_11101_00111_0000000000000100; 	// la
disk[882] <= 32'b000000_00111_00101_10001_00000_000000; 	// add
disk[883] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[884] <= 32'b001111_11101_01000_0000000000000010; 	// lw
disk[885] <= 32'b000000_10001_01000_10010_00000_001100; 	// eq
disk[886] <= 32'b010101_10010_00000_0000001101111001; 	// jf
disk[887] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[888] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[889] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[890] <= 32'b000001_00101_10011_0000000000000001; 	// addi
disk[891] <= 32'b010010_11110_10011_0000000000000000; 	// sw
disk[892] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[893] <= 32'b111100_00000000000000001101101101; 	// j
disk[894] <= 32'b001111_11101_00101_0000000000000011; 	// lw
disk[895] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[896] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[897] <= 32'b000001_11110_11110_0000000000000101; 	// addi
disk[898] <= 32'b010010_11110_00001_1111111111111110; 	// sw
disk[899] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[900] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[901] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[902] <= 32'b001111_11101_00110_0000000011101110; 	// lw
disk[903] <= 32'b000000_00101_00110_10000_00000_001110; 	// lt
disk[904] <= 32'b010101_10000_00000_0000001110011001; 	// jf
disk[905] <= 32'b010001_11101_00111_0000000001100000; 	// la
disk[906] <= 32'b000000_00111_00101_10001_00000_000000; 	// add
disk[907] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[908] <= 32'b001111_11110_01000_1111111111111110; 	// lw
disk[909] <= 32'b000000_10001_01000_10010_00000_001100; 	// eq
disk[910] <= 32'b010101_10010_00000_0000001110010100; 	// jf
disk[911] <= 32'b000000_00111_00101_10011_00000_000000; 	// add
disk[912] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[913] <= 32'b010010_10011_10100_0000000000000000; 	// sw
disk[914] <= 32'b000001_00101_10101_0000000000000001; 	// addi
disk[915] <= 32'b010010_11110_10101_0000000000000000; 	// sw
disk[916] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[917] <= 32'b000001_00101_10110_0000000000000001; 	// addi
disk[918] <= 32'b010010_11110_10110_1111111111111111; 	// sw
disk[919] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[920] <= 32'b111100_00000000000000001110000101; 	// j
disk[921] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[922] <= 32'b001111_11101_00110_0000000011101110; 	// lw
disk[923] <= 32'b000000_00101_00110_10111_00000_001110; 	// lt
disk[924] <= 32'b010101_10111_00000_0000001110100111; 	// jf
disk[925] <= 32'b010001_11101_00111_0000000001100000; 	// la
disk[926] <= 32'b000000_00111_00101_01111_00000_000000; 	// add
disk[927] <= 32'b001111_01111_01111_0000000000000000; 	// lw
disk[928] <= 32'b000010_00101_10000_0000000000000001; 	// subi
disk[929] <= 32'b000000_00111_10000_10001_00000_000000; 	// add
disk[930] <= 32'b010010_10001_01111_0000000000000000; 	// sw
disk[931] <= 32'b000001_00101_10010_0000000000000001; 	// addi
disk[932] <= 32'b010010_11110_10010_0000000000000000; 	// sw
disk[933] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[934] <= 32'b111100_00000000000000001110011001; 	// j
disk[935] <= 32'b001111_11101_00101_0000000011101110; 	// lw
disk[936] <= 32'b000010_00101_10011_0000000000000001; 	// subi
disk[937] <= 32'b010001_11101_00110_0000000001100000; 	// la
disk[938] <= 32'b000000_00110_10011_10100_00000_000000; 	// add
disk[939] <= 32'b010000_00000_10101_0000000000000000; 	// li
disk[940] <= 32'b010010_10100_10101_0000000000000000; 	// sw
disk[941] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[942] <= 32'b000001_11110_11110_0000000000000011; 	// addi
disk[943] <= 32'b010000_00000_01111_0000000000000001; 	// li
disk[944] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[945] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[946] <= 32'b001111_11101_00110_0000000011101110; 	// lw
disk[947] <= 32'b000000_00101_00110_10000_00000_001110; 	// lt
disk[948] <= 32'b010101_10000_00000_0000001110111111; 	// jf
disk[949] <= 32'b010001_11101_00111_0000000001100000; 	// la
disk[950] <= 32'b000000_00111_00101_10001_00000_000000; 	// add
disk[951] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[952] <= 32'b000010_00101_10010_0000000000000001; 	// subi
disk[953] <= 32'b000000_00111_10010_10011_00000_000000; 	// add
disk[954] <= 32'b010010_10011_10001_0000000000000000; 	// sw
disk[955] <= 32'b000001_00101_10100_0000000000000001; 	// addi
disk[956] <= 32'b010010_11110_10100_0000000000000000; 	// sw
disk[957] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[958] <= 32'b111100_00000000000000001110110001; 	// j
disk[959] <= 32'b001111_11101_00101_0000000011101110; 	// lw
disk[960] <= 32'b000010_00101_10101_0000000000000001; 	// subi
disk[961] <= 32'b010001_11101_00110_0000000001100000; 	// la
disk[962] <= 32'b000000_00110_10101_10110_00000_000000; 	// add
disk[963] <= 32'b010000_00000_10111_0000000000000000; 	// li
disk[964] <= 32'b010010_10110_10111_0000000000000000; 	// sw
disk[965] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[966] <= 32'b000001_11110_11110_0000000000000011; 	// addi
disk[967] <= 32'b010001_11101_00101_0000000001100000; 	// la
disk[968] <= 32'b001111_00101_01111_0000000000000000; 	// lw
disk[969] <= 32'b010000_00000_10001_0000000000000000; 	// li
disk[970] <= 32'b000000_01111_10001_10000_00000_001101; 	// ne
disk[971] <= 32'b010101_10000_00000_0000001111010110; 	// jf
disk[972] <= 32'b001111_00101_10010_0000000000000000; 	// lw
disk[973] <= 32'b010010_11110_10010_0000000000000000; 	// sw
disk[974] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[975] <= 32'b111110_00000000000000001110101110; 	// jal
disk[976] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[977] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[978] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[979] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[980] <= 32'b001110_00110_11000_0000000000000000; 	// mov
disk[981] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[982] <= 32'b001111_11101_00101_0000000000000011; 	// lw
disk[983] <= 32'b001110_00101_11000_0000000000000000; 	// mov
disk[984] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[985] <= 32'b000001_11110_11110_0000000000000100; 	// addi
disk[986] <= 32'b010010_11110_00001_1111111111111111; 	// sw
disk[987] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[988] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[989] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[990] <= 32'b001111_11101_00110_0000000011101110; 	// lw
disk[991] <= 32'b000000_00101_00110_10000_00000_001110; 	// lt
disk[992] <= 32'b010101_10000_00000_0000001111110000; 	// jf
disk[993] <= 32'b010001_11101_00111_0000000001100000; 	// la
disk[994] <= 32'b000000_00111_00101_10001_00000_000000; 	// add
disk[995] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[996] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[997] <= 32'b000000_10001_10011_10010_00000_001100; 	// eq
disk[998] <= 32'b010101_10010_00000_0000001111101011; 	// jf
disk[999] <= 32'b000000_00111_00101_10100_00000_000000; 	// add
disk[1000] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1001] <= 32'b010010_10100_01000_0000000000000000; 	// sw
disk[1002] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[1003] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1004] <= 32'b000001_00101_10101_0000000000000001; 	// addi
disk[1005] <= 32'b010010_11110_10101_0000000000000000; 	// sw
disk[1006] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1007] <= 32'b111100_00000000000000001111011101; 	// j
disk[1008] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[1009] <= 32'b000001_11110_11110_0000000000000011; 	// addi
disk[1010] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[1011] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[1012] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1013] <= 32'b001111_11101_00110_0000000011101110; 	// lw
disk[1014] <= 32'b000000_00101_00110_10000_00000_001110; 	// lt
disk[1015] <= 32'b010101_10000_00000_0000010000010011; 	// jf
disk[1016] <= 32'b010001_11101_00111_0000000110010100; 	// la
disk[1017] <= 32'b000000_00111_00101_10001_00000_000000; 	// add
disk[1018] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[1019] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[1020] <= 32'b000000_10001_10011_10010_00000_001101; 	// ne
disk[1021] <= 32'b010101_10010_00000_0000010000001110; 	// jf
disk[1022] <= 32'b010001_11101_01000_0000000000000100; 	// la
disk[1023] <= 32'b000000_01000_00101_10100_00000_000000; 	// add
disk[1024] <= 32'b001111_10100_10100_0000000000000000; 	// lw
disk[1025] <= 32'b001111_11101_01001_0000000000000010; 	// lw
disk[1026] <= 32'b000000_10100_01001_10101_00000_001101; 	// ne
disk[1027] <= 32'b010101_10101_00000_0000010000001110; 	// jf
disk[1028] <= 32'b000000_01000_00101_10110_00000_000000; 	// add
disk[1029] <= 32'b001111_11101_01010_0000000000000001; 	// lw
disk[1030] <= 32'b010010_10110_01010_0000000000000000; 	// sw
disk[1031] <= 32'b000001_00101_10111_0000000000000001; 	// addi
disk[1032] <= 32'b001110_10111_00001_0000000000000000; 	// mov
disk[1033] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1034] <= 32'b111110_00000000000000001111011001; 	// jal
disk[1035] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[1036] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1037] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1038] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1039] <= 32'b000001_00101_01111_0000000000000001; 	// addi
disk[1040] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[1041] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1042] <= 32'b111100_00000000000000001111110100; 	// j
disk[1043] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[1044] <= 32'b000001_11110_11110_0000000000000101; 	// addi
disk[1045] <= 32'b010010_11110_00001_1111111111111110; 	// sw
disk[1046] <= 32'b001111_11110_00101_1111111111111110; 	// lw
disk[1047] <= 32'b010010_11110_00101_0000000000000000; 	// sw
disk[1048] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[1049] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1050] <= 32'b010110_00001_01111_0000000000000000; 	// ldk
disk[1051] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[1052] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[1053] <= 32'b001101_00101_10000_0000000000011010; 	// srli
disk[1054] <= 32'b001111_11101_00110_0000000110101000; 	// lw
disk[1055] <= 32'b000000_10000_00110_10001_00000_001101; 	// ne
disk[1056] <= 32'b010101_10001_00000_0000010000101010; 	// jf
disk[1057] <= 32'b001111_11110_00111_0000000000000000; 	// lw
disk[1058] <= 32'b000001_00111_10010_0000000000000001; 	// addi
disk[1059] <= 32'b010010_11110_10010_0000000000000000; 	// sw
disk[1060] <= 32'b001111_11110_00111_0000000000000000; 	// lw
disk[1061] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[1062] <= 32'b010110_00001_10011_0000000000000000; 	// ldk
disk[1063] <= 32'b010010_11110_10011_1111111111111111; 	// sw
disk[1064] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[1065] <= 32'b111100_00000000000000010000011100; 	// j
disk[1066] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1067] <= 32'b001111_11110_00110_1111111111111110; 	// lw
disk[1068] <= 32'b000000_00101_00110_10100_00000_000001; 	// sub
disk[1069] <= 32'b001110_10100_11000_0000000000000000; 	// mov
disk[1070] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[1071] <= 32'b000001_11110_11110_0000000000001010; 	// addi
disk[1072] <= 32'b010010_11110_00001_1111111111111001; 	// sw
disk[1073] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1074] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1075] <= 32'b010010_11110_11111_1111111111111000; 	// sw
disk[1076] <= 32'b111110_00000000000000000010000110; 	// jal
disk[1077] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[1078] <= 32'b001111_11110_11111_1111111111111000; 	// lw
disk[1079] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1080] <= 32'b010010_11110_00101_1111111111111001; 	// sw
disk[1081] <= 32'b001111_11110_00110_1111111111111001; 	// lw
disk[1082] <= 32'b010010_11101_00110_0000000001011111; 	// sw
disk[1083] <= 32'b010001_11101_00111_0000000110000000; 	// la
disk[1084] <= 32'b000000_00111_00110_01111_00000_000000; 	// add
disk[1085] <= 32'b001111_01111_01111_0000000000000000; 	// lw
disk[1086] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[1087] <= 32'b010001_11101_01000_0000000101110110; 	// la
disk[1088] <= 32'b000000_01000_00110_10000_00000_000000; 	// add
disk[1089] <= 32'b001111_10000_10000_0000000000000000; 	// lw
disk[1090] <= 32'b010010_11110_10000_0000000000000000; 	// sw
disk[1091] <= 32'b001111_11110_01001_1111111111111111; 	// lw
disk[1092] <= 32'b010010_11110_01001_1111111111111010; 	// sw
disk[1093] <= 32'b001110_01001_00001_0000000000000000; 	// mov
disk[1094] <= 32'b010010_11110_11111_1111111111111000; 	// sw
disk[1095] <= 32'b111110_00000000000000010000010100; 	// jal
disk[1096] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[1097] <= 32'b001111_11110_11111_1111111111111000; 	// lw
disk[1098] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1099] <= 32'b010010_11110_00101_1111111111111110; 	// sw
disk[1100] <= 32'b001111_11110_00110_1111111111111110; 	// lw
disk[1101] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1102] <= 32'b010010_11110_11111_1111111111111000; 	// sw
disk[1103] <= 32'b111110_00000000000000001011110011; 	// jal
disk[1104] <= 32'b000010_11110_11110_0000000000000110; 	// subi
disk[1105] <= 32'b001111_11110_11111_1111111111111000; 	// lw
disk[1106] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1107] <= 32'b010010_11110_00101_1111111111111101; 	// sw
disk[1108] <= 32'b010001_11101_00110_0000000000110110; 	// la
disk[1109] <= 32'b001111_11101_00111_0000000001011111; 	// lw
disk[1110] <= 32'b000000_00110_00111_10001_00000_000000; 	// add
disk[1111] <= 32'b001111_11110_01000_1111111111111101; 	// lw
disk[1112] <= 32'b010010_10001_01000_0000000000000000; 	// sw
disk[1113] <= 32'b001111_11101_01001_0000000011101011; 	// lw
disk[1114] <= 32'b000000_01001_01000_10010_00000_000010; 	// mul
disk[1115] <= 32'b010010_11110_10010_1111111111111011; 	// sw
disk[1116] <= 32'b001111_11110_01010_1111111111111010; 	// lw
disk[1117] <= 32'b001110_01010_00001_0000000000000000; 	// mov
disk[1118] <= 32'b010110_00001_10011_0000000000000000; 	// ldk
disk[1119] <= 32'b010010_11110_10011_1111111111111100; 	// sw
disk[1120] <= 32'b001111_11110_00101_1111111111111100; 	// lw
disk[1121] <= 32'b001101_00101_10100_0000000000011010; 	// srli
disk[1122] <= 32'b001111_11101_00110_0000000110101000; 	// lw
disk[1123] <= 32'b000000_10100_00110_10101_00000_001101; 	// ne
disk[1124] <= 32'b010101_10101_00000_0000010001110101; 	// jf
disk[1125] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1126] <= 32'b001111_11110_00111_1111111111111011; 	// lw
disk[1127] <= 32'b001110_00111_00010_0000000000000000; 	// mov
disk[1128] <= 32'b011010_00010_00001_0000000000000000; 	// sim
disk[1129] <= 32'b001111_11110_01000_1111111111111010; 	// lw
disk[1130] <= 32'b000001_01000_10110_0000000000000001; 	// addi
disk[1131] <= 32'b010010_11110_10110_1111111111111010; 	// sw
disk[1132] <= 32'b001111_11110_01000_1111111111111010; 	// lw
disk[1133] <= 32'b001110_01000_00001_0000000000000000; 	// mov
disk[1134] <= 32'b010110_00001_10111_0000000000000000; 	// ldk
disk[1135] <= 32'b010010_11110_10111_1111111111111100; 	// sw
disk[1136] <= 32'b001111_11110_00101_1111111111111100; 	// lw
disk[1137] <= 32'b000001_00111_01111_0000000000000001; 	// addi
disk[1138] <= 32'b010010_11110_01111_1111111111111011; 	// sw
disk[1139] <= 32'b001111_11110_00111_1111111111111011; 	// lw
disk[1140] <= 32'b111100_00000000000000010001100000; 	// j
disk[1141] <= 32'b001111_11110_00101_1111111111111100; 	// lw
disk[1142] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1143] <= 32'b001111_11110_00110_1111111111111011; 	// lw
disk[1144] <= 32'b001110_00110_00010_0000000000000000; 	// mov
disk[1145] <= 32'b011010_00010_00001_0000000000000000; 	// sim
disk[1146] <= 32'b001111_11110_00111_0000000000000000; 	// lw
disk[1147] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[1148] <= 32'b011101_00001_00000_0000000000000000; 	// mmuSelect
disk[1149] <= 32'b001111_11101_01000_0000000011101011; 	// lw
disk[1150] <= 32'b001111_11110_01001_1111111111111101; 	// lw
disk[1151] <= 32'b000000_01000_01001_10000_00000_000010; 	// mul
disk[1152] <= 32'b001110_10000_00001_0000000000000000; 	// mov
disk[1153] <= 32'b011011_00000_00001_0000000000000000; 	// mmuLowerIM
disk[1154] <= 32'b010001_11101_01010_0000000110010100; 	// la
disk[1155] <= 32'b001111_11110_01011_1111111111111001; 	// lw
disk[1156] <= 32'b000000_01010_01011_10001_00000_000000; 	// add
disk[1157] <= 32'b010010_10001_00111_0000000000000000; 	// sw
disk[1158] <= 32'b010001_11101_01100_0000000110011110; 	// la
disk[1159] <= 32'b000000_01100_01011_10010_00000_000000; 	// add
disk[1160] <= 32'b001111_11110_01101_1111111111111111; 	// lw
disk[1161] <= 32'b010010_10010_01101_0000000000000000; 	// sw
disk[1162] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[1163] <= 32'b010010_11101_10011_0000000001011111; 	// sw
disk[1164] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[1165] <= 32'b000001_11110_11110_0000000000000110; 	// addi
disk[1166] <= 32'b001111_11101_00101_0000000011101111; 	// lw
disk[1167] <= 32'b010010_11110_00101_1111111111111110; 	// sw
disk[1168] <= 32'b001111_11101_00110_0000000110110000; 	// lw
disk[1169] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1170] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1171] <= 32'b010011_00000_01111_0000000000000000; 	// in
disk[1172] <= 32'b010010_11110_01111_1111111111111101; 	// sw
disk[1173] <= 32'b001111_11110_00111_1111111111111101; 	// lw
disk[1174] <= 32'b000010_00111_10000_0000000000000001; 	// subi
disk[1175] <= 32'b010010_11110_10000_1111111111111101; 	// sw
disk[1176] <= 32'b001111_11110_00111_1111111111111101; 	// lw
disk[1177] <= 32'b000001_00111_10001_0000000000000001; 	// addi
disk[1178] <= 32'b010001_11101_01000_0000000101110110; 	// la
disk[1179] <= 32'b000000_01000_00111_10010_00000_000000; 	// add
disk[1180] <= 32'b010010_10010_10001_0000000000000000; 	// sw
disk[1181] <= 32'b000000_01000_00111_10011_00000_000000; 	// add
disk[1182] <= 32'b001111_10011_10011_0000000000000000; 	// lw
disk[1183] <= 32'b010001_11101_01001_0000000110001010; 	// la
disk[1184] <= 32'b000000_01001_00111_10100_00000_000000; 	// add
disk[1185] <= 32'b010010_10100_10011_0000000000000000; 	// sw
disk[1186] <= 32'b010001_11101_01010_0000000110000000; 	// la
disk[1187] <= 32'b000000_01010_00111_10101_00000_000000; 	// add
disk[1188] <= 32'b001111_11110_01011_1111111111111110; 	// lw
disk[1189] <= 32'b010010_10101_01011_0000000000000000; 	// sw
disk[1190] <= 32'b001111_11101_01100_0000000110101001; 	// lw
disk[1191] <= 32'b010010_11110_01100_1111111111111111; 	// sw
disk[1192] <= 32'b001111_11110_01101_1111111111111111; 	// lw
disk[1193] <= 32'b001100_01101_10110_0000000000011010; 	// slli
disk[1194] <= 32'b010010_11110_10110_1111111111111111; 	// sw
disk[1195] <= 32'b001111_11110_01101_1111111111111111; 	// lw
disk[1196] <= 32'b000001_01101_10111_0000000000000001; 	// addi
disk[1197] <= 32'b010010_11110_10111_1111111111111111; 	// sw
disk[1198] <= 32'b001111_11110_01101_1111111111111111; 	// lw
disk[1199] <= 32'b001110_01101_00001_0000000000000000; 	// mov
disk[1200] <= 32'b001110_01011_00010_0000000000000000; 	// mov
disk[1201] <= 32'b010111_00010_00001_0000000000000000; 	// sdk
disk[1202] <= 32'b000001_01011_01111_0000000000000001; 	// addi
disk[1203] <= 32'b010010_11110_01111_1111111111111110; 	// sw
disk[1204] <= 32'b001111_11110_01011_1111111111111110; 	// lw
disk[1205] <= 32'b001111_11101_01110_0000000110110001; 	// lw
disk[1206] <= 32'b001110_01110_00001_0000000000000000; 	// mov
disk[1207] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1208] <= 32'b010011_00000_10000_0000000000000000; 	// in
disk[1209] <= 32'b010010_11110_10000_0000000000000000; 	// sw
disk[1210] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1211] <= 32'b010000_00000_10010_0000000000000000; 	// li
disk[1212] <= 32'b000000_00101_10010_10001_00000_001101; 	// ne
disk[1213] <= 32'b010101_10001_00000_0000010011110000; 	// jf
disk[1214] <= 32'b001111_11101_00110_0000000110110010; 	// lw
disk[1215] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1216] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1217] <= 32'b010011_00000_10011_0000000000000000; 	// in
disk[1218] <= 32'b010010_11110_10011_1111111111111111; 	// sw
disk[1219] <= 32'b001111_11101_00111_0000000110110011; 	// lw
disk[1220] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[1221] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1222] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1223] <= 32'b001100_01000_10100_0000000000001000; 	// slli
disk[1224] <= 32'b010010_11110_10100_1111111111111111; 	// sw
disk[1225] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1226] <= 32'b010011_00000_10101_0000000000000000; 	// in
disk[1227] <= 32'b000000_01000_10101_10110_00000_000000; 	// add
disk[1228] <= 32'b010010_11110_10110_1111111111111111; 	// sw
disk[1229] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1230] <= 32'b001111_11101_01001_0000000110110100; 	// lw
disk[1231] <= 32'b001110_01001_00001_0000000000000000; 	// mov
disk[1232] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1233] <= 32'b001100_01000_10111_0000000000001000; 	// slli
disk[1234] <= 32'b010010_11110_10111_1111111111111111; 	// sw
disk[1235] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1236] <= 32'b010011_00000_01111_0000000000000000; 	// in
disk[1237] <= 32'b000000_01000_01111_10000_00000_000000; 	// add
disk[1238] <= 32'b010010_11110_10000_1111111111111111; 	// sw
disk[1239] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1240] <= 32'b001111_11101_01010_0000000110110101; 	// lw
disk[1241] <= 32'b001110_01010_00001_0000000000000000; 	// mov
disk[1242] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1243] <= 32'b001100_01000_10001_0000000000001000; 	// slli
disk[1244] <= 32'b010010_11110_10001_1111111111111111; 	// sw
disk[1245] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1246] <= 32'b010011_00000_10010_0000000000000000; 	// in
disk[1247] <= 32'b000000_01000_10010_10011_00000_000000; 	// add
disk[1248] <= 32'b010010_11110_10011_1111111111111111; 	// sw
disk[1249] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1250] <= 32'b001110_01000_00001_0000000000000000; 	// mov
disk[1251] <= 32'b001111_11110_01011_1111111111111110; 	// lw
disk[1252] <= 32'b001110_01011_00010_0000000000000000; 	// mov
disk[1253] <= 32'b010111_00010_00001_0000000000000000; 	// sdk
disk[1254] <= 32'b000001_01011_10100_0000000000000001; 	// addi
disk[1255] <= 32'b010010_11110_10100_1111111111111110; 	// sw
disk[1256] <= 32'b001111_11110_01011_1111111111111110; 	// lw
disk[1257] <= 32'b001111_11101_01100_0000000110110001; 	// lw
disk[1258] <= 32'b001110_01100_00001_0000000000000000; 	// mov
disk[1259] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1260] <= 32'b010011_00000_10101_0000000000000000; 	// in
disk[1261] <= 32'b010010_11110_10101_0000000000000000; 	// sw
disk[1262] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1263] <= 32'b111100_00000000000000010010111010; 	// j
disk[1264] <= 32'b010000_00000_10110_0000000001111111; 	// li
disk[1265] <= 32'b010010_11110_10110_1111111111111111; 	// sw
disk[1266] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[1267] <= 32'b001100_00101_10111_0000000000001000; 	// slli
disk[1268] <= 32'b010010_11110_10111_1111111111111111; 	// sw
disk[1269] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[1270] <= 32'b000001_00101_01111_0000000000100000; 	// addi
disk[1271] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[1272] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[1273] <= 32'b001100_00101_10000_0000000000010001; 	// slli
disk[1274] <= 32'b010010_11110_10000_1111111111111111; 	// sw
disk[1275] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[1276] <= 32'b001101_00101_10001_0000000000000001; 	// srli
disk[1277] <= 32'b010010_11110_10001_1111111111111111; 	// sw
disk[1278] <= 32'b001111_11110_00101_1111111111111111; 	// lw
disk[1279] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1280] <= 32'b001111_11110_00110_1111111111111110; 	// lw
disk[1281] <= 32'b001110_00110_00010_0000000000000000; 	// mov
disk[1282] <= 32'b010111_00010_00001_0000000000000000; 	// sdk
disk[1283] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[1284] <= 32'b000001_11110_11110_0000000000000011; 	// addi
disk[1285] <= 32'b010010_11110_00001_0000000000000000; 	// sw
disk[1286] <= 32'b010001_11101_00101_0000000110010100; 	// la
disk[1287] <= 32'b001111_11101_00110_0000000001011111; 	// lw
disk[1288] <= 32'b000000_00101_00110_01111_00000_000000; 	// add
disk[1289] <= 32'b001111_01111_01111_0000000000000000; 	// lw
disk[1290] <= 32'b010000_00000_10001_0000000000000000; 	// li
disk[1291] <= 32'b000000_01111_10001_10000_00000_001101; 	// ne
disk[1292] <= 32'b010101_10000_00000_0000010100111000; 	// jf
disk[1293] <= 32'b001111_11110_00111_0000000000000000; 	// lw
disk[1294] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[1295] <= 32'b100000_00000_00001_0000000000000000; 	// lcdCurr
disk[1296] <= 32'b001111_11101_01000_0000000110111100; 	// lw
disk[1297] <= 32'b001110_01000_00001_0000000000000000; 	// mov
disk[1298] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1299] <= 32'b001111_11101_01001_0000000011110001; 	// lw
disk[1300] <= 32'b000001_01001_10010_0000000000000001; 	// addi
disk[1301] <= 32'b010010_11101_10010_0000000011110010; 	// sw
disk[1302] <= 32'b010001_11101_01010_0000000000000100; 	// la
disk[1303] <= 32'b000000_01010_00110_10011_00000_000000; 	// add
disk[1304] <= 32'b001111_11101_01011_0000000000000000; 	// lw
disk[1305] <= 32'b010010_10011_01011_0000000000000000; 	// sw
disk[1306] <= 32'b010001_11101_01100_0000000000001110; 	// la
disk[1307] <= 32'b000000_01100_00110_10100_00000_000000; 	// add
disk[1308] <= 32'b010000_00000_10101_0000000000000000; 	// li
disk[1309] <= 32'b010010_10100_10101_0000000000000000; 	// sw
disk[1310] <= 32'b001111_11101_01101_0000000011110010; 	// lw
disk[1311] <= 32'b001110_01101_00001_0000000000000000; 	// mov
disk[1312] <= 32'b001110_00001_11100_0000000000000000; 	// mov
disk[1313] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[1314] <= 32'b011101_00001_00000_0000000000000000; 	// mmuSelect
disk[1315] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1316] <= 32'b001110_11110_00011_0000000000000000; 	// mov
disk[1317] <= 32'b001110_11101_00100_0000000000000000; 	// mov
disk[1318] <= 32'b001110_11100_11110_0000000000000000; 	// mov
disk[1319] <= 32'b001110_11011_11101_0000000000000000; 	// mov
disk[1320] <= 32'b001110_00011_11100_0000000000000000; 	// mov
disk[1321] <= 32'b001110_00100_11011_0000000000000000; 	// mov
disk[1322] <= 32'b111010_00000000000000000000000000; 	// exec
disk[1323] <= 32'b001110_11100_11110_0000000000000000; 	// mov
disk[1324] <= 32'b001110_11011_11101_0000000000000000; 	// mov
disk[1325] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1326] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1327] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1328] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1329] <= 32'b111110_00000000000000000010100000; 	// jal
disk[1330] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[1331] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1332] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1333] <= 32'b001111_11101_00110_0000000110101011; 	// lw
disk[1334] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1335] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1336] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[1337] <= 32'b000001_11110_11110_0000000000001000; 	// addi
disk[1338] <= 32'b010010_11110_00001_1111111111111011; 	// sw
disk[1339] <= 32'b001111_11110_00101_1111111111111011; 	// lw
disk[1340] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1341] <= 32'b100000_00000_00001_0000000000000000; 	// lcdCurr
disk[1342] <= 32'b001111_11101_00110_0000000110111100; 	// lw
disk[1343] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1344] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1345] <= 32'b001111_11101_00111_0000000011110001; 	// lw
disk[1346] <= 32'b000001_00111_01111_0000000000000001; 	// addi
disk[1347] <= 32'b010010_11101_01111_0000000011110010; 	// sw
disk[1348] <= 32'b010001_11101_01000_0000000000000100; 	// la
disk[1349] <= 32'b001111_11101_01001_0000000001011111; 	// lw
disk[1350] <= 32'b000000_01000_01001_10000_00000_000000; 	// add
disk[1351] <= 32'b001111_11101_01010_0000000000000000; 	// lw
disk[1352] <= 32'b010010_10000_01010_0000000000000000; 	// sw
disk[1353] <= 32'b010001_11101_01011_0000000001000000; 	// la
disk[1354] <= 32'b000000_01011_01001_10001_00000_000000; 	// add
disk[1355] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[1356] <= 32'b010010_11110_10001_1111111111111101; 	// sw
disk[1357] <= 32'b001111_11101_01100_0000000011110010; 	// lw
disk[1358] <= 32'b010010_11110_01100_1111111111111110; 	// sw
disk[1359] <= 32'b001111_11110_01101_1111111111111101; 	// lw
disk[1360] <= 32'b001111_11101_01110_0000000011101011; 	// lw
disk[1361] <= 32'b000000_01101_01110_10010_00000_000010; 	// mul
disk[1362] <= 32'b010010_11110_10010_1111111111111111; 	// sw
disk[1363] <= 32'b010001_11101_00101_0000000000011000; 	// la
disk[1364] <= 32'b000000_00101_01001_10011_00000_000000; 	// add
disk[1365] <= 32'b001111_10011_10011_0000000000000000; 	// lw
disk[1366] <= 32'b010010_11110_10011_0000000000000000; 	// sw
disk[1367] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1368] <= 32'b010000_00000_10101_0000000000000000; 	// li
disk[1369] <= 32'b000000_00101_10101_10100_00000_010000; 	// gt
disk[1370] <= 32'b010101_10100_00000_0000010101101110; 	// jf
disk[1371] <= 32'b001111_11110_00110_1111111111111111; 	// lw
disk[1372] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1373] <= 32'b001111_00001_10110_0000000000000000; 	// lw
disk[1374] <= 32'b010010_11110_10110_1111111111111100; 	// sw
disk[1375] <= 32'b001111_11110_00111_1111111111111100; 	// lw
disk[1376] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[1377] <= 32'b001111_11110_01000_1111111111111110; 	// lw
disk[1378] <= 32'b001110_01000_00010_0000000000000000; 	// mov
disk[1379] <= 32'b010010_00010_00001_0000000000000000; 	// sw
disk[1380] <= 32'b000001_01000_10111_0000000000000001; 	// addi
disk[1381] <= 32'b010010_11110_10111_1111111111111110; 	// sw
disk[1382] <= 32'b001111_11110_01000_1111111111111110; 	// lw
disk[1383] <= 32'b000001_00110_01111_0000000000000001; 	// addi
disk[1384] <= 32'b010010_11110_01111_1111111111111111; 	// sw
disk[1385] <= 32'b001111_11110_00110_1111111111111111; 	// lw
disk[1386] <= 32'b000010_00101_10000_0000000000000001; 	// subi
disk[1387] <= 32'b010010_11110_10000_0000000000000000; 	// sw
disk[1388] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1389] <= 32'b111100_00000000000000010101010111; 	// j
disk[1390] <= 32'b010001_11101_00101_0000000000011000; 	// la
disk[1391] <= 32'b001111_11101_00110_0000000001011111; 	// lw
disk[1392] <= 32'b000000_00101_00110_10001_00000_000000; 	// add
disk[1393] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[1394] <= 32'b001111_11101_00111_0000000011110001; 	// lw
disk[1395] <= 32'b000000_00111_10001_10010_00000_000000; 	// add
disk[1396] <= 32'b001110_10010_00001_0000000000000000; 	// mov
disk[1397] <= 32'b001110_00001_11100_0000000000000000; 	// mov
disk[1398] <= 32'b000001_00110_10011_0000000000000001; 	// addi
disk[1399] <= 32'b001110_10011_00001_0000000000000000; 	// mov
disk[1400] <= 32'b010001_11101_01000_0000000000001110; 	// la
disk[1401] <= 32'b000000_01000_00110_10100_00000_000000; 	// add
disk[1402] <= 32'b001111_10100_10100_0000000000000000; 	// lw
disk[1403] <= 32'b001110_10100_00010_0000000000000000; 	// mov
disk[1404] <= 32'b011101_00001_00000_0000000000000000; 	// mmuSelect
disk[1405] <= 32'b010010_11110_11111_1111111111111010; 	// sw
disk[1406] <= 32'b001110_11110_00011_0000000000000000; 	// mov
disk[1407] <= 32'b001110_11101_00100_0000000000000000; 	// mov
disk[1408] <= 32'b001110_11100_11110_0000000000000000; 	// mov
disk[1409] <= 32'b001110_11011_11101_0000000000000000; 	// mov
disk[1410] <= 32'b001110_00011_11100_0000000000000000; 	// mov
disk[1411] <= 32'b001110_00100_11011_0000000000000000; 	// mov
disk[1412] <= 32'b001110_00010_11010_0000000000000000; 	// mov
disk[1413] <= 32'b001111_00000_00000_0000111111100000; 	// lw
disk[1414] <= 32'b001111_00000_00001_0000111111100001; 	// lw
disk[1415] <= 32'b001111_00000_00010_0000111111100010; 	// lw
disk[1416] <= 32'b001111_00000_00011_0000111111100011; 	// lw
disk[1417] <= 32'b001111_00000_00100_0000111111100100; 	// lw
disk[1418] <= 32'b001111_00000_00101_0000111111100101; 	// lw
disk[1419] <= 32'b001111_00000_00110_0000111111100110; 	// lw
disk[1420] <= 32'b001111_00000_00111_0000111111100111; 	// lw
disk[1421] <= 32'b001111_00000_01000_0000111111101000; 	// lw
disk[1422] <= 32'b001111_00000_01001_0000111111101001; 	// lw
disk[1423] <= 32'b001111_00000_01010_0000111111101010; 	// lw
disk[1424] <= 32'b001111_00000_01011_0000111111101011; 	// lw
disk[1425] <= 32'b001111_00000_01100_0000111111101100; 	// lw
disk[1426] <= 32'b001111_00000_01101_0000111111101101; 	// lw
disk[1427] <= 32'b001111_00000_01110_0000111111101110; 	// lw
disk[1428] <= 32'b001111_00000_01111_0000111111101111; 	// lw
disk[1429] <= 32'b001111_00000_10000_0000111111110000; 	// lw
disk[1430] <= 32'b001111_00000_10001_0000111111110001; 	// lw
disk[1431] <= 32'b001111_00000_10010_0000111111110010; 	// lw
disk[1432] <= 32'b001111_00000_10011_0000111111110011; 	// lw
disk[1433] <= 32'b001111_00000_10100_0000111111110100; 	// lw
disk[1434] <= 32'b001111_00000_10101_0000111111110101; 	// lw
disk[1435] <= 32'b001111_00000_10110_0000111111110110; 	// lw
disk[1436] <= 32'b001111_00000_10111_0000111111110111; 	// lw
disk[1437] <= 32'b001111_00000_11000_0000111111111000; 	// lw
disk[1438] <= 32'b001111_00000_11111_0000111111111001; 	// lw
disk[1439] <= 32'b111011_11010_00000_0000000000000000; 	// execAgain
disk[1440] <= 32'b001110_11100_11110_0000000000000000; 	// mov
disk[1441] <= 32'b001110_11011_11101_0000000000000000; 	// mov
disk[1442] <= 32'b001111_11110_11111_1111111111111010; 	// lw
disk[1443] <= 32'b001111_11110_00101_1111111111111011; 	// lw
disk[1444] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1445] <= 32'b010010_11110_11111_1111111111111010; 	// sw
disk[1446] <= 32'b111110_00000000000000000010100000; 	// jal
disk[1447] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[1448] <= 32'b001111_11110_11111_1111111111111010; 	// lw
disk[1449] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1450] <= 32'b001111_11101_00110_0000000110101011; 	// lw
disk[1451] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1452] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1453] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[1454] <= 32'b000001_11110_11110_0000000000000011; 	// addi
disk[1455] <= 32'b010010_11110_00001_0000000000000000; 	// sw
disk[1456] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1457] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1458] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1459] <= 32'b111110_00000000000000000010000110; 	// jal
disk[1460] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[1461] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1462] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1463] <= 32'b010010_11101_00101_0000000001011111; 	// sw
disk[1464] <= 32'b001111_11101_00110_0000000001011111; 	// lw
disk[1465] <= 32'b000001_00110_01111_0000000000000001; 	// addi
disk[1466] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[1467] <= 32'b010010_11101_00110_0000000001011110; 	// sw
disk[1468] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1469] <= 32'b111110_00000000000000000000111110; 	// jal
disk[1470] <= 32'b000010_11110_11110_0000000000000110; 	// subi
disk[1471] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1472] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1473] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[1474] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1475] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1476] <= 32'b111110_00000000000000010100111001; 	// jal
disk[1477] <= 32'b000010_11110_11110_0000000000001000; 	// subi
disk[1478] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1479] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1480] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[1481] <= 32'b000001_11110_11110_0000000000000011; 	// addi
disk[1482] <= 32'b010010_11110_00001_0000000000000000; 	// sw
disk[1483] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1484] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1485] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1486] <= 32'b111110_00000000000000000010000110; 	// jal
disk[1487] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[1488] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1489] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1490] <= 32'b010010_11101_00101_0000000001011111; 	// sw
disk[1491] <= 32'b001111_11101_00110_0000000001011111; 	// lw
disk[1492] <= 32'b000001_00110_01111_0000000000000001; 	// addi
disk[1493] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[1494] <= 32'b010010_11101_00110_0000000001011110; 	// sw
disk[1495] <= 32'b001111_11110_00111_0000000000000000; 	// lw
disk[1496] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[1497] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1498] <= 32'b111110_00000000000000010100000100; 	// jal
disk[1499] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[1500] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1501] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1502] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[1503] <= 32'b000001_11110_11110_0000000000000011; 	// addi
disk[1504] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1505] <= 32'b111110_00000000000000001111110001; 	// jal
disk[1506] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[1507] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1508] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1509] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1510] <= 32'b111110_00000000000000001111000110; 	// jal
disk[1511] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[1512] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1513] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1514] <= 32'b010010_11110_00101_0000000000000000; 	// sw
disk[1515] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1516] <= 32'b001111_11101_00110_0000000000000011; 	// lw
disk[1517] <= 32'b000000_00101_00110_01111_00000_001101; 	// ne
disk[1518] <= 32'b010101_01111_00000_0000011000010010; 	// jf
disk[1519] <= 32'b000010_00101_10000_0000000000000001; 	// subi
disk[1520] <= 32'b010010_11101_10000_0000000001011111; 	// sw
disk[1521] <= 32'b010001_11101_00111_0000000000001110; 	// la
disk[1522] <= 32'b001111_11101_01000_0000000001011111; 	// lw
disk[1523] <= 32'b000000_00111_01000_10001_00000_000000; 	// add
disk[1524] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[1525] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[1526] <= 32'b000000_10001_10011_10010_00000_001100; 	// eq
disk[1527] <= 32'b010101_10010_00000_0000010111111111; 	// jf
disk[1528] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1529] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1530] <= 32'b111110_00000000000000010100000100; 	// jal
disk[1531] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[1532] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1533] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1534] <= 32'b111100_00000000000000011000001011; 	// j
disk[1535] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1536] <= 32'b111110_00000000000000000000111110; 	// jal
disk[1537] <= 32'b000010_11110_11110_0000000000000110; 	// subi
disk[1538] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1539] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1540] <= 32'b001111_11110_00110_0000000000000000; 	// lw
disk[1541] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1542] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1543] <= 32'b111110_00000000000000010100111001; 	// jal
disk[1544] <= 32'b000010_11110_11110_0000000000001000; 	// subi
disk[1545] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1546] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1547] <= 32'b010010_11110_11111_1111111111111111; 	// sw
disk[1548] <= 32'b111110_00000000000000001111000110; 	// jal
disk[1549] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[1550] <= 32'b001111_11110_11111_1111111111111111; 	// lw
disk[1551] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1552] <= 32'b010010_11110_00101_0000000000000000; 	// sw
disk[1553] <= 32'b111100_00000000000000010111101011; 	// j
disk[1554] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[1555] <= 32'b010010_11101_10100_0000000001101010; 	// sw
disk[1556] <= 32'b000000_11111_00000_00000_00000_010010; 	// jr
disk[1557] <= 32'b001110_11110_11100_0000000000000000; 	// mov
disk[1558] <= 32'b001110_11101_11011_0000000000000000; 	// mov
disk[1559] <= 32'b010000_00000_00000_0000000000000000; 	// li
disk[1560] <= 32'b010000_00000_11110_0000000000000000; 	// li
disk[1561] <= 32'b010000_00000_11101_0000000000000000; 	// li
disk[1562] <= 32'b000001_11110_11110_0000000111000111; 	// addi
disk[1563] <= 32'b010010_00000_00000_0000111111100000; 	// sw
disk[1564] <= 32'b010010_00000_00001_0000111111100001; 	// sw
disk[1565] <= 32'b010010_00000_00010_0000111111100010; 	// sw
disk[1566] <= 32'b010010_00000_00011_0000111111100011; 	// sw
disk[1567] <= 32'b010010_00000_00100_0000111111100100; 	// sw
disk[1568] <= 32'b010010_00000_00101_0000111111100101; 	// sw
disk[1569] <= 32'b010010_00000_00110_0000111111100110; 	// sw
disk[1570] <= 32'b010010_00000_00111_0000111111100111; 	// sw
disk[1571] <= 32'b010010_00000_01000_0000111111101000; 	// sw
disk[1572] <= 32'b010010_00000_01001_0000111111101001; 	// sw
disk[1573] <= 32'b010010_00000_01010_0000111111101010; 	// sw
disk[1574] <= 32'b010010_00000_01011_0000111111101011; 	// sw
disk[1575] <= 32'b010010_00000_01100_0000111111101100; 	// sw
disk[1576] <= 32'b010010_00000_01101_0000111111101101; 	// sw
disk[1577] <= 32'b010010_00000_01110_0000111111101110; 	// sw
disk[1578] <= 32'b010010_00000_01111_0000111111101111; 	// sw
disk[1579] <= 32'b010010_00000_10000_0000111111110000; 	// sw
disk[1580] <= 32'b010010_00000_10001_0000111111110001; 	// sw
disk[1581] <= 32'b010010_00000_10010_0000111111110010; 	// sw
disk[1582] <= 32'b010010_00000_10011_0000111111110011; 	// sw
disk[1583] <= 32'b010010_00000_10100_0000111111110100; 	// sw
disk[1584] <= 32'b010010_00000_10101_0000111111110101; 	// sw
disk[1585] <= 32'b010010_00000_10110_0000111111110110; 	// sw
disk[1586] <= 32'b010010_00000_10111_0000111111110111; 	// sw
disk[1587] <= 32'b010010_00000_11000_0000111111111000; 	// sw
disk[1588] <= 32'b010010_00000_11111_0000111111111001; 	// sw
disk[1589] <= 32'b001111_11110_00101_1111111111111011; 	// lw
disk[1590] <= 32'b010000_00000_10000_0000000000000000; 	// li
disk[1591] <= 32'b000000_00101_10000_01111_00000_001100; 	// eq
disk[1592] <= 32'b010101_01111_00000_0000011001000010; 	// jf
disk[1593] <= 32'b111110_00000000000000001011001110; 	// jal
disk[1594] <= 32'b000010_11110_11110_0000000000000010; 	// subi
disk[1595] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1596] <= 32'b001111_11101_00110_0000000110101011; 	// lw
disk[1597] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1598] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1599] <= 32'b010000_00000_10001_0000000000000001; 	// li
disk[1600] <= 32'b010010_11110_10001_1111111111111011; 	// sw
disk[1601] <= 32'b100010_00000_00000_0000000000000000; 	// cic
disk[1602] <= 32'b100001_00000_10010_0000000000000000; 	// gic
disk[1603] <= 32'b010010_11110_10010_1111111111111010; 	// sw
disk[1604] <= 32'b001111_11110_00101_1111111111111010; 	// lw
disk[1605] <= 32'b001111_11101_00110_0000000101110101; 	// lw
disk[1606] <= 32'b000000_00101_00110_10011_00000_001100; 	// eq
disk[1607] <= 32'b010101_10011_00000_0000011010111111; 	// jf
disk[1608] <= 32'b001110_11100_10100_0000000000000000; 	// mov
disk[1609] <= 32'b010010_11101_10100_0000000011110011; 	// sw
disk[1610] <= 32'b001111_11101_00111_0000000011110011; 	// lw
disk[1611] <= 32'b001111_11101_01000_0000000011110010; 	// lw
disk[1612] <= 32'b000000_00111_01000_10101_00000_000001; 	// sub
disk[1613] <= 32'b000001_10101_10110_0000000000000001; 	// addi
disk[1614] <= 32'b010010_11110_10110_0000000000000000; 	// sw
disk[1615] <= 32'b010001_11101_01001_0000000000011000; 	// la
disk[1616] <= 32'b001111_11101_01010_0000000001011111; 	// lw
disk[1617] <= 32'b000000_01001_01010_10111_00000_000000; 	// add
disk[1618] <= 32'b001111_11110_01011_0000000000000000; 	// lw
disk[1619] <= 32'b010010_10111_01011_0000000000000000; 	// sw
disk[1620] <= 32'b010001_11101_01100_0000000000000100; 	// la
disk[1621] <= 32'b000000_01100_01010_01111_00000_000000; 	// add
disk[1622] <= 32'b001111_11101_01101_0000000000000010; 	// lw
disk[1623] <= 32'b010010_01111_01101_0000000000000000; 	// sw
disk[1624] <= 32'b100011_00000_10000_0000000000000000; 	// gip
disk[1625] <= 32'b010001_11101_01110_0000000000001110; 	// la
disk[1626] <= 32'b000000_01110_01010_10001_00000_000000; 	// add
disk[1627] <= 32'b010010_10001_10000_0000000000000000; 	// sw
disk[1628] <= 32'b010001_11101_00101_0000000001000000; 	// la
disk[1629] <= 32'b000000_00101_01010_10010_00000_000000; 	// add
disk[1630] <= 32'b001111_10010_10010_0000000000000000; 	// lw
disk[1631] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[1632] <= 32'b000000_10010_10100_10011_00000_001100; 	// eq
disk[1633] <= 32'b010101_10011_00000_0000011001101100; 	// jf
disk[1634] <= 32'b111110_00000000000000001100101110; 	// jal
disk[1635] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[1636] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1637] <= 32'b010010_11110_00101_1111111111111100; 	// sw
disk[1638] <= 32'b010001_11101_00110_0000000001000000; 	// la
disk[1639] <= 32'b001111_11101_00111_0000000001011111; 	// lw
disk[1640] <= 32'b000000_00110_00111_10101_00000_000000; 	// add
disk[1641] <= 32'b001111_11110_01000_1111111111111100; 	// lw
disk[1642] <= 32'b010010_10101_01000_0000000000000000; 	// sw
disk[1643] <= 32'b111100_00000000000000011001110001; 	// j
disk[1644] <= 32'b010001_11101_00101_0000000001000000; 	// la
disk[1645] <= 32'b001111_11101_00110_0000000001011111; 	// lw
disk[1646] <= 32'b000000_00101_00110_10110_00000_000000; 	// add
disk[1647] <= 32'b001111_10110_10110_0000000000000000; 	// lw
disk[1648] <= 32'b010010_11110_10110_1111111111111100; 	// sw
disk[1649] <= 32'b001111_11101_00101_0000000011110010; 	// lw
disk[1650] <= 32'b010010_11110_00101_1111111111111110; 	// sw
disk[1651] <= 32'b001111_11110_00110_1111111111111100; 	// lw
disk[1652] <= 32'b001111_11101_00111_0000000011101011; 	// lw
disk[1653] <= 32'b000000_00110_00111_10111_00000_000010; 	// mul
disk[1654] <= 32'b010010_11110_10111_1111111111111111; 	// sw
disk[1655] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1656] <= 32'b010000_00000_10000_0000000000000000; 	// li
disk[1657] <= 32'b000000_00101_10000_01111_00000_010000; 	// gt
disk[1658] <= 32'b010101_01111_00000_0000011010001110; 	// jf
disk[1659] <= 32'b001111_11110_00110_1111111111111110; 	// lw
disk[1660] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1661] <= 32'b001111_00001_10001_0000000000000000; 	// lw
disk[1662] <= 32'b010010_11110_10001_1111111111111101; 	// sw
disk[1663] <= 32'b001111_11110_00111_1111111111111101; 	// lw
disk[1664] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[1665] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1666] <= 32'b001110_01000_00010_0000000000000000; 	// mov
disk[1667] <= 32'b010010_00010_00001_0000000000000000; 	// sw
disk[1668] <= 32'b000001_00110_10010_0000000000000001; 	// addi
disk[1669] <= 32'b010010_11110_10010_1111111111111110; 	// sw
disk[1670] <= 32'b001111_11110_00110_1111111111111110; 	// lw
disk[1671] <= 32'b000001_01000_10011_0000000000000001; 	// addi
disk[1672] <= 32'b010010_11110_10011_1111111111111111; 	// sw
disk[1673] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1674] <= 32'b000010_00101_10100_0000000000000001; 	// subi
disk[1675] <= 32'b010010_11110_10100_0000000000000000; 	// sw
disk[1676] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1677] <= 32'b111100_00000000000000011001110111; 	// j
disk[1678] <= 32'b001111_11101_00101_0000000001011111; 	// lw
disk[1679] <= 32'b001111_11101_00110_0000000001011110; 	// lw
disk[1680] <= 32'b000000_00101_00110_10101_00000_001100; 	// eq
disk[1681] <= 32'b010101_10101_00000_0000011010011000; 	// jf
disk[1682] <= 32'b000001_00101_10110_0000000000000001; 	// addi
disk[1683] <= 32'b001110_10110_00001_0000000000000000; 	// mov
disk[1684] <= 32'b111110_00000000000000010100111001; 	// jal
disk[1685] <= 32'b000010_11110_11110_0000000000001000; 	// subi
disk[1686] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1687] <= 32'b111100_00000000000000011010110110; 	// j
disk[1688] <= 32'b001111_11110_00101_1111111111111100; 	// lw
disk[1689] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1690] <= 32'b111110_00000000000000000001100011; 	// jal
disk[1691] <= 32'b000010_11110_11110_0000000000000110; 	// subi
disk[1692] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1693] <= 32'b010001_11101_00110_0000000000000100; 	// la
disk[1694] <= 32'b001111_11101_00111_0000000001011111; 	// lw
disk[1695] <= 32'b000000_00110_00111_10111_00000_000000; 	// add
disk[1696] <= 32'b001111_11101_01000_0000000000000010; 	// lw
disk[1697] <= 32'b010010_10111_01000_0000000000000000; 	// sw
disk[1698] <= 32'b000001_00111_01111_0000000000000001; 	// addi
disk[1699] <= 32'b001110_01111_00001_0000000000000000; 	// mov
disk[1700] <= 32'b111110_00000000000000001110000001; 	// jal
disk[1701] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[1702] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1703] <= 32'b001111_11101_00110_0000000001101010; 	// lw
disk[1704] <= 32'b010000_00000_10001_0000000000000001; 	// li
disk[1705] <= 32'b000000_00110_10001_10000_00000_001100; 	// eq
disk[1706] <= 32'b010101_10000_00000_0000011010110110; 	// jf
disk[1707] <= 32'b001111_11101_00111_0000000110101011; 	// lw
disk[1708] <= 32'b010010_11101_00111_0000000110111101; 	// sw
disk[1709] <= 32'b001111_11101_01000_0000000110111101; 	// lw
disk[1710] <= 32'b001110_01000_00001_0000000000000000; 	// mov
disk[1711] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1712] <= 32'b010000_00000_11101_0000000000000000; 	// li
disk[1713] <= 32'b010000_00000_11110_0000000111000111; 	// li
disk[1714] <= 32'b100010_00000_00000_0000000000000000; 	// cic
disk[1715] <= 32'b111110_00000000000000010111011111; 	// jal
disk[1716] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[1717] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1718] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[1719] <= 32'b010010_11101_00101_0000000110111101; 	// sw
disk[1720] <= 32'b001111_11101_00110_0000000110111101; 	// lw
disk[1721] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1722] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1723] <= 32'b010000_00000_11101_0000000000000000; 	// li
disk[1724] <= 32'b010000_00000_11110_0000000111000111; 	// li
disk[1725] <= 32'b100010_00000_00000_0000000000000000; 	// cic
disk[1726] <= 32'b111100_00000000000000011100110101; 	// j
disk[1727] <= 32'b001111_11110_00101_1111111111111010; 	// lw
disk[1728] <= 32'b001111_11101_00110_0000000101110100; 	// lw
disk[1729] <= 32'b000000_00101_00110_10010_00000_001100; 	// eq
disk[1730] <= 32'b010101_10010_00000_0000011100110101; 	// jf
disk[1731] <= 32'b001110_11100_10011_0000000000000000; 	// mov
disk[1732] <= 32'b010010_11101_10011_0000000011110011; 	// sw
disk[1733] <= 32'b001111_11101_00111_0000000011110011; 	// lw
disk[1734] <= 32'b001111_11101_01000_0000000011110010; 	// lw
disk[1735] <= 32'b000000_00111_01000_10100_00000_000001; 	// sub
disk[1736] <= 32'b000001_10100_10101_0000000000000001; 	// addi
disk[1737] <= 32'b010010_11110_10101_0000000000000000; 	// sw
disk[1738] <= 32'b010001_11101_01001_0000000000011000; 	// la
disk[1739] <= 32'b001111_11101_01010_0000000001011111; 	// lw
disk[1740] <= 32'b000000_01001_01010_10110_00000_000000; 	// add
disk[1741] <= 32'b001111_11110_01011_0000000000000000; 	// lw
disk[1742] <= 32'b010010_10110_01011_0000000000000000; 	// sw
disk[1743] <= 32'b010001_11101_01100_0000000000000100; 	// la
disk[1744] <= 32'b000000_01100_01010_10111_00000_000000; 	// add
disk[1745] <= 32'b001111_11101_01101_0000000000000010; 	// lw
disk[1746] <= 32'b010010_10111_01101_0000000000000000; 	// sw
disk[1747] <= 32'b100011_00000_01111_0000000000000000; 	// gip
disk[1748] <= 32'b010001_11101_01110_0000000000001110; 	// la
disk[1749] <= 32'b000000_01110_01010_10000_00000_000000; 	// add
disk[1750] <= 32'b010010_10000_01111_0000000000000000; 	// sw
disk[1751] <= 32'b010001_11101_00101_0000000001000000; 	// la
disk[1752] <= 32'b000000_00101_01010_10001_00000_000000; 	// add
disk[1753] <= 32'b001111_10001_10001_0000000000000000; 	// lw
disk[1754] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[1755] <= 32'b000000_10001_10011_10010_00000_001100; 	// eq
disk[1756] <= 32'b010101_10010_00000_0000011011100111; 	// jf
disk[1757] <= 32'b111110_00000000000000001100101110; 	// jal
disk[1758] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[1759] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1760] <= 32'b010010_11110_00101_1111111111111100; 	// sw
disk[1761] <= 32'b010001_11101_00110_0000000001000000; 	// la
disk[1762] <= 32'b001111_11101_00111_0000000001011111; 	// lw
disk[1763] <= 32'b000000_00110_00111_10100_00000_000000; 	// add
disk[1764] <= 32'b001111_11110_01000_1111111111111100; 	// lw
disk[1765] <= 32'b010010_10100_01000_0000000000000000; 	// sw
disk[1766] <= 32'b111100_00000000000000011011101100; 	// j
disk[1767] <= 32'b010001_11101_00101_0000000001000000; 	// la
disk[1768] <= 32'b001111_11101_00110_0000000001011111; 	// lw
disk[1769] <= 32'b000000_00101_00110_10101_00000_000000; 	// add
disk[1770] <= 32'b001111_10101_10101_0000000000000000; 	// lw
disk[1771] <= 32'b010010_11110_10101_1111111111111100; 	// sw
disk[1772] <= 32'b001111_11101_00101_0000000011110010; 	// lw
disk[1773] <= 32'b010010_11110_00101_1111111111111110; 	// sw
disk[1774] <= 32'b001111_11110_00110_1111111111111100; 	// lw
disk[1775] <= 32'b001111_11101_00111_0000000011101011; 	// lw
disk[1776] <= 32'b000000_00110_00111_10110_00000_000010; 	// mul
disk[1777] <= 32'b010010_11110_10110_1111111111111111; 	// sw
disk[1778] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1779] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[1780] <= 32'b000000_00101_01111_10111_00000_010000; 	// gt
disk[1781] <= 32'b010101_10111_00000_0000011100001001; 	// jf
disk[1782] <= 32'b001111_11110_00110_1111111111111110; 	// lw
disk[1783] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1784] <= 32'b001111_00001_10000_0000000000000000; 	// lw
disk[1785] <= 32'b010010_11110_10000_1111111111111101; 	// sw
disk[1786] <= 32'b001111_11110_00111_1111111111111101; 	// lw
disk[1787] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[1788] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1789] <= 32'b001110_01000_00010_0000000000000000; 	// mov
disk[1790] <= 32'b010010_00010_00001_0000000000000000; 	// sw
disk[1791] <= 32'b000001_00110_10001_0000000000000001; 	// addi
disk[1792] <= 32'b010010_11110_10001_1111111111111110; 	// sw
disk[1793] <= 32'b001111_11110_00110_1111111111111110; 	// lw
disk[1794] <= 32'b000001_01000_10010_0000000000000001; 	// addi
disk[1795] <= 32'b010010_11110_10010_1111111111111111; 	// sw
disk[1796] <= 32'b001111_11110_01000_1111111111111111; 	// lw
disk[1797] <= 32'b000010_00101_10011_0000000000000001; 	// subi
disk[1798] <= 32'b010010_11110_10011_0000000000000000; 	// sw
disk[1799] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[1800] <= 32'b111100_00000000000000011011110010; 	// j
disk[1801] <= 32'b001111_11101_00101_0000000001011111; 	// lw
disk[1802] <= 32'b001111_11101_00110_0000000001011110; 	// lw
disk[1803] <= 32'b000000_00101_00110_10100_00000_001100; 	// eq
disk[1804] <= 32'b010101_10100_00000_0000011100010011; 	// jf
disk[1805] <= 32'b000001_00101_10101_0000000000000001; 	// addi
disk[1806] <= 32'b001110_10101_00001_0000000000000000; 	// mov
disk[1807] <= 32'b111110_00000000000000010100111001; 	// jal
disk[1808] <= 32'b000010_11110_11110_0000000000001000; 	// subi
disk[1809] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1810] <= 32'b111100_00000000000000011100101101; 	// j
disk[1811] <= 32'b001111_11110_00101_1111111111111100; 	// lw
disk[1812] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1813] <= 32'b111110_00000000000000000001100011; 	// jal
disk[1814] <= 32'b000010_11110_11110_0000000000000110; 	// subi
disk[1815] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1816] <= 32'b010001_11101_00110_0000000000000100; 	// la
disk[1817] <= 32'b001111_11101_00111_0000000001011111; 	// lw
disk[1818] <= 32'b000000_00110_00111_10110_00000_000000; 	// add
disk[1819] <= 32'b001111_11101_01000_0000000000000001; 	// lw
disk[1820] <= 32'b010010_10110_01000_0000000000000000; 	// sw
disk[1821] <= 32'b001111_11101_01001_0000000110101011; 	// lw
disk[1822] <= 32'b010010_11101_01001_0000000110111101; 	// sw
disk[1823] <= 32'b001111_11101_01010_0000000110111101; 	// lw
disk[1824] <= 32'b001110_01010_00001_0000000000000000; 	// mov
disk[1825] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1826] <= 32'b010000_00000_11101_0000000000000000; 	// li
disk[1827] <= 32'b010000_00000_11110_0000000111000111; 	// li
disk[1828] <= 32'b100010_00000_00000_0000000000000000; 	// cic
disk[1829] <= 32'b000001_00111_10111_0000000000000001; 	// addi
disk[1830] <= 32'b001110_10111_00001_0000000000000000; 	// mov
disk[1831] <= 32'b111110_00000000000000001111011001; 	// jal
disk[1832] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[1833] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1834] <= 32'b111110_00000000000000010111011111; 	// jal
disk[1835] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[1836] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1837] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[1838] <= 32'b010010_11101_00101_0000000110111101; 	// sw
disk[1839] <= 32'b001111_11101_00110_0000000110111101; 	// lw
disk[1840] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[1841] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[1842] <= 32'b010000_00000_11101_0000000000000000; 	// li
disk[1843] <= 32'b010000_00000_11110_0000000111000111; 	// li
disk[1844] <= 32'b100010_00000_00000_0000000000000000; 	// cic
disk[1845] <= 32'b010000_00000_01111_0000000000000001; 	// li
disk[1846] <= 32'b010101_01111_00000_0000100000111010; 	// jf
disk[1847] <= 32'b010011_00000_10000_0000000000000000; 	// in
disk[1848] <= 32'b010010_11110_10000_1111111111111001; 	// sw
disk[1849] <= 32'b001111_11101_00101_0000000110111101; 	// lw
disk[1850] <= 32'b001111_11101_00110_0000000110101011; 	// lw
disk[1851] <= 32'b000000_00101_00110_10001_00000_001100; 	// eq
disk[1852] <= 32'b010101_10001_00000_0000011101100010; 	// jf
disk[1853] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[1854] <= 32'b010000_00000_10011_0000000000000001; 	// li
disk[1855] <= 32'b000000_00111_10011_10010_00000_001100; 	// eq
disk[1856] <= 32'b010101_10010_00000_0000011101000101; 	// jf
disk[1857] <= 32'b001111_11101_01000_0000000110101100; 	// lw
disk[1858] <= 32'b010010_11110_01000_1111111111111001; 	// sw
disk[1859] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[1860] <= 32'b111100_00000000000000011101100001; 	// j
disk[1861] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1862] <= 32'b010000_00000_10101_0000000000000010; 	// li
disk[1863] <= 32'b000000_00101_10101_10100_00000_001100; 	// eq
disk[1864] <= 32'b010101_10100_00000_0000011101001101; 	// jf
disk[1865] <= 32'b001111_11101_00110_0000000110110110; 	// lw
disk[1866] <= 32'b010010_11110_00110_1111111111111001; 	// sw
disk[1867] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1868] <= 32'b111100_00000000000000011101100001; 	// j
disk[1869] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1870] <= 32'b010000_00000_10111_0000000000000011; 	// li
disk[1871] <= 32'b000000_00101_10111_10110_00000_001100; 	// eq
disk[1872] <= 32'b010101_10110_00000_0000011101010101; 	// jf
disk[1873] <= 32'b001111_11101_00110_0000000110111001; 	// lw
disk[1874] <= 32'b010010_11110_00110_1111111111111001; 	// sw
disk[1875] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1876] <= 32'b111100_00000000000000011101100001; 	// j
disk[1877] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1878] <= 32'b010000_00000_10000_0000000000000100; 	// li
disk[1879] <= 32'b000000_00101_10000_01111_00000_001100; 	// eq
disk[1880] <= 32'b010101_01111_00000_0000011101011111; 	// jf
disk[1881] <= 32'b111110_00000000000000000000110011; 	// jal
disk[1882] <= 32'b000010_11110_11110_0000000000000010; 	// subi
disk[1883] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1884] <= 32'b001111_11101_00110_0000000110101011; 	// lw
disk[1885] <= 32'b010010_11110_00110_1111111111111001; 	// sw
disk[1886] <= 32'b111100_00000000000000011101100001; 	// j
disk[1887] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[1888] <= 32'b010010_11110_00101_1111111111111001; 	// sw
disk[1889] <= 32'b111100_00000000000000100000110100; 	// j
disk[1890] <= 32'b001111_11101_00101_0000000110111101; 	// lw
disk[1891] <= 32'b001111_11101_00110_0000000110101100; 	// lw
disk[1892] <= 32'b000000_00101_00110_10001_00000_001100; 	// eq
disk[1893] <= 32'b010101_10001_00000_0000011110001101; 	// jf
disk[1894] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[1895] <= 32'b010000_00000_10011_0000000000000001; 	// li
disk[1896] <= 32'b000000_00111_10011_10010_00000_001100; 	// eq
disk[1897] <= 32'b010101_10010_00000_0000011101110000; 	// jf
disk[1898] <= 32'b111110_00000000000000010010001101; 	// jal
disk[1899] <= 32'b000010_11110_11110_0000000000000110; 	// subi
disk[1900] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1901] <= 32'b001111_11101_00110_0000000110101011; 	// lw
disk[1902] <= 32'b010010_11110_00110_1111111111111001; 	// sw
disk[1903] <= 32'b111100_00000000000000011110001100; 	// j
disk[1904] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1905] <= 32'b010000_00000_10101_0000000000000010; 	// li
disk[1906] <= 32'b000000_00101_10101_10100_00000_001100; 	// eq
disk[1907] <= 32'b010101_10100_00000_0000011101111101; 	// jf
disk[1908] <= 32'b001111_11101_00110_0000000110101110; 	// lw
disk[1909] <= 32'b010010_11110_00110_1111111111111001; 	// sw
disk[1910] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1911] <= 32'b111110_00000000000000000100111101; 	// jal
disk[1912] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[1913] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1914] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1915] <= 32'b011111_00000_00001_0000000000000000; 	// lcdPgms
disk[1916] <= 32'b111100_00000000000000011110001100; 	// j
disk[1917] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1918] <= 32'b010000_00000_10111_0000000000000011; 	// li
disk[1919] <= 32'b000000_00101_10111_10110_00000_001100; 	// eq
disk[1920] <= 32'b010101_10110_00000_0000011110001010; 	// jf
disk[1921] <= 32'b001111_11101_00110_0000000110101101; 	// lw
disk[1922] <= 32'b010010_11110_00110_1111111111111001; 	// sw
disk[1923] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1924] <= 32'b111110_00000000000000000100111101; 	// jal
disk[1925] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[1926] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1927] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1928] <= 32'b011111_00000_00001_0000000000000000; 	// lcdPgms
disk[1929] <= 32'b111100_00000000000000011110001100; 	// j
disk[1930] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[1931] <= 32'b010010_11110_00101_1111111111111001; 	// sw
disk[1932] <= 32'b111100_00000000000000100000110100; 	// j
disk[1933] <= 32'b001111_11101_00101_0000000110111101; 	// lw
disk[1934] <= 32'b001111_11101_00110_0000000110101101; 	// lw
disk[1935] <= 32'b000000_00101_00110_01111_00000_001100; 	// eq
disk[1936] <= 32'b010101_01111_00000_0000011110011100; 	// jf
disk[1937] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[1938] <= 32'b010000_00000_10001_0000000000000000; 	// li
disk[1939] <= 32'b000000_00111_10001_10000_00000_010000; 	// gt
disk[1940] <= 32'b010101_10000_00000_0000011110011001; 	// jf
disk[1941] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[1942] <= 32'b111110_00000000000000000011101001; 	// jal
disk[1943] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[1944] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1945] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[1946] <= 32'b010010_11110_00101_1111111111111001; 	// sw
disk[1947] <= 32'b111100_00000000000000100000110100; 	// j
disk[1948] <= 32'b001111_11101_00101_0000000110111101; 	// lw
disk[1949] <= 32'b001111_11101_00110_0000000110101110; 	// lw
disk[1950] <= 32'b000000_00101_00110_10010_00000_001100; 	// eq
disk[1951] <= 32'b010101_10010_00000_0000011110101011; 	// jf
disk[1952] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[1953] <= 32'b010000_00000_10100_0000000000000000; 	// li
disk[1954] <= 32'b000000_00111_10100_10011_00000_010000; 	// gt
disk[1955] <= 32'b010101_10011_00000_0000011110101000; 	// jf
disk[1956] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[1957] <= 32'b111110_00000000000000000100101101; 	// jal
disk[1958] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[1959] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1960] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[1961] <= 32'b010010_11110_00101_1111111111111001; 	// sw
disk[1962] <= 32'b111100_00000000000000100000110100; 	// j
disk[1963] <= 32'b001111_11101_00101_0000000110111101; 	// lw
disk[1964] <= 32'b001111_11101_00110_0000000110110110; 	// lw
disk[1965] <= 32'b000000_00101_00110_10101_00000_001100; 	// eq
disk[1966] <= 32'b010101_10101_00000_0000011111001100; 	// jf
disk[1967] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[1968] <= 32'b010000_00000_10111_0000000000000001; 	// li
disk[1969] <= 32'b000000_00111_10111_10110_00000_001100; 	// eq
disk[1970] <= 32'b010101_10110_00000_0000011110111100; 	// jf
disk[1971] <= 32'b001111_11101_01000_0000000110110111; 	// lw
disk[1972] <= 32'b010010_11110_01000_1111111111111001; 	// sw
disk[1973] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[1974] <= 32'b111110_00000000000000000100111101; 	// jal
disk[1975] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[1976] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1977] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1978] <= 32'b011111_00000_00001_0000000000000000; 	// lcdPgms
disk[1979] <= 32'b111100_00000000000000011111001011; 	// j
disk[1980] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1981] <= 32'b010000_00000_10000_0000000000000010; 	// li
disk[1982] <= 32'b000000_00101_10000_01111_00000_001100; 	// eq
disk[1983] <= 32'b010101_01111_00000_0000011111001001; 	// jf
disk[1984] <= 32'b001111_11101_00110_0000000110111000; 	// lw
disk[1985] <= 32'b010010_11110_00110_1111111111111001; 	// sw
disk[1986] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[1987] <= 32'b111110_00000000000000000101100010; 	// jal
disk[1988] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[1989] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[1990] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[1991] <= 32'b011111_00000_00001_0000000000000000; 	// lcdPgms
disk[1992] <= 32'b111100_00000000000000011111001011; 	// j
disk[1993] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[1994] <= 32'b010010_11110_00101_1111111111111001; 	// sw
disk[1995] <= 32'b111100_00000000000000100000110100; 	// j
disk[1996] <= 32'b001111_11101_00101_0000000110111101; 	// lw
disk[1997] <= 32'b001111_11101_00110_0000000110110111; 	// lw
disk[1998] <= 32'b000000_00101_00110_10001_00000_001100; 	// eq
disk[1999] <= 32'b010101_10001_00000_0000011111011011; 	// jf
disk[2000] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[2001] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[2002] <= 32'b000000_00111_10011_10010_00000_010000; 	// gt
disk[2003] <= 32'b010101_10010_00000_0000011111011000; 	// jf
disk[2004] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[2005] <= 32'b111110_00000000000000010000101111; 	// jal
disk[2006] <= 32'b000010_11110_11110_0000000000001010; 	// subi
disk[2007] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[2008] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[2009] <= 32'b010010_11110_00101_1111111111111001; 	// sw
disk[2010] <= 32'b111100_00000000000000100000110100; 	// j
disk[2011] <= 32'b001111_11101_00101_0000000110111101; 	// lw
disk[2012] <= 32'b001111_11101_00110_0000000110111000; 	// lw
disk[2013] <= 32'b000000_00101_00110_10100_00000_001100; 	// eq
disk[2014] <= 32'b010101_10100_00000_0000011111101010; 	// jf
disk[2015] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[2016] <= 32'b010000_00000_10110_0000000000000000; 	// li
disk[2017] <= 32'b000000_00111_10110_10101_00000_010000; 	// gt
disk[2018] <= 32'b010101_10101_00000_0000011111100111; 	// jf
disk[2019] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[2020] <= 32'b111110_00000000000000000010100000; 	// jal
disk[2021] <= 32'b000010_11110_11110_0000000000000101; 	// subi
disk[2022] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[2023] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[2024] <= 32'b010010_11110_00101_1111111111111001; 	// sw
disk[2025] <= 32'b111100_00000000000000100000110100; 	// j
disk[2026] <= 32'b001111_11101_00101_0000000110111101; 	// lw
disk[2027] <= 32'b001111_11101_00110_0000000110111001; 	// lw
disk[2028] <= 32'b000000_00101_00110_10111_00000_001100; 	// eq
disk[2029] <= 32'b010101_10111_00000_0000100000010101; 	// jf
disk[2030] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[2031] <= 32'b010000_00000_10000_0000000000000001; 	// li
disk[2032] <= 32'b000000_00111_10000_01111_00000_001100; 	// eq
disk[2033] <= 32'b010101_01111_00000_0000011111111010; 	// jf
disk[2034] <= 32'b010000_00000_10001_0000000000000001; 	// li
disk[2035] <= 32'b010010_11101_10001_0000000001101010; 	// sw
disk[2036] <= 32'b111110_00000000000000010111011111; 	// jal
disk[2037] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[2038] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[2039] <= 32'b001111_11101_00110_0000000110101011; 	// lw
disk[2040] <= 32'b010010_11110_00110_1111111111111001; 	// sw
disk[2041] <= 32'b111100_00000000000000100000010100; 	// j
disk[2042] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[2043] <= 32'b010000_00000_10011_0000000000000010; 	// li
disk[2044] <= 32'b000000_00101_10011_10010_00000_001100; 	// eq
disk[2045] <= 32'b010101_10010_00000_0000100000000110; 	// jf
disk[2046] <= 32'b111110_00000000000000000101100010; 	// jal
disk[2047] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[2048] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[2049] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[2050] <= 32'b011111_00000_00001_0000000000000000; 	// lcdPgms
disk[2051] <= 32'b001111_11101_00110_0000000110111010; 	// lw
disk[2052] <= 32'b010010_11110_00110_1111111111111001; 	// sw
disk[2053] <= 32'b111100_00000000000000100000010100; 	// j
disk[2054] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[2055] <= 32'b010000_00000_10101_0000000000000011; 	// li
disk[2056] <= 32'b000000_00101_10101_10100_00000_001100; 	// eq
disk[2057] <= 32'b010101_10100_00000_0000100000010010; 	// jf
disk[2058] <= 32'b111110_00000000000000000110000111; 	// jal
disk[2059] <= 32'b000010_11110_11110_0000000000000100; 	// subi
disk[2060] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[2061] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[2062] <= 32'b011111_00000_00001_0000000000000000; 	// lcdPgms
disk[2063] <= 32'b001111_11101_00110_0000000110111011; 	// lw
disk[2064] <= 32'b010010_11110_00110_1111111111111001; 	// sw
disk[2065] <= 32'b111100_00000000000000100000010100; 	// j
disk[2066] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[2067] <= 32'b010010_11110_00101_1111111111111001; 	// sw
disk[2068] <= 32'b111100_00000000000000100000110100; 	// j
disk[2069] <= 32'b001111_11101_00101_0000000110111101; 	// lw
disk[2070] <= 32'b001111_11101_00110_0000000110111010; 	// lw
disk[2071] <= 32'b000000_00101_00110_10110_00000_001100; 	// eq
disk[2072] <= 32'b010101_10110_00000_0000100000100110; 	// jf
disk[2073] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[2074] <= 32'b010000_00000_01111_0000000000000000; 	// li
disk[2075] <= 32'b000000_00111_01111_10111_00000_010000; 	// gt
disk[2076] <= 32'b010101_10111_00000_0000100000100011; 	// jf
disk[2077] <= 32'b010000_00000_10000_0000000000000000; 	// li
disk[2078] <= 32'b010010_11101_10000_0000000001101010; 	// sw
disk[2079] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[2080] <= 32'b111110_00000000000000010111001001; 	// jal
disk[2081] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[2082] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[2083] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[2084] <= 32'b010010_11110_00101_1111111111111001; 	// sw
disk[2085] <= 32'b111100_00000000000000100000110100; 	// j
disk[2086] <= 32'b001111_11101_00101_0000000110111101; 	// lw
disk[2087] <= 32'b001111_11101_00110_0000000110111011; 	// lw
disk[2088] <= 32'b000000_00101_00110_10001_00000_001100; 	// eq
disk[2089] <= 32'b010101_10001_00000_0000100000110100; 	// jf
disk[2090] <= 32'b001111_11110_00111_1111111111111001; 	// lw
disk[2091] <= 32'b010000_00000_10011_0000000000000000; 	// li
disk[2092] <= 32'b000000_00111_10011_10010_00000_010000; 	// gt
disk[2093] <= 32'b010101_10010_00000_0000100000110010; 	// jf
disk[2094] <= 32'b001110_00111_00001_0000000000000000; 	// mov
disk[2095] <= 32'b111110_00000000000000010110101110; 	// jal
disk[2096] <= 32'b000010_11110_11110_0000000000000011; 	// subi
disk[2097] <= 32'b001110_11000_00101_0000000000000000; 	// mov
disk[2098] <= 32'b001111_11101_00101_0000000110101011; 	// lw
disk[2099] <= 32'b010010_11110_00101_1111111111111001; 	// sw
disk[2100] <= 32'b001111_11110_00101_1111111111111001; 	// lw
disk[2101] <= 32'b010010_11101_00101_0000000110111101; 	// sw
disk[2102] <= 32'b001111_11101_00110_0000000110111101; 	// lw
disk[2103] <= 32'b001110_00110_00001_0000000000000000; 	// mov
disk[2104] <= 32'b011110_00000_00001_0000000000000000; 	// lcd
disk[2105] <= 32'b111100_00000000000000011100110101; 	// j
disk[2106] <= 32'b111111_00000000000000000000000000; 	// halt
