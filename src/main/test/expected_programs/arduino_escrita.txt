********** Código intermediário **********

1: (function, main, _, _)
2: (param_list, 0, _, _)
3: (call, input, 0, t1)
4: (assign, n, t1, _)
5: (param_list, 1, _, _)
6: (set_param, n, _, _)
7: (call, sam, 1, t2)
8: (param_list, 2, _, _)
9: (set_param, 11, _, _)
10: (set_param, 1, _, _)
11: (call, output, 2, t3)
12: (param_list, 2, _, _)
13: (set_param, 1111, _, _)
14: (set_param, 2, _, _)
15: (call, output, 2, t4)
16: (syscall, _, _, _)

********** Código objeto **********

main:
    0:	addi	$sp, $sp, 2
    1:	preIO	
    2:	in	$t0
    3:	sw	$t0, 0($sp)
    4:	lw	$s0, 0($sp)
    5:	mov	$a0, $s0
    6:	sam	$a0
    7:	li	$a0, 11
    8:	li	$a1, 1
    9:	out	$a0, 1
    10:	li	$a0, 1111
    11:	li	$a1, 2
    12:	out	$a0, 2
    13:	subi	$sp, $sp, 2
    14:	syscall	, $k0

********** Código binário **********

disk[0] <= 32'b111101_00000000000000000000000001;		// Jump to Main
disk[1] <= 32'b000001_11110_11110_0000000000000010; 	// addi
disk[2] <= 32'b100100_00000000000000000000000000; 	// preIO
disk[3] <= 32'b010011_00000_01111_0000000000000000; 	// in
disk[4] <= 32'b010010_11110_01111_0000000000000000; 	// sw
disk[5] <= 32'b001111_11110_00101_0000000000000000; 	// lw
disk[6] <= 32'b001110_00101_00001_0000000000000000; 	// mov
disk[7] <= 32'b011001_00000_00001_0000000000000000; 	// sam
disk[8] <= 32'b010000_00000_00001_0000000000001011; 	// li
disk[9] <= 32'b010000_00000_00010_0000000000000001; 	// li
disk[10] <= 32'b010100_00000_00001_0000000000000001; 	// out
disk[11] <= 32'b010000_00000_00001_0000010001010111; 	// li
disk[12] <= 32'b010000_00000_00010_0000000000000010; 	// li
disk[13] <= 32'b010100_00000_00001_0000000000000010; 	// out
disk[14] <= 32'b000010_11110_11110_0000000000000010; 	// subi
disk[15] <= 32'b111001_11001_00000_0000000000000000; 	// syscall
